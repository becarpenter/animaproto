
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<!-- Generated by rfcdiff 1.42: rfcdiff  --> 
<!-- <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional" > -->
<!-- System: Linux zinfandel 3.2.0-4-amd64 #1 SMP Debian 3.2.35-2 x86_64 GNU/Linux --> 
<!-- Using awk: /usr/bin/gawk: GNU Awk 4.0.1 --> 
<!-- Using diff: /usr/bin/diff: diff (GNU diffutils) 3.2 --> 
<!-- Using wdiff: /usr/bin/wdiff: wdiff (GNU wdiff) 1.1.2 --> 
<html> 
<head> 
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 
  <meta http-equiv="Content-Style-Type" content="text/css" /> 
  <title>Diff: draft-carpenter-anima-gdn-protocol-04B.txt - draft-carpenter-anima-gdn-protocol-04C.txt</title> 
  <style type="text/css"> 
    body    { margin: 0.4ex; margin-right: auto; } 
    tr      { } 
    td      { white-space: pre; font-family: monospace; vertical-align: top; font-size: 0.86em;} 
    th      { font-size: 0.86em; } 
    .small  { font-size: 0.6em; font-style: italic; font-family: Verdana, Helvetica, sans-serif; } 
    .left   { background-color: #EEE; } 
    .right  { background-color: #FFF; } 
    .diff   { background-color: #CCF; } 
    .lblock { background-color: #BFB; } 
    .rblock { background-color: #FF8; } 
    .insert { background-color: #8FF; } 
    .delete { background-color: #ACF; } 
    .void   { background-color: #FFB; } 
    .cont   { background-color: #EEE; } 
    .linebr { background-color: #AAA; } 
    .lineno { color: red; background-color: #FFF; font-size: 0.7em; text-align: right; padding: 0 2px; } 
    .elipsis{ background-color: #AAA; } 
    .left .cont { background-color: #DDD; } 
    .right .cont { background-color: #EEE; } 
    .lblock .cont { background-color: #9D9; } 
    .rblock .cont { background-color: #DD6; } 
    .insert .cont { background-color: #0DD; } 
    .delete .cont { background-color: #8AD; } 
    .stats, .stats td, .stats th { background-color: #EEE; padding: 2px 0; } 
  </style> 
</head> 
<body > 
  <table border="0" cellpadding="0" cellspacing="0"> 
  <tr bgcolor="orange"><th></th><th><a href="/rfcdiff?url2=draft-carpenter-anima-gdn-protocol-04B.txt" style="color:#008; text-decoration:none;">&lt;</a>&nbsp;<a href="https://tools.ietf.org/html/draft-carpenter-anima-gdn-protocol-04B.txt" style="color:#008">draft-carpenter-anima-gdn-protocol-04B.txt</a>&nbsp;</th><th> </th><th>&nbsp;<a href="https://tools.ietf.org/html/draft-carpenter-anima-gdn-protocol-04C.txt" style="color:#008">draft-carpenter-anima-gdn-protocol-04C.txt</a>&nbsp;<a href="/rfcdiff?url1=draft-carpenter-anima-gdn-protocol-04C.txt" style="color:#008; text-decoration:none;">&gt;</a></th><th></th></tr> 
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">Network Working Group                                       B. Carpenter</td><td> </td><td class="right">Network Working Group                                       B. Carpenter</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">Internet-Draft                                         Univ. of Auckland</td><td> </td><td class="right">Internet-Draft                                         Univ. of Auckland</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">Intended status: Standards Track                                  B. Liu</td><td> </td><td class="right">Intended status: Standards Track                                  B. Liu</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0001" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">Expires: December <span class="delete">13,</span> 2015                  Huawei Technologies Co., Ltd</td><td> </td><td class="rblock">Expires: December <span class="insert">22,</span> 2015                  Huawei Technologies Co., Ltd</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">                                                           June <span class="delete">11,</span> 2015</td><td> </td><td class="rblock">                                                           June <span class="insert">20,</span> 2015</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"> A Generic Discovery and Negotiation Protocol for Autonomic Networking</td><td> </td><td class="right"> A Generic Discovery and Negotiation Protocol for Autonomic Networking</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">                 draft-carpenter-anima-gdn-protocol-04</td><td> </td><td class="right">                 draft-carpenter-anima-gdn-protocol-04</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">Abstract</td><td> </td><td class="right">Abstract</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   This document establishes requirements for a signaling protocol that</td><td> </td><td class="right">   This document establishes requirements for a signaling protocol that</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   enables autonomic devices and autonomic service agents to dynamically</td><td> </td><td class="right">   enables autonomic devices and autonomic service agents to dynamically</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   discover peers, to synchronize state with them, and to negotiate</td><td> </td><td class="right">   discover peers, to synchronize state with them, and to negotiate</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   parameter settings mutually with them.  The document then defines a</td><td> </td><td class="right">   parameter settings mutually with them.  The document then defines a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l2" /><small>skipping to change at</small><em> page 1, line 38</em></th><th> </th><th><a name="part-r2" /><small>skipping to change at</small><em> page 1, line 38</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Internet-Drafts are working documents of the Internet Engineering</td><td> </td><td class="right">   Internet-Drafts are working documents of the Internet Engineering</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Task Force (IETF).  Note that other groups may also distribute</td><td> </td><td class="right">   Task Force (IETF).  Note that other groups may also distribute</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   working documents as Internet-Drafts.  The list of current Internet-</td><td> </td><td class="right">   working documents as Internet-Drafts.  The list of current Internet-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Drafts is at http://datatracker.ietf.org/drafts/current/.</td><td> </td><td class="right">   Drafts is at http://datatracker.ietf.org/drafts/current/.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Internet-Drafts are draft documents valid for a maximum of six months</td><td> </td><td class="right">   Internet-Drafts are draft documents valid for a maximum of six months</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   and may be updated, replaced, or obsoleted by other documents at any</td><td> </td><td class="right">   and may be updated, replaced, or obsoleted by other documents at any</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   time.  It is inappropriate to use Internet-Drafts as reference</td><td> </td><td class="right">   time.  It is inappropriate to use Internet-Drafts as reference</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   material or to cite them other than as "work in progress."</td><td> </td><td class="right">   material or to cite them other than as "work in progress."</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0002" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   This Internet-Draft will expire on December <span class="delete">13</span>, 2015.</td><td> </td><td class="rblock">   This Internet-Draft will expire on December <span class="insert">22</span>, 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">Copyright Notice</td><td> </td><td class="right">Copyright Notice</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Copyright (c) 2015 IETF Trust and the persons identified as the</td><td> </td><td class="right">   Copyright (c) 2015 IETF Trust and the persons identified as the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   document authors.  All rights reserved.</td><td> </td><td class="right">   document authors.  All rights reserved.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   This document is subject to BCP 78 and the IETF Trust's Legal</td><td> </td><td class="right">   This document is subject to BCP 78 and the IETF Trust's Legal</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Provisions Relating to IETF Documents</td><td> </td><td class="right">   Provisions Relating to IETF Documents</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   (http://trustee.ietf.org/license-info) in effect on the date of</td><td> </td><td class="right">   (http://trustee.ietf.org/license-info) in effect on the date of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   publication of this document.  Please review these documents</td><td> </td><td class="right">   publication of this document.  Please review these documents</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l3" /><small>skipping to change at</small><em> page 2, line 22</em></th><th> </th><th><a name="part-r3" /><small>skipping to change at</small><em> page 2, line 22</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   2.  Requirement Analysis of Discovery, Synchronization and</td><td> </td><td class="right">   2.  Requirement Analysis of Discovery, Synchronization and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4</td><td> </td><td class="right">       Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     2.1.  Requirements for Discovery  . . . . . . . . . . . . . . .   4</td><td> </td><td class="right">     2.1.  Requirements for Discovery  . . . . . . . . . . . . . . .   4</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     2.2.  Requirements for Synchronization and Negotiation</td><td> </td><td class="right">     2.2.  Requirements for Synchronization and Negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">           Capability  . . . . . . . . . . . . . . . . . . . . . . .   6</td><td> </td><td class="right">           Capability  . . . . . . . . . . . . . . . . . . . . . . .   6</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     2.3.  Specific Technical Requirements . . . . . . . . . . . . .   8</td><td> </td><td class="right">     2.3.  Specific Technical Requirements . . . . . . . . . . . . .   8</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   3.  GDNP Protocol Overview  . . . . . . . . . . . . . . . . . . .   9</td><td> </td><td class="right">   3.  GDNP Protocol Overview  . . . . . . . . . . . . . . . . . . .   9</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     3.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   9</td><td> </td><td class="right">     3.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   9</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     3.2.  High-Level Design Choices . . . . . . . . . . . . . . . .  11</td><td> </td><td class="right">     3.2.  High-Level Design Choices . . . . . . . . . . . . . . . .  11</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     3.3.  GDNP Protocol Basic Properties and Mechanisms . . . . . .  14</td><td> </td><td class="right">     3.3.  GDNP Protocol Basic Properties and Mechanisms . . . . . .  14</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0003" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.3.1.  Required External Security Mechanism  . . . . . . . .  1<span class="delete">4</span></td><td> </td><td class="rblock">       3.3.1.  Required External Security Mechanism  . . . . . . . .  1<span class="insert">5</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       3.3.2.  Transport Layer Usage . . . . . . . . . . . . . . . .  15</td><td> </td><td class="right">       3.3.2.  Transport Layer Usage . . . . . . . . . . . . . . . .  15</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       3.3.3.  Discovery Mechanism and Procedures  . . . . . . . . .  15</td><td> </td><td class="right">       3.3.3.  Discovery Mechanism and Procedures  . . . . . . . . .  15</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       3.3.4.  Negotiation Procedures  . . . . . . . . . . . . . . .  17</td><td> </td><td class="right">       3.3.4.  Negotiation Procedures  . . . . . . . . . . . . . . .  17</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       3.3.5.  Synchronization Procedure . . . . . . . . . . . . . .  18</td><td> </td><td class="right">       3.3.5.  Synchronization Procedure . . . . . . . . . . . . . .  18</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0004" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">     3.4.  GDNP Constants  . . . . . . . . . . . . . . . . . . . . .  <span class="delete">19</span></td><td> </td><td class="rblock">     3.4.  GDNP Constants  . . . . . . . . . . . . . . . . . . . . .  <span class="insert">20</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">     3.5.  Session Identifier (Session ID) . . . . . . . . . . . . .  <span class="delete">19</span></td><td> </td><td class="rblock">     3.5.  Session Identifier (Session ID) . . . . . . . . . . . . .  <span class="insert">20</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">     3.6.  GDNP Messages . . . . . . . . . . . . . . . . . . . . . .  20</td><td> </td><td class="right">     3.6.  GDNP Messages . . . . . . . . . . . . . . . . . . . . . .  20</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0005" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.6.1.  GDNP Message Format . . . . . . . . . . . . . . . . .  <span class="delete">20</span></td><td> </td><td class="rblock">       3.6.1.  GDNP Message Format . . . . . . . . . . . . . . . . .  <span class="insert">21</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.6.2.  Discovery Message . . . . . . . . . . . . . . . . . .  <span class="delete">20</span></td><td> </td><td class="rblock">       3.6.2.  Discovery Message . . . . . . . . . . . . . . . . . .  <span class="insert">21</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.6.3.  Response Message  . . . . . . . . . . . . . . . . . .  <span class="delete">21</span></td><td> </td><td class="rblock">       3.6.3.  Response Message  . . . . . . . . . . . . . . . . . .  <span class="insert">22</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       3.6.4.  Request Message . . . . . . . . . . . . . . . . . . .  22</td><td> </td><td class="right">       3.6.4.  Request Message . . . . . . . . . . . . . . . . . . .  22</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0006" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.6.5.  Negotiation Message . . . . . . . . . . . . . . . . .  <span class="delete">22</span></td><td> </td><td class="rblock">       3.6.5.  Negotiation Message . . . . . . . . . . . . . . . . .  <span class="insert">23</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.6.6.  Negotiation-ending Message  . . . . . . . . . . . . .  <span class="delete">22</span></td><td> </td><td class="rblock">       3.6.6.  Negotiation-ending Message  . . . . . . . . . . . . .  <span class="insert">23</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">       3.6.7.  Confirm-waiting Message . . . . . . . . . . . . . . .  23</td><td> </td><td class="right">       3.6.7.  Confirm-waiting Message . . . . . . . . . . . . . . .  23</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0007" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">     3.7.  GDNP General Options  . . . . . . . . . . . . . . . . . .  <span class="delete">23</span></td><td> </td><td class="rblock">     3.7.  GDNP General Options  . . . . . . . . . . . . . . . . . .  <span class="insert">24</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.1.  Format of GDNP Options  . . . . . . . . . . . . . . .  <span class="delete">23</span></td><td> </td><td class="rblock">       3.7.1.  Format of GDNP Options  . . . . . . . . . . . . . . .  <span class="insert">24</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.2.  Divert Option . . . . . . . . . . . . . . . . . . . .  <span class="delete">23</span></td><td> </td><td class="rblock">       3.7.2.  Divert Option . . . . . . . . . . . . . . . . . . . .  <span class="insert">24</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.3.  Accept Option . . . . . . . . . . . . . . . . . . . .  <span class="delete">24</span></td><td> </td><td class="rblock">       3.7.3.  Accept Option . . . . . . . . . . . . . . . . . . . .  <span class="insert">25</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.4.  Decline Option  . . . . . . . . . . . . . . . . . . .  <span class="delete">24</span></td><td> </td><td class="rblock">       3.7.4.  Decline Option  . . . . . . . . . . . . . . . . . . .  <span class="insert">25</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.5.  Waiting Time Option . . . . . . . . . . . . . . . . .  <span class="delete">25</span></td><td> </td><td class="rblock">       3.7.5.  Waiting Time Option . . . . . . . . . . . . . . . . .  <span class="insert">26</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.6.  Device Identity Option  . . . . . . . . . . . . . . .  <span class="delete">26</span></td><td> </td><td class="rblock">       3.7.6.  Device Identity Option  . . . . . . . . . . . . . . .  <span class="insert">27</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.7.7.  Locator Options . . . . . . . . . . . . . . . . . . .  <span class="delete">26</span></td><td> </td><td class="rblock">       3.7.7.  Locator Options . . . . . . . . . . . . . . . . . . .  <span class="insert">27</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">     3.8.  Objective Options . . . . . . . . . . . . . . . . . . . .  <span class="delete">28</span></td><td> </td><td class="rblock">     3.8.  Objective Options . . . . . . . . . . . . . . . . . . . .  <span class="insert">29</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.8.1.  Format of Objective Options . . . . . . . . . . . . .  <span class="delete">28</span></td><td> </td><td class="rblock">       3.8.1.  Format of Objective Options . . . . . . . . . . . . .  <span class="insert">29</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.8.2.  General Considerations for Objective Options  . . . .  <span class="delete">29</span></td><td> </td><td class="rblock">       3.8.2.  General Considerations for Objective Options  . . . .  <span class="insert">30</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.8.3.  Organizing of Objective Options . . . . . . . . . . .  <span class="delete">29</span></td><td> </td><td class="rblock">       3.8.3.  Organizing of Objective Options . . . . . . . . . . .  <span class="insert">30</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.8.4.  Vendor Specific Objective Options . . . . . . . . . .  <span class="delete">30</span></td><td> </td><td class="rblock">       3.8.4.  Vendor Specific Objective Options . . . . . . . . . .  <span class="insert">31</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">       3.8.5.  Experimental Objective Options  . . . . . . . . . . .  <span class="delete">31</span></td><td> </td><td class="rblock">       3.8.5.  Experimental Objective Options  . . . . . . . . . . .  <span class="insert">32</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   4.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">31</span></td><td> </td><td class="rblock">   4.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">32</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  <span class="delete">35</span></td><td> </td><td class="rblock">   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  <span class="insert">36</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  <span class="delete">36</span></td><td> </td><td class="rblock">   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  <span class="insert">37</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">37</span></td><td> </td><td class="rblock">   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">38</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   8.  Change log [RFC Editor: Please remove]  . . . . . . . . . . .  <span class="delete">38</span></td><td> </td><td class="rblock">   8.  Change log [RFC Editor: Please remove]  . . . . . . . . . . .  <span class="insert">39</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">39</span></td><td> </td><td class="rblock">   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">40</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  <span class="delete">39</span></td><td> </td><td class="rblock">     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  <span class="insert">40</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">     9.2.  Informative References  . . . . . . . . . . . . . . . . .  <span class="delete">39</span></td><td> </td><td class="rblock">     9.2.  Informative References  . . . . . . . . . . . . . . . . .  <span class="insert">40</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   Appendix A.  Capability Analysis of Current Protocols . . . . . .  <span class="delete">42</span></td><td> </td><td class="rblock">   Appendix A.  Capability Analysis of Current Protocols . . . . . .  <span class="insert">43</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">45</span></td><td> </td><td class="rblock">   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">46</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">1.  Introduction</td><td> </td><td class="right">1.  Introduction</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   The success of the Internet has made IP-based networks bigger and</td><td> </td><td class="right">   The success of the Internet has made IP-based networks bigger and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   more complicated.  Large-scale ISP and enterprise networks have</td><td> </td><td class="right">   more complicated.  Large-scale ISP and enterprise networks have</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   become more and more problematic for human based management.  Also,</td><td> </td><td class="right">   become more and more problematic for human based management.  Also,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   operational costs are growing quickly.  Consequently, there are</td><td> </td><td class="right">   operational costs are growing quickly.  Consequently, there are</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   increased requirements for autonomic behavior in the networks.</td><td> </td><td class="right">   increased requirements for autonomic behavior in the networks.</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0008" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   General aspects of autonomic networks are discussed in</td><td> </td><td class="rblock">   General aspects of autonomic networks are discussed in <span class="insert">[RFC7575]</span> and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">[I-D.irtf-nmrg-autonomic-network-definitions]</span> and</td><td> </td><td class="rblock">   <span class="insert">[RFC7576].</span>  A reference model for autonomic networking is given in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">[I-D.irtf-nmrg-an-gap-analysis].</span>  A reference model for autonomic</td><td> </td><td class="rblock">   [I-D.behringer-anima-reference-model].  In order to fulfil autonomy,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   networking is given in [I-D.behringer-anima-reference-model].  In</td><td> </td><td class="rblock">   devices that embody autonomic service agents have specific signaling</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   order to fulfil autonomy, devices that embody autonomic service</td><td> </td><td class="rblock">   requirements.  In particular they need to discover each other, to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   agents have specific signaling requirements.  In particular they need</td><td> </td><td class="rblock">   synchronize state with each other, and to negotiate parameters and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   to discover each other, to synchronize state with each other, and to</td><td> </td><td class="rblock">   resources directly with each other.  There is no restriction on the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   negotiate parameters and resources directly with each other.  There</td><td> </td><td class="rblock">   type of parameters and resources concerned, which include very basic</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   is no restriction on the type of parameters and resources concerned,</td><td> </td><td class="rblock">   information needed for addressing and routing, as well as anything</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   which include very basic information needed for addressing and</td><td> </td><td class="rblock">   else that might be configured in a conventional <span class="insert">non-autonomic</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   routing, as well as anything else that might be configured in a</td><td> </td><td class="rblock">   network.  The atomic unit of synchronization or negotiation is</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   conventional network.  The atomic unit of synchronization or</td><td> </td><td class="rblock">   referred to as <span class="insert">a technical</span> objective, <span class="insert">i.e, a configurable parameter</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   negotiation is referred to as <span class="delete">an</span> objective, <span class="delete">defined</span> more precisely</td><td> </td><td class="rblock"><span class="insert">   or set of parameters (defined</span> more precisely in <span class="insert">Section 3.1).</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">later</span> in <span class="delete">this document.</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Following this Introduction, Section 2 describes the requirements for</td><td> </td><td class="right">   Following this Introduction, Section 2 describes the requirements for</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   discovery, synchronization and negotiation.  Negotiation is an</td><td> </td><td class="right">   discovery, synchronization and negotiation.  Negotiation is an</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   iterative process, requiring multiple message exchanges forming a</td><td> </td><td class="right">   iterative process, requiring multiple message exchanges forming a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   closed loop between the negotiating devices.  State synchronization,</td><td> </td><td class="right">   closed loop between the negotiating devices.  State synchronization,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   when needed, can be regarded as a special case of negotiation,</td><td> </td><td class="right">   when needed, can be regarded as a special case of negotiation,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   without iteration.  Section 3.2 describes a behavior model for a</td><td> </td><td class="right">   without iteration.  Section 3.2 describes a behavior model for a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   protocol intended to support discovery, synchronization and</td><td> </td><td class="right">   protocol intended to support discovery, synchronization and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   negotiation.  The design of Generic Discovery and Negotiation</td><td> </td><td class="right">   negotiation.  The design of Generic Discovery and Negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Protocol (GDNP) in Section 3 of this document is mainly based on this</td><td> </td><td class="right">   Protocol (GDNP) in Section 3 of this document is mainly based on this</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l4" /><small>skipping to change at</small><em> page 4, line 31</em></th><th> </th><th><a name="part-r4" /><small>skipping to change at</small><em> page 4, line 30</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   autonomic nodes will be managed traditionally.  Such mixed scenarios</td><td> </td><td class="right">   autonomic nodes will be managed traditionally.  Such mixed scenarios</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   are not discussed in this specification.</td><td> </td><td class="right">   are not discussed in this specification.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">2.  Requirement Analysis of Discovery, Synchronization and Negotiation</td><td> </td><td class="right">2.  Requirement Analysis of Discovery, Synchronization and Negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   This section discusses the requirements for discovery, negotiation</td><td> </td><td class="right">   This section discusses the requirements for discovery, negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   and synchronization capabilities.  The primary user of the protocol</td><td> </td><td class="right">   and synchronization capabilities.  The primary user of the protocol</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   is an autonomic service agent (ASA), so the requirements are mainly</td><td> </td><td class="right">   is an autonomic service agent (ASA), so the requirements are mainly</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   expressed as the features needed by an ASA.  A single physical device</td><td> </td><td class="right">   expressed as the features needed by an ASA.  A single physical device</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   might contain several ASAs, and a single ASA might manage several</td><td> </td><td class="right">   might contain several ASAs, and a single ASA might manage several</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0009" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   objectives.</td><td> </td><td class="rblock">   <span class="insert">technical </span>objectives.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">2.1.  Requirements for Discovery</td><td> </td><td class="right">2.1.  Requirements for Discovery</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   1.  ASAs may be designed to manage anything, as required in</td><td> </td><td class="right">   1.  ASAs may be designed to manage anything, as required in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Section 2.2.  A basic requirement is therefore that the protocol can</td><td> </td><td class="right">   Section 2.2.  A basic requirement is therefore that the protocol can</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0010" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   represent and discover any kind of <span class="delete">network</span> objective among arbitrary</td><td> </td><td class="rblock">   represent and discover any kind of <span class="insert">technical</span> objective among</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   subsets of participating nodes.</td><td> </td><td class="rblock">   arbitrary subsets of participating nodes.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   In an autonomic network we must assume that when a device starts up</td><td> </td><td class="right">   In an autonomic network we must assume that when a device starts up</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   it has no information about any peer devices, the network structure,</td><td> </td><td class="right">   it has no information about any peer devices, the network structure,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   or what specific role it must play.  The ASA(s) inside the device are</td><td> </td><td class="right">   or what specific role it must play.  The ASA(s) inside the device are</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   in the same situation.  In some cases, when a new application session</td><td> </td><td class="right">   in the same situation.  In some cases, when a new application session</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   starts up within a device, the device or ASA may again lack</td><td> </td><td class="right">   starts up within a device, the device or ASA may again lack</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   information about relevant peers.  It might be necessary to set up</td><td> </td><td class="right">   information about relevant peers.  It might be necessary to set up</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   resources on multiple other devices, coordinated and matched to each</td><td> </td><td class="right">   resources on multiple other devices, coordinated and matched to each</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   other so that there is no wasted resource.  Security settings might</td><td> </td><td class="right">   other so that there is no wasted resource.  Security settings might</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   also need updating to allow for the new device or user.  The relevant</td><td> </td><td class="right">   also need updating to allow for the new device or user.  The relevant</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l5" /><small>skipping to change at</small><em> page 5, line 15</em></th><th> </th><th><a name="part-r5" /><small>skipping to change at</small><em> page 5, line 15</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   three requirements:</td><td> </td><td class="right">   three requirements:</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   2.  When an ASA first starts up, it has no knowledge of the specific</td><td> </td><td class="right">   2.  When an ASA first starts up, it has no knowledge of the specific</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   network to which it is attached.  Therefore the discovery process</td><td> </td><td class="right">   network to which it is attached.  Therefore the discovery process</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   must be able to support any network scenario, assuming only that the</td><td> </td><td class="right">   must be able to support any network scenario, assuming only that the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   device concerned is bootstrapped from factory condition.</td><td> </td><td class="right">   device concerned is bootstrapped from factory condition.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   3.  When an ASA starts up, it must require no information about any</td><td> </td><td class="right">   3.  When an ASA starts up, it must require no information about any</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   peers in order to discover them.</td><td> </td><td class="right">   peers in order to discover them.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0011" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   4.  If an ASA supports multiple objectives, relevant peers may be</td><td> </td><td class="rblock">   4.  If an ASA supports multiple <span class="insert">technical</span> objectives, relevant peers</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   different for different discovery objectives, so discovery needs to</td><td> </td><td class="rblock">   may be different for different discovery objectives, so discovery</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   be repeated to find counterparts for each objective.  Thus, there</td><td> </td><td class="rblock">   needs to be repeated to find counterparts for each objective.  Thus,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   must be a mechanism by which an ASA can separately discover peer ASAs</td><td> </td><td class="rblock">   there must be a mechanism by which an ASA can separately discover</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   for each of the technical objectives that it needs to manage,</td><td> </td><td class="rblock">   peer ASAs for each of the technical objectives that it needs to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   whenever necessary.</td><td> </td><td class="rblock">   manage, whenever necessary.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   5.  Following discovery, an ASA will normally perform negotiation or</td><td> </td><td class="right">   5.  Following discovery, an ASA will normally perform negotiation or</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   synchronization for the corresponding objectives.  The design should</td><td> </td><td class="right">   synchronization for the corresponding objectives.  The design should</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   allow for this by associating discovery, negotiation and</td><td> </td><td class="right">   allow for this by associating discovery, negotiation and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   synchronization objectives.  It may provide an optional mechanism to</td><td> </td><td class="right">   synchronization objectives.  It may provide an optional mechanism to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   combine discovery and negotiation/synchronization in a single call.</td><td> </td><td class="right">   combine discovery and negotiation/synchronization in a single call.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   6.  Some objectives may only be significant on the local link, but</td><td> </td><td class="right">   6.  Some objectives may only be significant on the local link, but</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   others may be significant across the routed network and require off-</td><td> </td><td class="right">   others may be significant across the routed network and require off-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   link operations.  Thus, the relevant peers might be immediate</td><td> </td><td class="right">   link operations.  Thus, the relevant peers might be immediate</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l6" /><small>skipping to change at</small><em> page 5, line 44</em></th><th> </th><th><a name="part-r6" /><small>skipping to change at</small><em> page 5, line 44</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   technical objectives.</td><td> </td><td class="right">   technical objectives.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   7.  The discovery process should be flexible enough to allow for</td><td> </td><td class="right">   7.  The discovery process should be flexible enough to allow for</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   special cases, such as the following:</td><td> </td><td class="right">   special cases, such as the following:</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  In some networks, as mentioned above, there will be some</td><td> </td><td class="right">   o  In some networks, as mentioned above, there will be some</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      hierarchical structure, at least for certain synchronization or</td><td> </td><td class="right">      hierarchical structure, at least for certain synchronization or</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      negotiation objectives, but this is unknown in advance.  The</td><td> </td><td class="right">      negotiation objectives, but this is unknown in advance.  The</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      discovery protocol must therefore operate regardless of</td><td> </td><td class="right">      discovery protocol must therefore operate regardless of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      hierarchical structure, which is an attribute of individual</td><td> </td><td class="right">      hierarchical structure, which is an attribute of individual</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0012" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      objectives and not of the autonomic network as a whole.  This is</td><td> </td><td class="rblock">      <span class="insert">technical</span> objectives and not of the autonomic network as a whole.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      part of the more general requirement to discover off-link peers.</td><td> </td><td class="rblock">      This is part of the more general requirement to discover off-link</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">      peers.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  During initialisation, a device must be able to establish mutual</td><td> </td><td class="right">   o  During initialisation, a device must be able to establish mutual</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      trust with the rest of the network and join an authentication</td><td> </td><td class="right">      trust with the rest of the network and join an authentication</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      mechanism.  Although this will inevitably start with a discovery</td><td> </td><td class="right">      mechanism.  Although this will inevitably start with a discovery</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      action, it is a special case precisely because trust is not yet</td><td> </td><td class="right">      action, it is a special case precisely because trust is not yet</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      established.  This topic is the subject of</td><td> </td><td class="right">      established.  This topic is the subject of</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0013" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">                                                                         </span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      [I-D.pritikin-anima-bootstrapping-keyinfra].  We require that once</td><td> </td><td class="right">      [I-D.pritikin-anima-bootstrapping-keyinfra].  We require that once</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      trust has been established for a device, all ASAs within the</td><td> </td><td class="right">      trust has been established for a device, all ASAs within the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      device inherit the device's credentials and are also trusted.</td><td> </td><td class="right">      device inherit the device's credentials and are also trusted.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Depending on the type of network involved, discovery of other</td><td> </td><td class="right">   o  Depending on the type of network involved, discovery of other</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0014" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      central functions might be needed, such as the Network Operations</td><td> </td><td class="rblock">      central functions might be needed, such as <span class="insert">a source of Intent</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      Center (NOC) [I-D.eckert-anima-stable-connectivity].  The protocol</td><td> </td><td class="rblock"><span class="insert">      distribution [RFC7575] or</span> the Network Operations Center (NOC)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      must be capable of supporting such discovery during</td><td> </td><td class="rblock">      [I-D.eckert-anima-stable-connectivity].  The protocol must be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      initialisation, as well as discovery during ongoing operation.</td><td> </td><td class="rblock">      capable of supporting such discovery during initialisation, as</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">      well as discovery during ongoing operation.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   8.  The discovery process must not generate excessive (multicast)</td><td> </td><td class="right">   8.  The discovery process must not generate excessive (multicast)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   traffic and must take account of sleeping nodes in the case of a</td><td> </td><td class="right">   traffic and must take account of sleeping nodes in the case of a</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0015" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   resource-constrained network.</td><td> </td><td class="rblock">   resource-constrained network<span class="insert"> [RFC7228]</span>.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">2.2.  Requirements for Synchronization and Negotiation Capability</td><td> </td><td class="right">2.2.  Requirements for Synchronization and Negotiation Capability</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   As background, consider the example of routing protocols, the closest</td><td> </td><td class="right">   As background, consider the example of routing protocols, the closest</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   approximation to autonomic networking already in widespread use.</td><td> </td><td class="right">   approximation to autonomic networking already in widespread use.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Routing protocols use a largely autonomic model based on distributed</td><td> </td><td class="right">   Routing protocols use a largely autonomic model based on distributed</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   devices that communicate repeatedly with each other.  The focus is</td><td> </td><td class="right">   devices that communicate repeatedly with each other.  The focus is</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   reachability, so current routing protocols mainly consider simple</td><td> </td><td class="right">   reachability, so current routing protocols mainly consider simple</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   link status, i.e., up or down, and an underlying assumption is that</td><td> </td><td class="right">   link status, i.e., up or down, and an underlying assumption is that</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   all nodes need a consistent view of the network topology in order for</td><td> </td><td class="right">   all nodes need a consistent view of the network topology in order for</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l7" /><small>skipping to change at</small><em> page 7, line 5</em></th><th> </th><th><a name="part-r7" /><small>skipping to change at</small><em> page 7, line 6</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   9.  A basic requirement for the protocol is therefore the ability to</td><td> </td><td class="right">   9.  A basic requirement for the protocol is therefore the ability to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   represent, discover, synchronize and negotiate almost any kind of</td><td> </td><td class="right">   represent, discover, synchronize and negotiate almost any kind of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   network parameter among arbitrary subsets of participating nodes.</td><td> </td><td class="right">   network parameter among arbitrary subsets of participating nodes.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   10.  Negotiation is a request/response process that must be</td><td> </td><td class="right">   10.  Negotiation is a request/response process that must be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   guaranteed to terminate (with success or failure) and if necessary it</td><td> </td><td class="right">   guaranteed to terminate (with success or failure) and if necessary it</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   must contain tie-breaking rules for each technical objective that</td><td> </td><td class="right">   must contain tie-breaking rules for each technical objective that</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   requires them.  While these must be defined specifically for each use</td><td> </td><td class="right">   requires them.  While these must be defined specifically for each use</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   case, the protocol should have some general mechanisms in support of</td><td> </td><td class="right">   case, the protocol should have some general mechanisms in support of</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0016" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   loop and deadlock prevention.</td><td> </td><td class="rblock">   loop and deadlock prevention<span class="insert">, such as hop count limits or timeouts</span>.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   11.  Synchronization might concern small groups of nodes or very</td><td> </td><td class="right">   11.  Synchronization might concern small groups of nodes or very</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   large groups.  Different solutions might be needed at different</td><td> </td><td class="right">   large groups.  Different solutions might be needed at different</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   scales.</td><td> </td><td class="right">   scales.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   12.  To avoid "reinventing the wheel", the protocol should be able to</td><td> </td><td class="right">   12.  To avoid "reinventing the wheel", the protocol should be able to</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0017" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   carry the message formats used by existing configuration protocols in</td><td> </td><td class="rblock">   carry the message formats used by existing configuration protocols</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   cases where that is convenient.</td><td> </td><td class="rblock">   <span class="insert">(such as NETCONF/YANG)</span> in cases where that is convenient.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   13.  Human intervention in complex situations is costly and error-</td><td> </td><td class="right">   13.  Human intervention in complex situations is costly and error-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   prone.  Therefore, synchronization or negotiation of parameters</td><td> </td><td class="right">   prone.  Therefore, synchronization or negotiation of parameters</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   without human intervention is desirable whenever the coordination of</td><td> </td><td class="right">   without human intervention is desirable whenever the coordination of</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0018" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   multiple devices can improve overall network performance.  It follows</td><td> </td><td class="rblock">   multiple devices can improve overall network performance.  It</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   that <span class="delete">a requirement for</span> the <span class="delete">protocol is to</span> be capable of running in</td><td> </td><td class="rblock">   <span class="insert">therefore</span> follows that the <span class="insert">protocol, as part of the Autonomic</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   any device that would otherwise need human intervention.</td><td> </td><td class="rblock"><span class="insert">   Networking Infrastructure, must</span> be capable of running in any device</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">   that would otherwise need human intervention.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   14.  Human intervention in large networks is often replaced by use of</td><td> </td><td class="right">   14.  Human intervention in large networks is often replaced by use of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   a top-down network management system (NMS).  It therefore follows</td><td> </td><td class="right">   a top-down network management system (NMS).  It therefore follows</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0019" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   that <span class="delete">a requirement for</span> the <span class="delete">protocol is to</span> be capable of running in</td><td> </td><td class="rblock">   that the <span class="insert">protocol, as part of the Autonomic Networking</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   any device that would otherwise be managed by an NMS, and that it can</td><td> </td><td class="rblock"><span class="insert">   Infrastructure, must</span> be capable of running in any device that would</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   co-exist with an <span class="delete">NMS.</span></td><td> </td><td class="rblock">   otherwise be managed by an NMS, and that it can co-exist with an <span class="insert">NMS,</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   and with protocols such as SNMP and NETCONF.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   15.  Some features are expected to be implemented by individual ASAs,</td><td> </td><td class="right">   15.  Some features are expected to be implemented by individual ASAs,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   but the protocol must be general enough to allow them:</td><td> </td><td class="right">   but the protocol must be general enough to allow them:</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Dependencies and conflicts: In order to decide a configuration on</td><td> </td><td class="right">   o  Dependencies and conflicts: In order to decide a configuration on</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      a given device, the device may need information from neighbors.</td><td> </td><td class="right">      a given device, the device may need information from neighbors.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      This can be established through the negotiation procedure, or</td><td> </td><td class="right">      This can be established through the negotiation procedure, or</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      through synchronization if that is sufficient.  However, a given</td><td> </td><td class="right">      through synchronization if that is sufficient.  However, a given</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      item in a neighbor may depend on other information from its own</td><td> </td><td class="right">      item in a neighbor may depend on other information from its own</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      neighbors, which may need another negotiation or synchronization</td><td> </td><td class="right">      neighbors, which may need another negotiation or synchronization</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l8" /><small>skipping to change at</small><em> page 8, line 29</em></th><th> </th><th><a name="part-r8" /><small>skipping to change at</small><em> page 8, line 31</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   16.  The protocol will be able to deal with a wide variety of</td><td> </td><td class="right">   16.  The protocol will be able to deal with a wide variety of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   technical objectives, covering any type of network parameter.</td><td> </td><td class="right">   technical objectives, covering any type of network parameter.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Therefore the protocol will need either an explicit information model</td><td> </td><td class="right">   Therefore the protocol will need either an explicit information model</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   describing its messages, or at least a flexible and extensible</td><td> </td><td class="right">   describing its messages, or at least a flexible and extensible</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   message format.  One design consideration is whether to adopt an</td><td> </td><td class="right">   message format.  One design consideration is whether to adopt an</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   existing information model or to design a new one.</td><td> </td><td class="right">   existing information model or to design a new one.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">2.3.  Specific Technical Requirements</td><td> </td><td class="right">2.3.  Specific Technical Requirements</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   17.  It should be convenient for ASA designers to define new</td><td> </td><td class="right">   17.  It should be convenient for ASA designers to define new</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0020" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   objectives and for programmers to express them, without excessive</td><td> </td><td class="rblock">   <span class="insert">technical</span> objectives and for programmers to express them, without</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   impact on run-time efficiency and footprint.  The classes of device</td><td> </td><td class="rblock">   excessive impact on run-time efficiency and footprint.  The classes</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   in which the protocol might run is discussed in</td><td> </td><td class="rblock">   of device in which the protocol might run is discussed in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.behringer-anima-reference-model].</td><td> </td><td class="right">   [I-D.behringer-anima-reference-model].</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   18.  The protocol should be extensible in case the initially defined</td><td> </td><td class="right">   18.  The protocol should be extensible in case the initially defined</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   discovery, synchronization and negotiation mechanisms prove to be</td><td> </td><td class="right">   discovery, synchronization and negotiation mechanisms prove to be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   insufficient.</td><td> </td><td class="right">   insufficient.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   19.  To be a generic platform, the protocol payload format should be</td><td> </td><td class="right">   19.  To be a generic platform, the protocol payload format should be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   independent of the transport protocol or IP version.  In particular,</td><td> </td><td class="right">   independent of the transport protocol or IP version.  In particular,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   it should be able to run over IPv6 or IPv4.  However, some functions,</td><td> </td><td class="right">   it should be able to run over IPv6 or IPv4.  However, some functions,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   such as multicasting or broadcasting on a link, might need to be IP</td><td> </td><td class="right">   such as multicasting or broadcasting on a link, might need to be IP</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   version dependent.  In case of doubt, IPv6 should be preferred.</td><td> </td><td class="right">   version dependent.  In case of doubt, IPv6 should be preferred.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   20.  The protocol must be able to access off-link counterparts via</td><td> </td><td class="right">   20.  The protocol must be able to access off-link counterparts via</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   routable addresses, i.e., must not be restricted to link-local</td><td> </td><td class="right">   routable addresses, i.e., must not be restricted to link-local</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   operation.</td><td> </td><td class="right">   operation.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   21.  It must also be possible for an external discovery mechanism to</td><td> </td><td class="right">   21.  It must also be possible for an external discovery mechanism to</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0021" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   be used, if appropriate for a given objective.  In other words, GDNP</td><td> </td><td class="rblock">   be used, if appropriate for a given <span class="insert">technical</span> objective.  In other</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   discovery must not be a prerequisite for GDNP negotiation or</td><td> </td><td class="rblock">   words, GDNP discovery must not be a prerequisite for GDNP negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   synchronization; the prerequisite is discovering a peer's locator by</td><td> </td><td class="rblock">   or synchronization; the prerequisite is discovering a peer's locator</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   any method.</td><td> </td><td class="rblock">   by any method.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   22.  ASAs and the signaling protocol engine need to run</td><td> </td><td class="right">   22.  ASAs and the signaling protocol engine need to run</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   asynchronously when wait states occur.</td><td> </td><td class="right">   asynchronously when wait states occur.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0022" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   23.  Intent: There must be provision for general <span class="delete">policy intent</span> rules</td><td> </td><td class="rblock">   23.  Intent: There must be provision for general <span class="insert">Intent</span> rules to be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   to be applied by all devices in the network (e.g., security rules,</td><td> </td><td class="rblock">   applied by all devices in the network (e.g., security rules, prefix</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   prefix length, resource sharing rules).  However, <span class="delete">intent</span> distribution</td><td> </td><td class="rblock">   length, resource sharing rules).  However, <span class="insert">Intent</span> distribution might</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   might not use the signaling protocol <span class="delete">itself.</span></td><td> </td><td class="rblock">   not use the signaling protocol <span class="insert">itself, but its design should not</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   exclude such use.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   24.  Management monitoring, alerts and intervention: Devices should</td><td> </td><td class="right">   24.  Management monitoring, alerts and intervention: Devices should</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   be able to report to a monitoring system.  Some events must be able</td><td> </td><td class="right">   be able to report to a monitoring system.  Some events must be able</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   to generate operator alerts and some provision for emergency</td><td> </td><td class="right">   to generate operator alerts and some provision for emergency</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   intervention must be possible (e.g.  to freeze synchronization or</td><td> </td><td class="right">   intervention must be possible (e.g.  to freeze synchronization or</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0023" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   negotiation in a mis-behaving device).  These features <span class="delete">may</span> not use</td><td> </td><td class="rblock">   negotiation in a mis-behaving device).  These features <span class="insert">might</span> not use</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   the signaling protocol <span class="delete">itself.</span></td><td> </td><td class="rblock">   the signaling protocol <span class="insert">itself, but its design should not exclude such</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   use.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   25.  The protocol needs to be fully secured against forged messages</td><td> </td><td class="right">   25.  The protocol needs to be fully secured against forged messages</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   and man-in-the middle attacks, and secured as much as reasonably</td><td> </td><td class="right">   and man-in-the middle attacks, and secured as much as reasonably</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   possible against denial of service attacks.  It needs to be capable</td><td> </td><td class="right">   possible against denial of service attacks.  It needs to be capable</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   of encryption in order to resist unwanted monitoring, although this</td><td> </td><td class="right">   of encryption in order to resist unwanted monitoring, although this</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   capability may not be required in all deployments.  However, it is</td><td> </td><td class="right">   capability may not be required in all deployments.  However, it is</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   not required that the protocol itself provides these security</td><td> </td><td class="right">   not required that the protocol itself provides these security</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   features; it may depend on an existing secure environment.</td><td> </td><td class="right">   features; it may depend on an existing secure environment.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">3.  GDNP Protocol Overview</td><td> </td><td class="right">3.  GDNP Protocol Overview</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l9" /><small>skipping to change at</small><em> page 9, line 40</em></th><th> </th><th><a name="part-r9" /><small>skipping to change at</small><em> page 9, line 45</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">3.1.  Terminology</td><td> </td><td class="right">3.1.  Terminology</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",</td><td> </td><td class="right">   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and</td><td> </td><td class="right">   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   "OPTIONAL" in this document are to be interpreted as described in</td><td> </td><td class="right">   "OPTIONAL" in this document are to be interpreted as described in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC2119] when they appear in ALL CAPS.  When these words are not in</td><td> </td><td class="right">   [RFC2119] when they appear in ALL CAPS.  When these words are not in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   ALL CAPS (such as "should" or "Should"), they have their usual</td><td> </td><td class="right">   ALL CAPS (such as "should" or "Should"), they have their usual</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   English meanings, and are not to be interpreted as [RFC2119] key</td><td> </td><td class="right">   English meanings, and are not to be interpreted as [RFC2119] key</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   words.</td><td> </td><td class="right">   words.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0024" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   This document uses terminology defined in</td><td> </td><td class="rblock">   This document uses terminology defined in <span class="insert">[RFC7575].</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">[I-D.irtf-nmrg-autonomic-network-definitions].</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   The following additional terms are used throughout this document:</td><td> </td><td class="right">   The following additional terms are used throughout this document:</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Discovery: a process by which an ASA discovers peers according to</td><td> </td><td class="right">   o  Discovery: a process by which an ASA discovers peers according to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      a specific discovery objective.  The discovery results may be</td><td> </td><td class="right">      a specific discovery objective.  The discovery results may be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      different according to the different discovery objectives.  The</td><td> </td><td class="right">      different according to the different discovery objectives.  The</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      discovered peers may later be used as negotiation counterparts or</td><td> </td><td class="right">      discovered peers may later be used as negotiation counterparts or</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      as sources of synchronization data.</td><td> </td><td class="right">      as sources of synchronization data.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Negotiation: a process by which two (or more) ASAs interact</td><td> </td><td class="right">   o  Negotiation: a process by which two (or more) ASAs interact</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      iteratively to agree on parameter settings that best satisfy the</td><td> </td><td class="right">      iteratively to agree on parameter settings that best satisfy the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      objectives of one or more ASAs.</td><td> </td><td class="right">      objectives of one or more ASAs.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  State Synchronization: a process by which two (or more) ASAs</td><td> </td><td class="right">   o  State Synchronization: a process by which two (or more) ASAs</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      interact to agree on the current state of parameter values stored</td><td> </td><td class="right">      interact to agree on the current state of parameter values stored</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      in each ASA.  This is a special case of negotiation in which</td><td> </td><td class="right">      in each ASA.  This is a special case of negotiation in which</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      information is sent but the ASAs do not request their peers to</td><td> </td><td class="right">      information is sent but the ASAs do not request their peers to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      change parameter settings.  All other definitions apply to both</td><td> </td><td class="right">      change parameter settings.  All other definitions apply to both</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      negotiation and synchronization.</td><td> </td><td class="right">      negotiation and synchronization.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0025" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   o  <span class="delete">Objective: An</span> objective <span class="delete">in GDNP</span> is a configurable <span class="delete">state</span> of some</td><td> </td><td class="rblock">   o  <span class="insert">Technical Objective (usually abbreviated as Objective): A</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      kind, which occurs in three contexts: Discovery, Negotiation and</td><td> </td><td class="rblock"><span class="insert">      technical</span> objective is a configurable <span class="insert">parameter or set of</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      Synchronization.  In the protocol, an objective is represented by</td><td> </td><td class="rblock"><span class="insert">      parameters</span> of some kind, which occurs in three contexts:</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      an identifier (actually a GDNP option number) and if relevant a</td><td> </td><td class="rblock">      Discovery, Negotiation and Synchronization.  In the protocol, an</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      value.  Normally, a given objective will occur during discovery</td><td> </td><td class="rblock">      objective is represented by an identifier (actually a GDNP option</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      and negotiation, or during discovery and synchronization, but not</td><td> </td><td class="rblock">      number) and if relevant a value.  Normally, a given objective will</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      in all three contexts.</td><td> </td><td class="rblock">      occur during discovery and negotiation, or during discovery and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">      synchronization, but not in all three contexts.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      *  One ASA may support multiple independent objectives.</td><td> </td><td class="right">      *  One ASA may support multiple independent objectives.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      *  The parameter described by a given objective is naturally based</td><td> </td><td class="right">      *  The parameter described by a given objective is naturally based</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         on a specific service or function or action.  It may in</td><td> </td><td class="right">         on a specific service or function or action.  It may in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         principle be anything that can be set to a specific logical,</td><td> </td><td class="right">         principle be anything that can be set to a specific logical,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         numerical or string value, or a more complex data structure, by</td><td> </td><td class="right">         numerical or string value, or a more complex data structure, by</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         a network node.  That node is generally expected to contain an</td><td> </td><td class="right">         a network node.  That node is generally expected to contain an</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         ASA which may itself manage other nodes.</td><td> </td><td class="right">         ASA which may itself manage other nodes.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l10" /><small>skipping to change at</small><em> page 11, line 40</em></th><th> </th><th><a name="part-r10" /><small>skipping to change at</small><em> page 11, line 43</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   adaptation and extension of one of the protocols discussed in</td><td> </td><td class="right">   adaptation and extension of one of the protocols discussed in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Appendix A might be an option.  This whole specification is subject</td><td> </td><td class="right">   Appendix A might be an option.  This whole specification is subject</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   to change as a result.</td><td> </td><td class="right">   to change as a result.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  A generic platform</td><td> </td><td class="right">   o  A generic platform</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      The protocol is designed as a generic platform, which is</td><td> </td><td class="right">      The protocol is designed as a generic platform, which is</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      independent from the synchronization or negotiation contents.  It</td><td> </td><td class="right">      independent from the synchronization or negotiation contents.  It</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      takes care of the general intercommunication between counterparts.</td><td> </td><td class="right">      takes care of the general intercommunication between counterparts.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      The technical contents will vary according to the various</td><td> </td><td class="right">      The technical contents will vary according to the various</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0026" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      <span class="delete">synchronization or negotiation</span> objectives and the different pairs</td><td> </td><td class="rblock">      <span class="insert">technical</span> objectives and the different pairs of counterparts.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      of counterparts.</td><td> </td><td class="rblock">                                                                         </td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">o  The protocol is expected to form part of an Autonomic Networking</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      Infrastructure [I-D.behringer-anima-reference-model].  It will</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      provide services to ASAs via a suitable application programming</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      interface, which will reflect the protocol elements but will not</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      necessarily be in one-to-one correspondence to them.  It is</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      expected that the protocol engine and each ASA will run as</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      independent asynchronous processes.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Security infrastructure and trust relationship</td><td> </td><td class="right">   o  Security infrastructure and trust relationship</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      Because this negotiation protocol may directly cause changes to</td><td> </td><td class="right">      Because this negotiation protocol may directly cause changes to</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      device configurations and bring significant impacts to a running</td><td> </td><td class="right">      device configurations and bring significant impacts to a running</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      network, this protocol is assumed to run within an existing secure</td><td> </td><td class="right">      network, this protocol is assumed to run within an existing secure</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      environment with strong authentication.</td><td> </td><td class="right">      environment with strong authentication.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      On the other hand, a limited negotiation model might be deployed</td><td> </td><td class="right">      On the other hand, a limited negotiation model might be deployed</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      based on a limited trust relationship.  For example, between two</td><td> </td><td class="right">      based on a limited trust relationship.  For example, between two</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l11" /><small>skipping to change at</small><em> page 12, line 33</em></th><th> </th><th><a name="part-r11" /><small>skipping to change at</small><em> page 12, line 43</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  A uniform pattern for technical contents</td><td> </td><td class="right">   o  A uniform pattern for technical contents</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      The synchronization and negotiation contents are defined according</td><td> </td><td class="right">      The synchronization and negotiation contents are defined according</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      to a uniform pattern.  They could be carried either in simple TLV</td><td> </td><td class="right">      to a uniform pattern.  They could be carried either in simple TLV</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      (Type, Length and Value) format or in payloads described by a</td><td> </td><td class="right">      (Type, Length and Value) format or in payloads described by a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      flexible language.  The initial protocol design uses the TLV</td><td> </td><td class="right">      flexible language.  The initial protocol design uses the TLV</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      approach.  The format is extensible for unknown future</td><td> </td><td class="right">      approach.  The format is extensible for unknown future</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      requirements.</td><td> </td><td class="right">      requirements.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0027" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   o  A <span class="delete">conservativ</span>e model for synchronization</td><td> </td><td class="rblock">   o  A <span class="insert">flexibl</span>e model for synchronization</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      GDNP supports bilateral synchronization, which could be used to</td><td> </td><td class="right">      GDNP supports bilateral synchronization, which could be used to</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0028" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      perform synchronization among a small number of nodes.</td><td> </td><td class="rblock">      perform synchronization among a small number of nodes.  <span class="insert">It also</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      supports an unsolicited flooding mode when large groups of nodes,</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      possibly including all autonomic nodes, need data for the same</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      technical objective.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0029" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      *  <span class="delete">For some parameters, synchronization across large groups of</span></td><td> </td><td class="rblock">      *  <span class="insert">There may</span> be <span class="insert">some network parameters for which</span> a <span class="insert">more</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">         nodes, possibly including all autonomic nodes, might</span> be <span class="delete">needed.</span></td><td> </td><td class="rblock"><span class="insert">         traditional</span> flooding mechanism such as ADNCP</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">         For such cases,</span> a flooding mechanism such as ADNCP</td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         [I-D.stenberg-anima-adncp] is considered more appropriate.</td><td> </td><td class="right">         [I-D.stenberg-anima-adncp] is considered more appropriate.</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0030" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         GDNP can coexist with ADNCP.  <span class="delete">The choice is left to the</span></td><td> </td><td class="rblock">         GDNP can coexist with ADNCP.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">         designers of individual ASAs.</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  A simple initiator/responder model for negotiation</td><td> </td><td class="right">   o  A simple initiator/responder model for negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      Multi-party negotiations are too complicated to be modeled and</td><td> </td><td class="right">      Multi-party negotiations are too complicated to be modeled and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      there might be too many dependencies among the parties to converge</td><td> </td><td class="right">      there might be too many dependencies among the parties to converge</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      efficiently.  A simple initiator/responder model is more feasible</td><td> </td><td class="right">      efficiently.  A simple initiator/responder model is more feasible</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      and can complete multi-party negotiations by indirect steps.</td><td> </td><td class="right">      and can complete multi-party negotiations by indirect steps.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Organizing of synchronization or negotiation content</td><td> </td><td class="right">   o  Organizing of synchronization or negotiation content</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l12" /><small>skipping to change at</small><em> page 13, line 21</em></th><th> </th><th><a name="part-r12" /><small>skipping to change at</small><em> page 13, line 31</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      functions or services is kept independent from each other.  They</td><td> </td><td class="right">      functions or services is kept independent from each other.  They</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      are not combined into a single option or single session because</td><td> </td><td class="right">      are not combined into a single option or single session because</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      these contents may be negotiated or synchronized with different</td><td> </td><td class="right">      these contents may be negotiated or synchronized with different</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      counterparts or may be different in response time.</td><td> </td><td class="right">      counterparts or may be different in response time.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Self-aware network device</td><td> </td><td class="right">   o  Self-aware network device</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      Every autonomic device will be pre-loaded with various functions</td><td> </td><td class="right">      Every autonomic device will be pre-loaded with various functions</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      and ASAs and will be aware of its own capabilities, typically</td><td> </td><td class="right">      and ASAs and will be aware of its own capabilities, typically</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      decided by the hardware, firmware or pre-installed software.  Its</td><td> </td><td class="right">      decided by the hardware, firmware or pre-installed software.  Its</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0031" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      exact role may depend on <span class="delete">policy intent</span> and on the surrounding</td><td> </td><td class="rblock">      exact role may depend on <span class="insert">Intent</span> and on the surrounding network</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      network behaviors, which may include forwarding behaviors,</td><td> </td><td class="rblock">      behaviors, which may include forwarding behaviors, aggregation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      aggregation properties, topology location, bandwidth, tunnel or</td><td> </td><td class="rblock">      properties, topology location, bandwidth, tunnel or translation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      translation properties, etc.  The surrounding topology will depend</td><td> </td><td class="rblock">      properties, etc.  The surrounding topology will depend on the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      on the network planning.  Following an initial discovery phase,</td><td> </td><td class="rblock">      network planning.  Following an initial discovery phase, the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      the device properties and those of its neighbors are the</td><td> </td><td class="rblock">      device properties and those of its neighbors are the foundation of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      foundation of the synchronization or negotiation behavior of a</td><td> </td><td class="rblock">      the synchronization or negotiation behavior of a specific device.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      specific device.  A device has no pre-configuration for the</td><td> </td><td class="rblock">      A device has no pre-configuration for the particular network in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      particular network in which it is installed.</td><td> </td><td class="rblock">      which it is installed.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Requests and responses in negotiation procedures</td><td> </td><td class="right">   o  Requests and responses in negotiation procedures</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      The initiator can negotiate with its relevant negotiation</td><td> </td><td class="right">      The initiator can negotiate with its relevant negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      counterpart ASAs, which may be different according to the specific</td><td> </td><td class="right">      counterpart ASAs, which may be different according to the specific</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      negotiation objective.  It can request relevant information from</td><td> </td><td class="right">      negotiation objective.  It can request relevant information from</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      the negotiation counterpart so that it can decide its local</td><td> </td><td class="right">      the negotiation counterpart so that it can decide its local</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      configuration to give the most coordinated performance.  It can</td><td> </td><td class="right">      configuration to give the most coordinated performance.  It can</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      request the negotiation counterpart to make a matching</td><td> </td><td class="right">      request the negotiation counterpart to make a matching</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      configuration in order to set up a successful communication with</td><td> </td><td class="right">      configuration in order to set up a successful communication with</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l13" /><small>skipping to change at</small><em> page 14, line 20</em></th><th> </th><th><a name="part-r13" /><small>skipping to change at</small><em> page 14, line 27</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      suggested value of the third or later negotiation steps should be</td><td> </td><td class="right">      suggested value of the third or later negotiation steps should be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      chosen between the suggested values from the last two negotiation</td><td> </td><td class="right">      chosen between the suggested values from the last two negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      steps.  In any case there must be a mechanism to guarantee</td><td> </td><td class="right">      steps.  In any case there must be a mechanism to guarantee</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      convergence (or failure) in a small number of steps, such as a</td><td> </td><td class="right">      convergence (or failure) in a small number of steps, such as a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      timeout or maximum number of iterations.</td><td> </td><td class="right">      timeout or maximum number of iterations.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      *  End of negotiation</td><td> </td><td class="right">      *  End of negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         A limited number of rounds, for example three, or a timeout, is</td><td> </td><td class="right">         A limited number of rounds, for example three, or a timeout, is</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         needed on each ASA for each negotiation objective.  It may be</td><td> </td><td class="right">         needed on each ASA for each negotiation objective.  It may be</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0032" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         an implementation choice, a pre-configurable parameter, or <span class="delete">a</span></td><td> </td><td class="rblock">         an implementation choice, a pre-configurable parameter, or</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">         network-wide policy intent.</span>  These choices might vary between</td><td> </td><td class="rblock">         <span class="insert">network Intent.</span>  These choices might vary between different</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         different types of ASA.  Therefore, the definition of each</td><td> </td><td class="rblock">         types of ASA.  Therefore, the definition of each negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         negotiation objective MUST clearly specify this, so that the</td><td> </td><td class="rblock">         objective MUST clearly specify this, so that the negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         negotiation can always be terminated properly.</td><td> </td><td class="rblock">         can always be terminated properly.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      *  Failed negotiation</td><td> </td><td class="right">      *  Failed negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         There must be a well-defined procedure for concluding that a</td><td> </td><td class="right">         There must be a well-defined procedure for concluding that a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         negotiation cannot succeed, and if so deciding what happens</td><td> </td><td class="right">         negotiation cannot succeed, and if so deciding what happens</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         next (deadlock resolution, tie-breaking, or revert to best-</td><td> </td><td class="right">         next (deadlock resolution, tie-breaking, or revert to best-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         effort service).  Again, this MUST be specified for individual</td><td> </td><td class="right">         effort service).  Again, this MUST be specified for individual</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         negotiation objectives, as an implementation choice, a pre-</td><td> </td><td class="right">         negotiation objectives, as an implementation choice, a pre-</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0033" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         configurable parameter, or <span class="delete">a network-wide policy i</span>ntent.</td><td> </td><td class="rblock">         configurable parameter, or <span class="insert">network I</span>ntent.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">3.3.  GDNP Protocol Basic Properties and Mechanisms</td><td> </td><td class="right">3.3.  GDNP Protocol Basic Properties and Mechanisms</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0034" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">                                                                         </span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">3.3.1.  Required External Security Mechanism</td><td> </td><td class="right">3.3.1.  Required External Security Mechanism</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   The protocol SHOULD run within a secure Autonomic Control Plane (ACP)</td><td> </td><td class="right">   The protocol SHOULD run within a secure Autonomic Control Plane (ACP)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.behringer-anima-autonomic-control-plane].  The procedure for</td><td> </td><td class="right">   [I-D.behringer-anima-autonomic-control-plane].  The procedure for</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   establishing the ACP MUST provide a flag indicating to GDNP that the</td><td> </td><td class="right">   establishing the ACP MUST provide a flag indicating to GDNP that the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   ACP has been established.</td><td> </td><td class="right">   ACP has been established.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   If there is no ACP, the protocol MUST use TLS [RFC5246] or DTLS</td><td> </td><td class="right">   If there is no ACP, the protocol MUST use TLS [RFC5246] or DTLS</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC6347] for all messages, based on a local Public Key</td><td> </td><td class="right">   [RFC6347] for all messages, based on a local Public Key</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Infrastructure (PKI) [RFC5280] managed within the autonomic network</td><td> </td><td class="right">   Infrastructure (PKI) [RFC5280] managed within the autonomic network</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l14" /><small>skipping to change at</small><em> page 16, line 33</em></th><th> </th><th><a name="part-r14" /><small>skipping to change at</small><em> page 16, line 46</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         the DISCOVERY message MAY be repeated, with a newly generated</td><td> </td><td class="right">         the DISCOVERY message MAY be repeated, with a newly generated</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         Session ID (Section 3.5).  An exponential backoff SHOULD be</td><td> </td><td class="right">         Session ID (Section 3.5).  An exponential backoff SHOULD be</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         used for subsequent repetitions, in order to mitigate possible</td><td> </td><td class="right">         used for subsequent repetitions, in order to mitigate possible</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         denial of service attacks.</td><td> </td><td class="right">         denial of service attacks.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         After a GDNP device successfully discovers a Discovery</td><td> </td><td class="right">         After a GDNP device successfully discovers a Discovery</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         Responder supporting a specific objective, it MUST cache this</td><td> </td><td class="right">         Responder supporting a specific objective, it MUST cache this</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         information.  This cache record MAY be used for future</td><td> </td><td class="right">         information.  This cache record MAY be used for future</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         negotiation or synchronization, and SHOULD be passed on when</td><td> </td><td class="right">         negotiation or synchronization, and SHOULD be passed on when</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         appropriate as a Divert option to another Discovery Initiator.</td><td> </td><td class="right">         appropriate as a Divert option to another Discovery Initiator.</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0035" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         The cache lifetime is an implementation <span class="delete">choice.</span></td><td> </td><td class="rblock">         The cache lifetime is an implementation <span class="insert">choice that MAY be</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">         modified by network Intent.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         If multiple Discovery Responders are found for the same</td><td> </td><td class="right">         If multiple Discovery Responders are found for the same</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         objective, they SHOULD all be cached, unless this creates a</td><td> </td><td class="right">         objective, they SHOULD all be cached, unless this creates a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         resource shortage.  The method of choosing between multiple</td><td> </td><td class="right">         resource shortage.  The method of choosing between multiple</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         responders is an implementation choice.</td><td> </td><td class="right">         responders is an implementation choice.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         A GDNP device with multiple link-layer interfaces (typically a</td><td> </td><td class="right">         A GDNP device with multiple link-layer interfaces (typically a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         router) MUST support discovery on all interfaces.  If it</td><td> </td><td class="right">         router) MUST support discovery on all interfaces.  If it</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         receives a DISCOVERY message on a given interface for a</td><td> </td><td class="right">         receives a DISCOVERY message on a given interface for a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         specific objective that it does not support and for which it</td><td> </td><td class="right">         specific objective that it does not support and for which it</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         has not previously discovered a Discovery Responder, it MUST</td><td> </td><td class="right">         has not previously discovered a Discovery Responder, it MUST</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         relay the query by re-issuing the same DISCOVERY message on its</td><td> </td><td class="right">         relay the query by re-issuing the same DISCOVERY message on its</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         other interfaces.  However, it MUST limit the total rate at</td><td> </td><td class="right">         other interfaces.  However, it MUST limit the total rate at</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         which it relays discovery messages to a reasonable value, in</td><td> </td><td class="right">         which it relays discovery messages to a reasonable value, in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         order to mitigate possible denial of service attacks.  It MUST</td><td> </td><td class="right">         order to mitigate possible denial of service attacks.  It MUST</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         cache the Session ID value of each relayed discovery message</td><td> </td><td class="right">         cache the Session ID value of each relayed discovery message</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         and, to prevent loops, MUST NOT relay a DISCOVERY message which</td><td> </td><td class="right">         and, to prevent loops, MUST NOT relay a DISCOVERY message which</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0036" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">         carries such a cached Session ID.</td><td> </td><td class="rblock">         carries such a cached Session ID.  <span class="insert">These precautions avoid</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">         discovery loops.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         This relayed discovery mechanism, with caching of the results,</td><td> </td><td class="right">         This relayed discovery mechanism, with caching of the results,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         should be sufficient to support most network bootstrapping</td><td> </td><td class="right">         should be sufficient to support most network bootstrapping</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">         scenarios.</td><td> </td><td class="right">         scenarios.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  A complete discovery process will start with multicast on the</td><td> </td><td class="right">   o  A complete discovery process will start with multicast on the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      local link; a neighbor might divert it to an off-link destination,</td><td> </td><td class="right">      local link; a neighbor might divert it to an off-link destination,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      which could be a default higher-level gateway in a hierarchical</td><td> </td><td class="right">      which could be a default higher-level gateway in a hierarchical</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      network.  Then discovery would continue with a unicast to that</td><td> </td><td class="right">      network.  Then discovery would continue with a unicast to that</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      gateway; if that gateway is still not the right counterpart, it</td><td> </td><td class="right">      gateway; if that gateway is still not the right counterpart, it</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l15" /><small>skipping to change at</small><em> page 18, line 21</em></th><th> </th><th><a name="part-r15" /><small>skipping to change at</small><em> page 18, line 40</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      In this case the Discovery message also acts as a Request message</td><td> </td><td class="right">      In this case the Discovery message also acts as a Request message</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      to indicate to the Discovery Responder that it could directly</td><td> </td><td class="right">      to indicate to the Discovery Responder that it could directly</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      reply to the Discovery Initiator with a Negotiation message for</td><td> </td><td class="right">      reply to the Discovery Initiator with a Negotiation message for</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      rapid processing, if it could act as the corresponding negotiation</td><td> </td><td class="right">      rapid processing, if it could act as the corresponding negotiation</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      counterpart.  However, the indication is only advisory not</td><td> </td><td class="right">      counterpart.  However, the indication is only advisory not</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      prescriptive.</td><td> </td><td class="right">      prescriptive.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      This rapid mode could reduce the interactions between nodes so</td><td> </td><td class="right">      This rapid mode could reduce the interactions between nodes so</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      that a higher efficiency could be achieved.  This rapid</td><td> </td><td class="right">      that a higher efficiency could be achieved.  This rapid</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      negotiation function SHOULD be configured off by default and MAY</td><td> </td><td class="right">      negotiation function SHOULD be configured off by default and MAY</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0037" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      be configured on or off by <span class="delete">policy i</span>ntent.</td><td> </td><td class="rblock">      be configured on or off by <span class="insert">I</span>ntent.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">3.3.5.  Synchronization Procedure</td><td> </td><td class="right">3.3.5.  Synchronization Procedure</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   A synchronization initiator sends a synchronization request to a</td><td> </td><td class="right">   A synchronization initiator sends a synchronization request to a</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   counterpart, including a specific synchronization objective.  The</td><td> </td><td class="right">   counterpart, including a specific synchronization objective.  The</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   counterpart responds with a Response message containing the current</td><td> </td><td class="right">   counterpart responds with a Response message containing the current</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   value of the requested synchronization objective.  No further</td><td> </td><td class="right">   value of the requested synchronization objective.  No further</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   messages are needed.  If no Response message is received, the</td><td> </td><td class="right">   messages are needed.  If no Response message is received, the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   synchronization request MAY be repeated after a suitable timeout.</td><td> </td><td class="right">   synchronization request MAY be repeated after a suitable timeout.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   In the case just described, the message exchange is unicast and</td><td> </td><td class="right">   In the case just described, the message exchange is unicast and</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   concerns only one synchronization objective.  For large groups of</td><td> </td><td class="right">   concerns only one synchronization objective.  For large groups of</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0038" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   nodes requiring <span class="delete">mutual synchronization, ADNCP</span></td><td> </td><td class="rblock">   nodes requiring <span class="insert">the same data, synchronization flooding</span> is <span class="insert">available.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">   [I-D.stenberg-anima-adncp]</span> is <span class="delete">considered</span> more <span class="delete">appropriate.</span>  In the</td><td> </td><td class="rblock"><span class="insert">   For this, a synchronization responder MAY send an unsolicited</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">following case, several</span> synchronization <span class="delete">objectives may</span> be <span class="delete">combined.</span></td><td> </td><td class="rblock"><span class="insert">   Response message containing one or</span> more <span class="insert">Synchronization Objective</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   option(s), if and only if the specification of those objectives</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   permits it.  This is sent as a multicast message to the</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   ALL_GDNP_NEIGHBOR multicast address (Section 3.4).</span>  In <span class="insert">this case a</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   suitable mechanism is needed to avoid excessive multicast traffic.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   This mechanism MUST be defined as part of the specification of</span> the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">   synchronization <span class="insert">objective(s) concerned.  It might</span> be <span class="insert">a simple rate</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   limit or a more complex mechanism such as the Trickle algorithm</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   [RFC6206].</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   A GDNP device with multiple link-layer interfaces (typically a</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   router) MUST support synchronization flooding on all interfaces.  If</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   it receives a multicast unsolicited Response message on a given</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   interface, it MUST relay it by re-issuing the same Response message</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   on its other interfaces.  However, it MUST limit the total rate at</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   which it relays Response messages to a reasonable value, in order to</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   mitigate possible denial of service attacks.  It MUST cache the</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Session ID value of each relayed discovery message and, to prevent</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   loops, MUST NOT relay a Response message which carries such a cached</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Session ID.  These precautions avoid synchronization loops.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Note that this mechanism is unreliable in the case of sleeping nodes.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Sleeping nodes that require an objective subject to synchronization</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   flooding SHOULD periodically initiate normal synchronization for that</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   objective.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Rapid Mode (Discovery/Synchronization linkage)</td><td> </td><td class="right">   Rapid Mode (Discovery/Synchronization linkage)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      A Discovery message MAY include one or more Synchronization</td><td> </td><td class="right">      A Discovery message MAY include one or more Synchronization</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      Objective option(s).  In this case the Discovery message also acts</td><td> </td><td class="right">      Objective option(s).  In this case the Discovery message also acts</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      as a Request message to indicate to the Discovery Responder that</td><td> </td><td class="right">      as a Request message to indicate to the Discovery Responder that</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      it could directly reply to the Discovery Initiator with a Response</td><td> </td><td class="right">      it could directly reply to the Discovery Initiator with a Response</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      message with synchronization data for rapid processing, if the</td><td> </td><td class="right">      message with synchronization data for rapid processing, if the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      discovery target supports the corresponding synchronization</td><td> </td><td class="right">      discovery target supports the corresponding synchronization</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      objective(s).  However, the indication is only advisory not</td><td> </td><td class="right">      objective(s).  However, the indication is only advisory not</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      prescriptive.</td><td> </td><td class="right">      prescriptive.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      This rapid mode could reduce the interactions between nodes so</td><td> </td><td class="right">      This rapid mode could reduce the interactions between nodes so</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      that a higher efficiency could be achieved.  This rapid</td><td> </td><td class="right">      that a higher efficiency could be achieved.  This rapid</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      synchronization function SHOULD be configured off by default and</td><td> </td><td class="right">      synchronization function SHOULD be configured off by default and</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0039" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      MAY be configured on or off by <span class="delete">policy i</span>ntent.</td><td> </td><td class="rblock">      MAY be configured on or off by <span class="insert">I</span>ntent.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">3.4.  GDNP Constants</td><td> </td><td class="right">3.4.  GDNP Constants</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  ALL_GDNP_NEIGHBOR</td><td> </td><td class="right">   o  ALL_GDNP_NEIGHBOR</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      A link-local scope multicast address used by a GDNP-enabled device</td><td> </td><td class="right">      A link-local scope multicast address used by a GDNP-enabled device</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      to discover GDNP-enabled neighbor (i.e., on-link) devices . All</td><td> </td><td class="right">      to discover GDNP-enabled neighbor (i.e., on-link) devices . All</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      devices that support GDNP are members of this multicast group.</td><td> </td><td class="right">      devices that support GDNP are members of this multicast group.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      *  IPv6 multicast address: TBD1</td><td> </td><td class="right">      *  IPv6 multicast address: TBD1</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l16" /><small>skipping to change at</small><em> page 34, line 19</em></th><th> </th><th><a name="part-r16" /><small>skipping to change at</small><em> page 35, line 19</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  13.  Emphasise that negotiation/synchronization are independent</td><td> </td><td class="right">   o  13.  Emphasise that negotiation/synchronization are independent</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      from discovery, although the rapid discovery mode includes the</td><td> </td><td class="right">      from discovery, although the rapid discovery mode includes the</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      first step of a negotiation/synchronization.  (Sheng)</td><td> </td><td class="right">      first step of a negotiation/synchronization.  (Sheng)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      RESOLVED by improved text.</td><td> </td><td class="right">      RESOLVED by improved text.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  14.  Do we need an unsolicited flooding mechanism for discovery</td><td> </td><td class="right">   o  14.  Do we need an unsolicited flooding mechanism for discovery</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      (for discovery results that everyone needs), to reduce scaling</td><td> </td><td class="right">      (for discovery results that everyone needs), to reduce scaling</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      impact of flooding discovery messages?  (Toerless)</td><td> </td><td class="right">      impact of flooding discovery messages?  (Toerless)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0040" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">      <span class="insert">RESOLVED: Yes, added to requirements and solution.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  15.  Do we need flag bits in Objective Options to distinguish</td><td> </td><td class="right">   o  15.  Do we need flag bits in Objective Options to distinguish</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      distinguish Synchronization and Negotiation "Request" or rapid</td><td> </td><td class="right">      distinguish Synchronization and Negotiation "Request" or rapid</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      mode "Discovery" messages?  (Bing)</td><td> </td><td class="right">      mode "Discovery" messages?  (Bing)</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      RESOLVED: yes, work on the API showed that these flags are</td><td> </td><td class="right">      RESOLVED: yes, work on the API showed that these flags are</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      essential.</td><td> </td><td class="right">      essential.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  16.  (Related to issue 14).  Should we revive the "unsolicited</td><td> </td><td class="right">   o  16.  (Related to issue 14).  Should we revive the "unsolicited</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      Response" for flooding synchronisation data?  This has to be done</td><td> </td><td class="right">      Response" for flooding synchronisation data?  This has to be done</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      carefully due to the well-known issues with flooding, but it could</td><td> </td><td class="right">      carefully due to the well-known issues with flooding, but it could</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0041" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">      be useful, e.g. for <span class="delete">i</span>ntent distribution, where DNCP doesn't seem</td><td> </td><td class="rblock">      be useful, e.g. for <span class="insert">I</span>ntent distribution, where DNCP doesn't seem</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      applicable.</td><td> </td><td class="right">      applicable.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  17.  Ensure that the discovery mechanism is completely proof</td><td> </td><td class="right">   o  17.  Ensure that the discovery mechanism is completely proof</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      against loops and protected against duplicate responses.</td><td> </td><td class="right">      against loops and protected against duplicate responses.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  18.  Discuss the handling of multiple valid discovery responses.</td><td> </td><td class="right">   o  18.  Discuss the handling of multiple valid discovery responses.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  19.  Should we use a text-oriented format such as JSON/CBOR</td><td> </td><td class="right">   o  19.  Should we use a text-oriented format such as JSON/CBOR</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      instead of native binary TLV format?</td><td> </td><td class="right">      instead of native binary TLV format?</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l17" /><small>skipping to change at</small><em> page 38, line 7</em></th><th> </th><th><a name="part-r17" /><small>skipping to change at</small><em> page 39, line 7</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Valuable comments were received from Michael Behringer, Jeferson</td><td> </td><td class="right">   Valuable comments were received from Michael Behringer, Jeferson</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Campos Nobre, Laurent Ciavaglia, Zongpeng Du, Yu Fu, Zhenbin Li,</td><td> </td><td class="right">   Campos Nobre, Laurent Ciavaglia, Zongpeng Du, Yu Fu, Zhenbin Li,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Dimitri Papadimitriou, Michael Richardson, Markus Stenberg, Rene</td><td> </td><td class="right">   Dimitri Papadimitriou, Michael Richardson, Markus Stenberg, Rene</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Struik, Dacheng Zhang, and other participants in the NMRG research</td><td> </td><td class="right">   Struik, Dacheng Zhang, and other participants in the NMRG research</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   group and the ANIMA working group.</td><td> </td><td class="right">   group and the ANIMA working group.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   This document was produced using the xml2rfc tool [RFC2629].</td><td> </td><td class="right">   This document was produced using the xml2rfc tool [RFC2629].</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">8.  Change log [RFC Editor: Please remove]</td><td> </td><td class="right">8.  Change log [RFC Editor: Please remove]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0042" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   draft-carpenter-anima-discovery-negotiation-protocol-04, 2015-06-<span class="delete">12</span>:</td><td> </td><td class="rblock">   draft-carpenter-anima-discovery-negotiation-protocol-04, 2015-06-<span class="insert">20</span>:</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Tuned wording around hierarchical structure.</td><td> </td><td class="right">   Tuned wording around hierarchical structure.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Changed "device" to "ASA" in many places.</td><td> </td><td class="right">   Changed "device" to "ASA" in many places.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Reformulated requirements to be clear that the ASA is the main</td><td> </td><td class="right">   Reformulated requirements to be clear that the ASA is the main</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0043" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   customer for <span class="delete">signaling,</span> and <span class="delete">following design discussions.</span></td><td> </td><td class="rblock">   customer for <span class="insert">signaling.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Added requirement for flooding unsolicited synch,</span> and <span class="insert">added it to</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   protocol spec.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Requirements clarified, expanded and rearranged following design team</td><td> </td><td class="right">   Requirements clarified, expanded and rearranged following design team</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   discussion.</td><td> </td><td class="right">   discussion.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Clarified that GDNP discovery must not be a prerequisite for GDNP</td><td> </td><td class="right">   Clarified that GDNP discovery must not be a prerequisite for GDNP</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   negotiation or synchronization (resolved issue 13).</td><td> </td><td class="right">   negotiation or synchronization (resolved issue 13).</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Specified flag bits for objective options (resolved issue 15).</td><td> </td><td class="right">   Specified flag bits for objective options (resolved issue 15).</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Clarified usage of ACP vs TLS/DTLS and TCP vs UDP (resolved issues</td><td> </td><td class="right">   Clarified usage of ACP vs TLS/DTLS and TCP vs UDP (resolved issues</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l18" /><small>skipping to change at</small><em> page 40, line 8</em></th><th> </th><th><a name="part-r18" /><small>skipping to change at</small><em> page 41, line 13</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">9.2.  Informative References</td><td> </td><td class="right">9.2.  Informative References</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.behringer-anima-autonomic-control-plane]</td><td> </td><td class="right">   [I-D.behringer-anima-autonomic-control-plane]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Behringer, M., Bjarnason, S., BL, B., and T. Eckert, "An</td><td> </td><td class="right">              Behringer, M., Bjarnason, S., BL, B., and T. Eckert, "An</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Autonomic Control Plane", draft-behringer-anima-autonomic-</td><td> </td><td class="right">              Autonomic Control Plane", draft-behringer-anima-autonomic-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              control-plane-02 (work in progress), March 2015.</td><td> </td><td class="right">              control-plane-02 (work in progress), March 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.behringer-anima-reference-model]</td><td> </td><td class="right">   [I-D.behringer-anima-reference-model]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,</td><td> </td><td class="right">              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              and B. Liu, "A Reference Model for Autonomic Networking",</td><td> </td><td class="right">              and B. Liu, "A Reference Model for Autonomic Networking",</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0044" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">              <span class="delete">draft-behringer-anima-reference-model-01</span> (work in</td><td> </td><td class="rblock">              <span class="insert">draft-behringer-anima-reference-model-02</span> (work in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">              progress), <span class="delete">April</span> 2015.</td><td> </td><td class="rblock">              progress), <span class="insert">June</span> 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.chaparadza-intarea-igcp]</td><td> </td><td class="right">   [I-D.chaparadza-intarea-igcp]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Behringer, M., Chaparadza, R., Petre, R., Li, X., and H.</td><td> </td><td class="right">              Behringer, M., Chaparadza, R., Petre, R., Li, X., and H.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Mahkonen, "IP based Generic Control Protocol (IGCP)",</td><td> </td><td class="right">              Mahkonen, "IP based Generic Control Protocol (IGCP)",</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              draft-chaparadza-intarea-igcp-00 (work in progress), July</td><td> </td><td class="right">              draft-chaparadza-intarea-igcp-00 (work in progress), July</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              2011.</td><td> </td><td class="right">              2011.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.eckert-anima-stable-connectivity]</td><td> </td><td class="right">   [I-D.eckert-anima-stable-connectivity]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Eckert, T. and M. Behringer, "Using Autonomic Control</td><td> </td><td class="right">              Eckert, T. and M. Behringer, "Using Autonomic Control</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Plane for Stable Connectivity of Network OAM", draft-</td><td> </td><td class="right">              Plane for Stable Connectivity of Network OAM", draft-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l19" /><small>skipping to change at</small><em> page 40, line 35</em></th><th> </th><th><a name="part-r19" /><small>skipping to change at</small><em> page 41, line 40</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              "Requirements for Scalable DNS-SD/mDNS Extensions", draft-</td><td> </td><td class="right">              "Requirements for Scalable DNS-SD/mDNS Extensions", draft-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              ietf-dnssd-requirements-06 (work in progress), March 2015.</td><td> </td><td class="right">              ietf-dnssd-requirements-06 (work in progress), March 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.ietf-homenet-dncp]</td><td> </td><td class="right">   [I-D.ietf-homenet-dncp]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Stenberg, M. and S. Barth, "Distributed Node Consensus</td><td> </td><td class="right">              Stenberg, M. and S. Barth, "Distributed Node Consensus</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Protocol", draft-ietf-homenet-dncp-05 (work in progress),</td><td> </td><td class="right">              Protocol", draft-ietf-homenet-dncp-05 (work in progress),</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              June 2015.</td><td> </td><td class="right">              June 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.ietf-homenet-hncp]</td><td> </td><td class="right">   [I-D.ietf-homenet-hncp]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Stenberg, M., Barth, S., and P. Pfister, "Home Networking</td><td> </td><td class="right">              Stenberg, M., Barth, S., and P. Pfister, "Home Networking</td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0045" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">              Control Protocol", draft-ietf-homenet-hncp-0<span class="delete">5</span> (work in</td><td> </td><td class="rblock">              Control Protocol", draft-ietf-homenet-hncp-0<span class="insert">6</span> (work in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              progress), June 2015.</td><td> </td><td class="right">              progress), June 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.ietf-netconf-restconf]</td><td> </td><td class="right">   [I-D.ietf-netconf-restconf]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF</td><td> </td><td class="right">              Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Protocol", draft-ietf-netconf-restconf-05 (work in</td><td> </td><td class="right">              Protocol", draft-ietf-netconf-restconf-05 (work in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              progress), June 2015.</td><td> </td><td class="right">              progress), June 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0046" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">[I-D.irtf-nmrg-an-gap-analysis]</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              Jiang, S., Carpenter, B., and M. Behringer, "General Gap</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              Analysis for Autonomic Networking", draft-irtf-nmrg-an-</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              gap-analysis-06 (work in progress), April 2015.</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete"></span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">   [I-D.irtf-nmrg-autonomic-network-definitions]</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              Carpenter, B., Jiang, S., and L. Ciavaglia, "Autonomic</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              Networking - Definitions and Design Goals", draft-irtf-</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              nmrg-autonomic-network-definitions-07 (work in progress),</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"><span class="delete">              March 2015.</span></td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">                                                                         </td><td> </td><td class="rblock"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.liang-iana-pen]</td><td> </td><td class="right">   [I-D.liang-iana-pen]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Liang, P., Melnikov, A., and D. Conrad, "Private</td><td> </td><td class="right">              Liang, P., Melnikov, A., and D. Conrad, "Private</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Enterprise Number (PEN) practices and Internet Assigned</td><td> </td><td class="right">              Enterprise Number (PEN) practices and Internet Assigned</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Numbers Authority (IANA) registration considerations",</td><td> </td><td class="right">              Numbers Authority (IANA) registration considerations",</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              draft-liang-iana-pen-05 (work in progress), March 2015.</td><td> </td><td class="right">              draft-liang-iana-pen-05 (work in progress), March 2015.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [I-D.pritikin-anima-bootstrapping-keyinfra]</td><td> </td><td class="right">   [I-D.pritikin-anima-bootstrapping-keyinfra]</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Pritikin, M., Behringer, M., and S. Bjarnason,</td><td> </td><td class="right">              Pritikin, M., Behringer, M., and S. Bjarnason,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              "Bootstrapping Key Infrastructures", draft-pritikin-anima-</td><td> </td><td class="right">              "Bootstrapping Key Infrastructures", draft-pritikin-anima-</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              bootstrapping-keyinfra-01 (work in progress), February</td><td> </td><td class="right">              bootstrapping-keyinfra-01 (work in progress), February</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l20" /><small>skipping to change at</small><em> page 42, line 20</em></th><th> </th><th><a name="part-r20" /><small>skipping to change at</small><em> page 43, line 5</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              "Neighbor Discovery for IP version 6 (IPv6)", RFC 4861,</td><td> </td><td class="right">              "Neighbor Discovery for IP version 6 (IPv6)", RFC 4861,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              September 2007.</td><td> </td><td class="right">              September 2007.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an</td><td> </td><td class="right">   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              IANA Considerations Section in RFCs", BCP 26, RFC 5226,</td><td> </td><td class="right">              IANA Considerations Section in RFCs", BCP 26, RFC 5226,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              May 2008.</td><td> </td><td class="right">              May 2008.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC5971]  Schulzrinne, H. and R. Hancock, "GIST: General Internet</td><td> </td><td class="right">   [RFC5971]  Schulzrinne, H. and R. Hancock, "GIST: General Internet</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Signalling Transport", RFC 5971, October 2010.</td><td> </td><td class="right">              Signalling Transport", RFC 5971, October 2010.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0047" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">[RFC6206]  Levis, P., Clausen, T., Hui, J., Gnawali, O., and J. Ko,</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">              "The Trickle Algorithm", RFC 6206, March 2011.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC6241]  Enns, R., Bjorklund, M., Schoenwaelder, J., and A.</td><td> </td><td class="right">   [RFC6241]  Enns, R., Bjorklund, M., Schoenwaelder, J., and A.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Bierman, "Network Configuration Protocol (NETCONF)", RFC</td><td> </td><td class="right">              Bierman, "Network Configuration Protocol (NETCONF)", RFC</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              6241, June 2011.</td><td> </td><td class="right">              6241, June 2011.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC6733]  Fajardo, V., Arkko, J., Loughney, J., and G. Zorn,</td><td> </td><td class="right">   [RFC6733]  Fajardo, V., Arkko, J., Loughney, J., and G. Zorn,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              "Diameter Base Protocol", RFC 6733, October 2012.</td><td> </td><td class="right">              "Diameter Base Protocol", RFC 6733, October 2012.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC6762]  Cheshire, S. and M. Krochmal, "Multicast DNS", RFC 6762,</td><td> </td><td class="right">   [RFC6762]  Cheshire, S. and M. Krochmal, "Multicast DNS", RFC 6762,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              February 2013.</td><td> </td><td class="right">              February 2013.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service</td><td> </td><td class="right">   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Discovery", RFC 6763, February 2013.</td><td> </td><td class="right">              Discovery", RFC 6763, February 2013.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   [RFC6887]  Wing, D., Cheshire, S., Boucadair, M., Penno, R., and P.</td><td> </td><td class="right">   [RFC6887]  Wing, D., Cheshire, S., Boucadair, M., Penno, R., and P.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              Selkirk, "Port Control Protocol (PCP)", RFC 6887, April</td><td> </td><td class="right">              Selkirk, "Port Control Protocol (PCP)", RFC 6887, April</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">              2013.</td><td> </td><td class="right">              2013.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0048" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">[RFC7228]  Bormann, C., Ersue, M., and A. Keranen, "Terminology for</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">              Constrained-Node Networks", RFC 7228, May 2014.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   [RFC7575]  Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">              Carpenter, B., Jiang, S., and L. Ciavaglia, "Autonomic</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">              Networking: Definitions and Design Goals", RFC 7575, June</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">              2015.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   [RFC7576]  Jiang, S., Carpenter, B., and M. Behringer, "General Gap</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">              Analysis for Autonomic Networking", RFC 7576, June 2015.</span></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">Appendix A.  Capability Analysis of Current Protocols</td><td> </td><td class="right">Appendix A.  Capability Analysis of Current Protocols</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   This appendix discusses various existing protocols with properties</td><td> </td><td class="right">   This appendix discusses various existing protocols with properties</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   related to the above negotiation and synchronisation requirements.</td><td> </td><td class="right">   related to the above negotiation and synchronisation requirements.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   The purpose is to evaluate whether any existing protocol, or a simple</td><td> </td><td class="right">   The purpose is to evaluate whether any existing protocol, or a simple</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   combination of existing protocols, can meet those requirements.</td><td> </td><td class="right">   combination of existing protocols, can meet those requirements.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Numerous protocols include some form of discovery, but these all</td><td> </td><td class="right">   Numerous protocols include some form of discovery, but these all</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   appear to be very specific in their applicability.  Service Location</td><td> </td><td class="right">   appear to be very specific in their applicability.  Service Location</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Protocol (SLP) [RFC2608] provides service discovery for managed</td><td> </td><td class="right">   Protocol (SLP) [RFC2608] provides service discovery for managed</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr bgcolor="gray" ><td></td><th><a name="part-l21" /><small>skipping to change at</small><em> page 44, line 30</em></th><th> </th><th><a name="part-r21" /><small>skipping to change at</small><em> page 45, line 30</em></th><td></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      security is acceptable.</td><td> </td><td class="right">      security is acceptable.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  Synchronization of state is maintained by a flooding process using</td><td> </td><td class="right">   o  Synchronization of state is maintained by a flooding process using</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      the Trickle algorithm.  There is no bilateral synchronization or</td><td> </td><td class="right">      the Trickle algorithm.  There is no bilateral synchronization or</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      negotiation capability.</td><td> </td><td class="right">      negotiation capability.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   o  The HNCP profile of DNCP is designed to operate between directly</td><td> </td><td class="right">   o  The HNCP profile of DNCP is designed to operate between directly</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      connected neighbors on a shared link using UDP and link-local IPv6</td><td> </td><td class="right">      connected neighbors on a shared link using UDP and link-local IPv6</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">      addresses.</td><td> </td><td class="right">      addresses.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td><a name="diff0049" /></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   <span class="delete">Clearly</span> DNCP does not meet the needs of a general negotiation</td><td> </td><td class="rblock">   DNCP does not meet the needs of a general negotiation protocol,</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   protocol, <span class="delete">especially</span> in its HNCP profile <span class="delete">due to the limitation</span> to</td><td> </td><td class="rblock">   <span class="insert">because it is designed just for flooding synchronization.  Also,</span> in</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   link-local messages and <span class="delete">its strict dependency on</span> IPv6.  However, at</td><td> </td><td class="rblock">   its HNCP profile <span class="insert">it is limited</span> to link-local messages and <span class="insert">to</span> IPv6.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   the minimum it is a very interesting test case for this style of</td><td> </td><td class="rblock">   However, at the minimum it is a very interesting test case for this</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   interaction between devices without needing a central authority, and</td><td> </td><td class="rblock">   style of interaction between devices without needing a central</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   it is a proven method of network-wide state synchronization by</td><td> </td><td class="rblock">   authority, and it is a proven method of network-wide state</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="lblock">   flooding.</td><td> </td><td class="rblock">   synchronization by flooding.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   A proposal was made some years ago for an IP based Generic Control</td><td> </td><td class="right">   A proposal was made some years ago for an IP based Generic Control</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   Protocol (IGCP) [I-D.chaparadza-intarea-igcp].  This was aimed at</td><td> </td><td class="right">   Protocol (IGCP) [I-D.chaparadza-intarea-igcp].  This was aimed at</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   information exchange and negotiation but not directly at peer</td><td> </td><td class="right">   information exchange and negotiation but not directly at peer</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   discovery.  However, it has many points in common with the present</td><td> </td><td class="right">   discovery.  However, it has many points in common with the present</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   work.</td><td> </td><td class="right">   work.</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   None of the above solutions appears to completely meet the needs of</td><td> </td><td class="right">   None of the above solutions appears to completely meet the needs of</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   generic discovery, state synchronization and negotiation in a single</td><td> </td><td class="right">   generic discovery, state synchronization and negotiation in a single</td><td class="lineno" valign="top"></td></tr>
      <tr><td class="lineno" valign="top"></td><td class="left">   solution.  Neither is there an obvious combination of protocols that</td><td> </td><td class="right">   solution.  Neither is there an obvious combination of protocols that</td><td class="lineno" valign="top"></td></tr>

     <tr><td></td><td class="left"></td><td> </td><td class="right"></td><td></td></tr>
     <tr bgcolor="gray"><th colspan="5" align="center"><a name="end">&nbsp;End of changes. 49 change blocks.&nbsp;</a></th></tr>
     <tr class="stats"><td></td><th><i>154 lines changed or deleted</i></th><th><i> </i></th><th><i>198 lines changed or added</i></th><td></td></tr>
     <tr><td colspan="5" align="center" class="small"><br/>This html diff was produced by rfcdiff 1.42. The latest version is available from <a href="http://www.tools.ietf.org/tools/rfcdiff/" >http://tools.ietf.org/tools/rfcdiff/</a> </td></tr>
   </table>
   </body>
   </html>
X-Generator: pyht 0.35

<!-- args: {'--oldcolour': 'red', '--width': '', 'difftype': '--html', 'filename2': '\n\n\n\nNetwork Working Group                                       B. Carpenter\nInternet-Draft                                         Univ. of Auckland\nIntended status: Standards Track                                  B. Liu\nExpires: December 22, 2015                  Huawei Technologies Co., Ltd\n                                                           June 20, 2015\n\n\n A Generic Discovery and Negotiation Protocol for Autonomic Networking\n                 draft-carpenter-anima-gdn-protocol-04\n\nAbstract\n\n   This document establishes requirements for a signaling protocol that\n   enables autonomic devices and autonomic service agents to dynamically\n   discover peers, to synchronize state with them, and to negotiate\n   parameter settings mutually with them.  The document then defines a\n   general protocol for discovery, synchronization and negotiation,\n   while the technical objectives for specific scenarios are to be\n   described in separate documents.  An Appendix briefly discusses\n   existing protocols with comparable features.\n\nStatus of This Memo\n\n   This Internet-Draft is submitted in full conformance with the\n   provisions of BCP 78 and BCP 79.\n\n   Internet-Drafts are working documents of the Internet Engineering\n   Task Force (IETF).  Note that other groups may also distribute\n   working documents as Internet-Drafts.  The list of current Internet-\n   Drafts is at http://datatracker.ietf.org/drafts/current/.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or obsoleted by other documents at any\n   time.  It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as "work in progress."\n\n   This Internet-Draft will expire on December 22, 2015.\n\nCopyright Notice\n\n   Copyright (c) 2015 IETF Trust and the persons identified as the\n   document authors.  All rights reserved.\n\n   This document is subject to BCP 78 and the IETF Trust\'s Legal\n   Provisions Relating to IETF Documents\n   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication of this document.  Please review these documents\n   carefully, as they describe your rights and restrictions with respect\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 1]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   to this document.  Code Components extracted from this document must\n   include Simplified BSD License text as described in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty as\n   described in the Simplified BSD License.\n\nTable of Contents\n\n   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n   2.  Requirement Analysis of Discovery, Synchronization and\n       Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4\n     2.1.  Requirements for Discovery  . . . . . . . . . . . . . . .   4\n     2.2.  Requirements for Synchronization and Negotiation\n           Capability  . . . . . . . . . . . . . . . . . . . . . . .   6\n     2.3.  Specific Technical Requirements . . . . . . . . . . . . .   8\n   3.  GDNP Protocol Overview  . . . . . . . . . . . . . . . . . . .   9\n     3.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   9\n     3.2.  High-Level Design Choices . . . . . . . . . . . . . . . .  11\n     3.3.  GDNP Protocol Basic Properties and Mechanisms . . . . . .  14\n       3.3.1.  Required External Security Mechanism  . . . . . . . .  15\n       3.3.2.  Transport Layer Usage . . . . . . . . . . . . . . . .  15\n       3.3.3.  Discovery Mechanism and Procedures  . . . . . . . . .  15\n       3.3.4.  Negotiation Procedures  . . . . . . . . . . . . . . .  17\n       3.3.5.  Synchronization Procedure . . . . . . . . . . . . . .  18\n     3.4.  GDNP Constants  . . . . . . . . . . . . . . . . . . . . .  20\n     3.5.  Session Identifier (Session ID) . . . . . . . . . . . . .  20\n     3.6.  GDNP Messages . . . . . . . . . . . . . . . . . . . . . .  20\n       3.6.1.  GDNP Message Format . . . . . . . . . . . . . . . . .  21\n       3.6.2.  Discovery Message . . . . . . . . . . . . . . . . . .  21\n       3.6.3.  Response Message  . . . . . . . . . . . . . . . . . .  22\n       3.6.4.  Request Message . . . . . . . . . . . . . . . . . . .  22\n       3.6.5.  Negotiation Message . . . . . . . . . . . . . . . . .  23\n       3.6.6.  Negotiation-ending Message  . . . . . . . . . . . . .  23\n       3.6.7.  Confirm-waiting Message . . . . . . . . . . . . . . .  23\n     3.7.  GDNP General Options  . . . . . . . . . . . . . . . . . .  24\n       3.7.1.  Format of GDNP Options  . . . . . . . . . . . . . . .  24\n       3.7.2.  Divert Option . . . . . . . . . . . . . . . . . . . .  24\n       3.7.3.  Accept Option . . . . . . . . . . . . . . . . . . . .  25\n       3.7.4.  Decline Option  . . . . . . . . . . . . . . . . . . .  25\n       3.7.5.  Waiting Time Option . . . . . . . . . . . . . . . . .  26\n       3.7.6.  Device Identity Option  . . . . . . . . . . . . . . .  27\n       3.7.7.  Locator Options . . . . . . . . . . . . . . . . . . .  27\n     3.8.  Objective Options . . . . . . . . . . . . . . . . . . . .  29\n       3.8.1.  Format of Objective Options . . . . . . . . . . . . .  29\n       3.8.2.  General Considerations for Objective Options  . . . .  30\n       3.8.3.  Organizing of Objective Options . . . . . . . . . . .  30\n       3.8.4.  Vendor Specific Objective Options . . . . . . . . . .  31\n       3.8.5.  Experimental Objective Options  . . . . . . . . . . .  32\n   4.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .  32\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 2]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  36\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  37\n   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  38\n   8.  Change log [RFC Editor: Please remove]  . . . . . . . . . . .  39\n   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  40\n     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  40\n     9.2.  Informative References  . . . . . . . . . . . . . . . . .  40\n   Appendix A.  Capability Analysis of Current Protocols . . . . . .  43\n   Authors\' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  46\n\n1.  Introduction\n\n   The success of the Internet has made IP-based networks bigger and\n   more complicated.  Large-scale ISP and enterprise networks have\n   become more and more problematic for human based management.  Also,\n   operational costs are growing quickly.  Consequently, there are\n   increased requirements for autonomic behavior in the networks.\n   General aspects of autonomic networks are discussed in [RFC7575] and\n   [RFC7576].  A reference model for autonomic networking is given in\n   [I-D.behringer-anima-reference-model].  In order to fulfil autonomy,\n   devices that embody autonomic service agents have specific signaling\n   requirements.  In particular they need to discover each other, to\n   synchronize state with each other, and to negotiate parameters and\n   resources directly with each other.  There is no restriction on the\n   type of parameters and resources concerned, which include very basic\n   information needed for addressing and routing, as well as anything\n   else that might be configured in a conventional non-autonomic\n   network.  The atomic unit of synchronization or negotiation is\n   referred to as a technical objective, i.e, a configurable parameter\n   or set of parameters (defined more precisely in Section 3.1).\n\n   Following this Introduction, Section 2 describes the requirements for\n   discovery, synchronization and negotiation.  Negotiation is an\n   iterative process, requiring multiple message exchanges forming a\n   closed loop between the negotiating devices.  State synchronization,\n   when needed, can be regarded as a special case of negotiation,\n   without iteration.  Section 3.2 describes a behavior model for a\n   protocol intended to support discovery, synchronization and\n   negotiation.  The design of Generic Discovery and Negotiation\n   Protocol (GDNP) in Section 3 of this document is mainly based on this\n   behavior model.  The relevant capabilities of various existing\n   protocols are reviewed in Appendix A.\n\n   The proposed discovery mechanism is oriented towards synchronization\n   and negotiation objectives.  It is based on a neighbor discovery\n   process, but also supports diversion to off-link peers.  Although\n   many negotiations will occur between horizontally distributed peers,\n   many target scenarios are hierarchical networks, which is the\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 3]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   predominant structure of current large-scale managed networks.\n   However, when a device starts up with no pre-configuration, it has no\n   knowledge of the topology.  The protocol itself is capable of being\n   used in a small and/or flat network structure such as a small office\n   or home network as well as a professionally managed network.\n   Therefore, the discovery mechanism needs to be able to allow a device\n   to bootstrap itself without making any prior assumptions about\n   network structure.\n\n   Because GDNP can be used to perform a decision process among\n   distributed devices or between networks, it must run in a secure and\n   strongly authenticated environment.\n\n   It is understood that in realistic deployments, not all devices will\n   support GDNP.  It is expected that some autonomic service agents will\n   directly manage a group of non-autonomic nodes, and that other non-\n   autonomic nodes will be managed traditionally.  Such mixed scenarios\n   are not discussed in this specification.\n\n2.  Requirement Analysis of Discovery, Synchronization and Negotiation\n\n   This section discusses the requirements for discovery, negotiation\n   and synchronization capabilities.  The primary user of the protocol\n   is an autonomic service agent (ASA), so the requirements are mainly\n   expressed as the features needed by an ASA.  A single physical device\n   might contain several ASAs, and a single ASA might manage several\n   technical objectives.\n\n2.1.  Requirements for Discovery\n\n   1.  ASAs may be designed to manage anything, as required in\n   Section 2.2.  A basic requirement is therefore that the protocol can\n   represent and discover any kind of technical objective among\n   arbitrary subsets of participating nodes.\n\n   In an autonomic network we must assume that when a device starts up\n   it has no information about any peer devices, the network structure,\n   or what specific role it must play.  The ASA(s) inside the device are\n   in the same situation.  In some cases, when a new application session\n   starts up within a device, the device or ASA may again lack\n   information about relevant peers.  It might be necessary to set up\n   resources on multiple other devices, coordinated and matched to each\n   other so that there is no wasted resource.  Security settings might\n   also need updating to allow for the new device or user.  The relevant\n   peers may be different for different technical objectives.  Therefore\n   discovery needs to be repeated as often as necessary to find peers\n   capable of acting as counterparts for each objective that a discovery\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 4]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   initiator needs to handle.  From this background we derive the next\n   three requirements:\n\n   2.  When an ASA first starts up, it has no knowledge of the specific\n   network to which it is attached.  Therefore the discovery process\n   must be able to support any network scenario, assuming only that the\n   device concerned is bootstrapped from factory condition.\n\n   3.  When an ASA starts up, it must require no information about any\n   peers in order to discover them.\n\n   4.  If an ASA supports multiple technical objectives, relevant peers\n   may be different for different discovery objectives, so discovery\n   needs to be repeated to find counterparts for each objective.  Thus,\n   there must be a mechanism by which an ASA can separately discover\n   peer ASAs for each of the technical objectives that it needs to\n   manage, whenever necessary.\n\n   5.  Following discovery, an ASA will normally perform negotiation or\n   synchronization for the corresponding objectives.  The design should\n   allow for this by associating discovery, negotiation and\n   synchronization objectives.  It may provide an optional mechanism to\n   combine discovery and negotiation/synchronization in a single call.\n\n   6.  Some objectives may only be significant on the local link, but\n   others may be significant across the routed network and require off-\n   link operations.  Thus, the relevant peers might be immediate\n   neighbors on the same layer 2 link, or they might be more distant and\n   only accessible via layer 3.  The mechanism must therefore provide\n   both on-link and off-link discovery of ASAs supporting specific\n   technical objectives.\n\n   7.  The discovery process should be flexible enough to allow for\n   special cases, such as the following:\n\n   o  In some networks, as mentioned above, there will be some\n      hierarchical structure, at least for certain synchronization or\n      negotiation objectives, but this is unknown in advance.  The\n      discovery protocol must therefore operate regardless of\n      hierarchical structure, which is an attribute of individual\n      technical objectives and not of the autonomic network as a whole.\n      This is part of the more general requirement to discover off-link\n      peers.\n\n   o  During initialisation, a device must be able to establish mutual\n      trust with the rest of the network and join an authentication\n      mechanism.  Although this will inevitably start with a discovery\n      action, it is a special case precisely because trust is not yet\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 5]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      established.  This topic is the subject of\n      [I-D.pritikin-anima-bootstrapping-keyinfra].  We require that once\n      trust has been established for a device, all ASAs within the\n      device inherit the device\'s credentials and are also trusted.\n\n   o  Depending on the type of network involved, discovery of other\n      central functions might be needed, such as a source of Intent\n      distribution [RFC7575] or the Network Operations Center (NOC)\n      [I-D.eckert-anima-stable-connectivity].  The protocol must be\n      capable of supporting such discovery during initialisation, as\n      well as discovery during ongoing operation.\n\n   8.  The discovery process must not generate excessive (multicast)\n   traffic and must take account of sleeping nodes in the case of a\n   resource-constrained network [RFC7228].\n\n2.2.  Requirements for Synchronization and Negotiation Capability\n\n   As background, consider the example of routing protocols, the closest\n   approximation to autonomic networking already in widespread use.\n   Routing protocols use a largely autonomic model based on distributed\n   devices that communicate repeatedly with each other.  The focus is\n   reachability, so current routing protocols mainly consider simple\n   link status, i.e., up or down, and an underlying assumption is that\n   all nodes need a consistent view of the network topology in order for\n   the routing algorithm to converge.  Thus, routing is mainly based on\n   information synchronization between peers, rather than on bi-\n   directional negotiation.  Other information, such as latency,\n   congestion, capacity, and particularly unused capacity, would be\n   helpful to get better path selection and utilization rate, but is not\n   normally used in distributed routing algorithms.  Additionally,\n   autonomic networks need to be able to manage many more dimensions,\n   such as security settings, power saving, load balancing, etc.  Status\n   information and traffic metrics need to be shared between nodes for\n   dynamic adjustment of resources and for monitoring purposes.  While\n   this might be achieved by existing protocols when they are available,\n   the new protocol needs to be able to support parameter exchange,\n   including mutual synchronization, even when no negotiation as such is\n   required.  In general, these parameters do not apply to all\n   participating nodes, but only to a subset.\n\n   9.  A basic requirement for the protocol is therefore the ability to\n   represent, discover, synchronize and negotiate almost any kind of\n   network parameter among arbitrary subsets of participating nodes.\n\n   10.  Negotiation is a request/response process that must be\n   guaranteed to terminate (with success or failure) and if necessary it\n   must contain tie-breaking rules for each technical objective that\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 6]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   requires them.  While these must be defined specifically for each use\n   case, the protocol should have some general mechanisms in support of\n   loop and deadlock prevention, such as hop count limits or timeouts.\n\n   11.  Synchronization might concern small groups of nodes or very\n   large groups.  Different solutions might be needed at different\n   scales.\n\n   12.  To avoid "reinventing the wheel", the protocol should be able to\n   carry the message formats used by existing configuration protocols\n   (such as NETCONF/YANG) in cases where that is convenient.\n\n   13.  Human intervention in complex situations is costly and error-\n   prone.  Therefore, synchronization or negotiation of parameters\n   without human intervention is desirable whenever the coordination of\n   multiple devices can improve overall network performance.  It\n   therefore follows that the protocol, as part of the Autonomic\n   Networking Infrastructure, must be capable of running in any device\n   that would otherwise need human intervention.\n\n   14.  Human intervention in large networks is often replaced by use of\n   a top-down network management system (NMS).  It therefore follows\n   that the protocol, as part of the Autonomic Networking\n   Infrastructure, must be capable of running in any device that would\n   otherwise be managed by an NMS, and that it can co-exist with an NMS,\n   and with protocols such as SNMP and NETCONF.\n\n   15.  Some features are expected to be implemented by individual ASAs,\n   but the protocol must be general enough to allow them:\n\n   o  Dependencies and conflicts: In order to decide a configuration on\n      a given device, the device may need information from neighbors.\n      This can be established through the negotiation procedure, or\n      through synchronization if that is sufficient.  However, a given\n      item in a neighbor may depend on other information from its own\n      neighbors, which may need another negotiation or synchronization\n      procedure to obtain or decide.  Therefore, there are potential\n      dependencies and conflicts among negotiation or synchronization\n      procedures.  Resolving dependencies and conflicts is a matter for\n      the individual ASAs involved.  To allow this, there need to be\n      clear boundaries and convergence mechanisms for negotiations.\n      Also some mechanisms are needed to avoid loop dependencies.  In\n      such a case, the protocol\'s role is limited to signaling between\n      ASAs.\n\n   o  Recovery from faults and identification of faulty devices should\n      be as automatic as possible.  The protocol\'s role is limited to\n      the ability to handle discovery, synchronization and negotiation\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 7]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      at any time, in case an ASA detects an anomaly such as a\n      negotiation counterpart failing.\n\n   o  Since the goal is to minimize human intervention, it is necessary\n      that the network can in effect "think ahead" before changing its\n      parameters.  In other words there must be a possibility of\n      forecasting the effect of a change by a "dry run" mechanism before\n      actually installing the change.  This will be an application of\n      the protocol rather than a feature of the protocol itself.\n\n   o  Management logging, monitoring, alerts and tools for intervention\n      are required.  However, these can only be features of individual\n      ASAs.  Another document [I-D.eckert-anima-stable-connectivity]\n      discusses how such agents may be linked into conventional OAM\n      systems via an Autonomic Control Plane\n      [I-D.behringer-anima-autonomic-control-plane].\n\n   16.  The protocol will be able to deal with a wide variety of\n   technical objectives, covering any type of network parameter.\n   Therefore the protocol will need either an explicit information model\n   describing its messages, or at least a flexible and extensible\n   message format.  One design consideration is whether to adopt an\n   existing information model or to design a new one.\n\n2.3.  Specific Technical Requirements\n\n   17.  It should be convenient for ASA designers to define new\n   technical objectives and for programmers to express them, without\n   excessive impact on run-time efficiency and footprint.  The classes\n   of device in which the protocol might run is discussed in\n   [I-D.behringer-anima-reference-model].\n\n   18.  The protocol should be extensible in case the initially defined\n   discovery, synchronization and negotiation mechanisms prove to be\n   insufficient.\n\n   19.  To be a generic platform, the protocol payload format should be\n   independent of the transport protocol or IP version.  In particular,\n   it should be able to run over IPv6 or IPv4.  However, some functions,\n   such as multicasting or broadcasting on a link, might need to be IP\n   version dependent.  In case of doubt, IPv6 should be preferred.\n\n   20.  The protocol must be able to access off-link counterparts via\n   routable addresses, i.e., must not be restricted to link-local\n   operation.\n\n   21.  It must also be possible for an external discovery mechanism to\n   be used, if appropriate for a given technical objective.  In other\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 8]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   words, GDNP discovery must not be a prerequisite for GDNP negotiation\n   or synchronization; the prerequisite is discovering a peer\'s locator\n   by any method.\n\n   22.  ASAs and the signaling protocol engine need to run\n   asynchronously when wait states occur.\n\n   23.  Intent: There must be provision for general Intent rules to be\n   applied by all devices in the network (e.g., security rules, prefix\n   length, resource sharing rules).  However, Intent distribution might\n   not use the signaling protocol itself, but its design should not\n   exclude such use.\n\n   24.  Management monitoring, alerts and intervention: Devices should\n   be able to report to a monitoring system.  Some events must be able\n   to generate operator alerts and some provision for emergency\n   intervention must be possible (e.g.  to freeze synchronization or\n   negotiation in a mis-behaving device).  These features might not use\n   the signaling protocol itself, but its design should not exclude such\n   use.\n\n   25.  The protocol needs to be fully secured against forged messages\n   and man-in-the middle attacks, and secured as much as reasonably\n   possible against denial of service attacks.  It needs to be capable\n   of encryption in order to resist unwanted monitoring, although this\n   capability may not be required in all deployments.  However, it is\n   not required that the protocol itself provides these security\n   features; it may depend on an existing secure environment.\n\n3.  GDNP Protocol Overview\n\n3.1.  Terminology\n\n   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",\n   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and\n   "OPTIONAL" in this document are to be interpreted as described in\n   [RFC2119] when they appear in ALL CAPS.  When these words are not in\n   ALL CAPS (such as "should" or "Should"), they have their usual\n   English meanings, and are not to be interpreted as [RFC2119] key\n   words.\n\n   This document uses terminology defined in [RFC7575].\n\n   The following additional terms are used throughout this document:\n\n   o  Discovery: a process by which an ASA discovers peers according to\n      a specific discovery objective.  The discovery results may be\n      different according to the different discovery objectives.  The\n\n\n\nCarpenter _ Liu         Expires December 22, 2015               [Page 9]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      discovered peers may later be used as negotiation counterparts or\n      as sources of synchronization data.\n\n   o  Negotiation: a process by which two (or more) ASAs interact\n      iteratively to agree on parameter settings that best satisfy the\n      objectives of one or more ASAs.\n\n   o  State Synchronization: a process by which two (or more) ASAs\n      interact to agree on the current state of parameter values stored\n      in each ASA.  This is a special case of negotiation in which\n      information is sent but the ASAs do not request their peers to\n      change parameter settings.  All other definitions apply to both\n      negotiation and synchronization.\n\n   o  Technical Objective (usually abbreviated as Objective): A\n      technical objective is a configurable parameter or set of\n      parameters of some kind, which occurs in three contexts:\n      Discovery, Negotiation and Synchronization.  In the protocol, an\n      objective is represented by an identifier (actually a GDNP option\n      number) and if relevant a value.  Normally, a given objective will\n      occur during discovery and negotiation, or during discovery and\n      synchronization, but not in all three contexts.\n\n      *  One ASA may support multiple independent objectives.\n\n      *  The parameter described by a given objective is naturally based\n         on a specific service or function or action.  It may in\n         principle be anything that can be set to a specific logical,\n         numerical or string value, or a more complex data structure, by\n         a network node.  That node is generally expected to contain an\n         ASA which may itself manage other nodes.\n\n      *  Discovery Objective: if a node needs to synchronize or\n         negotiate a specific objective but does not know a peer that\n         supports this objective, it starts a discovery process.  The\n         objective is called a Discovery Objective during this process.\n\n      *  Synchronization Objective: an objective whose specific\n         technical content needs to be synchronized among two or more\n         ASAs.\n\n      *  Negotiation Objective: an objective whose specific technical\n         content needs to be decided in coordination with another ASA.\n\n   o  Discovery Initiator: an ASA that spontaneously starts discovery by\n      sending a discovery message referring to a specific discovery\n      objective.\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 10]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  Discovery Responder: a peer ASA which responds to the discovery\n      objective initiated by the discovery initiator.\n\n   o  Synchronization Initiator: an ASA that spontaneously starts\n      synchronization by sending a request message referring to a\n      specific synchronization objective.\n\n   o  Synchronization Responder: a peer ASA which responds with the\n      value of a synchronization objective.\n\n   o  Negotiation Initiator: an ASA that spontaneously starts\n      negotiation by sending a request message referring to a specific\n      negotiation objective.\n\n   o  Negotiation Counterpart: a peer with which the Negotiation\n      Initiator negotiates a specific negotiation objective.\n\n3.2.  High-Level Design Choices\n\n   This section describes a behavior model and some considerations for\n   designing a generic discovery, synchronization and negotiation\n   protocol, which can act as a platform for different technical\n   objectives.\n\n   NOTE: This protocol is described here in a stand-alone fashion as a\n   proof of concept.  An early version was prototyped by Huawei and the\n   Beijing University of Posts and Telecommunications.  However, this is\n   not yet a definitive proposal for IETF adoption.  In particular,\n   adaptation and extension of one of the protocols discussed in\n   Appendix A might be an option.  This whole specification is subject\n   to change as a result.\n\n   o  A generic platform\n\n      The protocol is designed as a generic platform, which is\n      independent from the synchronization or negotiation contents.  It\n      takes care of the general intercommunication between counterparts.\n      The technical contents will vary according to the various\n      technical objectives and the different pairs of counterparts.\n\n\n   o  The protocol is expected to form part of an Autonomic Networking\n      Infrastructure [I-D.behringer-anima-reference-model].  It will\n      provide services to ASAs via a suitable application programming\n      interface, which will reflect the protocol elements but will not\n      necessarily be in one-to-one correspondence to them.  It is\n      expected that the protocol engine and each ASA will run as\n      independent asynchronous processes.\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 11]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  Security infrastructure and trust relationship\n\n      Because this negotiation protocol may directly cause changes to\n      device configurations and bring significant impacts to a running\n      network, this protocol is assumed to run within an existing secure\n      environment with strong authentication.\n\n      On the other hand, a limited negotiation model might be deployed\n      based on a limited trust relationship.  For example, between two\n      administrative domains, ASAs might also exchange limited\n      information and negotiate some particular configurations based on\n      a limited conventional or contractual trust relationship.\n\n\n   o  Discovery, synchronization and negotiation designed together\n\n      The discovery method and the synchronization and negotiation\n      methods are designed in the same way and can be combined when this\n      is useful.  These processes can also be performed independently\n      when appropriate.\n\n      *  GDNP discovery is appropriate for efficient discovery of GDNP\n         peers and allows a rapid mode of operation described in\n         Section 3.3.3.  For some parameters, especially those concerned\n         with application layer services, a text-based discovery\n         mechanism such as DNS Service Discovery\n         [I-D.ietf-dnssd-requirements] or Service Location Protocol\n         [RFC2608] might be more appropriate.  The choice is left to the\n         designers of individual ASAs.\n\n   o  A uniform pattern for technical contents\n\n      The synchronization and negotiation contents are defined according\n      to a uniform pattern.  They could be carried either in simple TLV\n      (Type, Length and Value) format or in payloads described by a\n      flexible language.  The initial protocol design uses the TLV\n      approach.  The format is extensible for unknown future\n      requirements.\n\n\n   o  A flexible model for synchronization\n\n      GDNP supports bilateral synchronization, which could be used to\n      perform synchronization among a small number of nodes.  It also\n      supports an unsolicited flooding mode when large groups of nodes,\n      possibly including all autonomic nodes, need data for the same\n      technical objective.\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 12]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      *  There may be some network parameters for which a more\n         traditional flooding mechanism such as ADNCP\n         [I-D.stenberg-anima-adncp] is considered more appropriate.\n         GDNP can coexist with ADNCP.\n\n   o  A simple initiator/responder model for negotiation\n\n      Multi-party negotiations are too complicated to be modeled and\n      there might be too many dependencies among the parties to converge\n      efficiently.  A simple initiator/responder model is more feasible\n      and can complete multi-party negotiations by indirect steps.\n\n\n   o  Organizing of synchronization or negotiation content\n\n      Naturally, the technical content will be organized according to\n      the relevant function or service.  The content from different\n      functions or services is kept independent from each other.  They\n      are not combined into a single option or single session because\n      these contents may be negotiated or synchronized with different\n      counterparts or may be different in response time.\n\n\n   o  Self-aware network device\n\n      Every autonomic device will be pre-loaded with various functions\n      and ASAs and will be aware of its own capabilities, typically\n      decided by the hardware, firmware or pre-installed software.  Its\n      exact role may depend on Intent and on the surrounding network\n      behaviors, which may include forwarding behaviors, aggregation\n      properties, topology location, bandwidth, tunnel or translation\n      properties, etc.  The surrounding topology will depend on the\n      network planning.  Following an initial discovery phase, the\n      device properties and those of its neighbors are the foundation of\n      the synchronization or negotiation behavior of a specific device.\n      A device has no pre-configuration for the particular network in\n      which it is installed.\n\n\n   o  Requests and responses in negotiation procedures\n\n      The initiator can negotiate with its relevant negotiation\n      counterpart ASAs, which may be different according to the specific\n      negotiation objective.  It can request relevant information from\n      the negotiation counterpart so that it can decide its local\n      configuration to give the most coordinated performance.  It can\n      request the negotiation counterpart to make a matching\n      configuration in order to set up a successful communication with\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 13]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      it.  It can request certain simulation or forecast results by\n      sending some dry run conditions.\n\n      Beyond the traditional yes/no answer, the responder can reply with\n      a suggested alternative if its answer is \'no\'.  This would start a\n      bi-directional negotiation ending in a compromise between the two\n      ASAs.\n\n\n   o  Convergence of negotiation procedures\n\n      To enable convergence, when a responder makes a suggestion of a\n      changed condition in a negative reply, it should be as close as\n      possible to the original request or previous suggestion.  The\n      suggested value of the third or later negotiation steps should be\n      chosen between the suggested values from the last two negotiation\n      steps.  In any case there must be a mechanism to guarantee\n      convergence (or failure) in a small number of steps, such as a\n      timeout or maximum number of iterations.\n\n\n\n      *  End of negotiation\n\n         A limited number of rounds, for example three, or a timeout, is\n         needed on each ASA for each negotiation objective.  It may be\n         an implementation choice, a pre-configurable parameter, or\n         network Intent.  These choices might vary between different\n         types of ASA.  Therefore, the definition of each negotiation\n         objective MUST clearly specify this, so that the negotiation\n         can always be terminated properly.\n\n\n      *  Failed negotiation\n\n         There must be a well-defined procedure for concluding that a\n         negotiation cannot succeed, and if so deciding what happens\n         next (deadlock resolution, tie-breaking, or revert to best-\n         effort service).  Again, this MUST be specified for individual\n         negotiation objectives, as an implementation choice, a pre-\n         configurable parameter, or network Intent.\n\n3.3.  GDNP Protocol Basic Properties and Mechanisms\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 14]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.3.1.  Required External Security Mechanism\n\n   The protocol SHOULD run within a secure Autonomic Control Plane (ACP)\n   [I-D.behringer-anima-autonomic-control-plane].  The procedure for\n   establishing the ACP MUST provide a flag indicating to GDNP that the\n   ACP has been established.\n\n   If there is no ACP, the protocol MUST use TLS [RFC5246] or DTLS\n   [RFC6347] for all messages, based on a local Public Key\n   Infrastructure (PKI) [RFC5280] managed within the autonomic network\n   itself.\n\n   Link-local multicast is used for discovery messages.  These cannot be\n   secured, but responses to discovery messages MUST be secured.\n   However, during initialisation, before a node has joined the\n   applicable trust infrastructure, e.g.,\n   [I-D.pritikin-anima-bootstrapping-keyinfra], it might be impossible\n   to secure certain messages.  Such messages MUST be limited to the\n   strictly necessary minimum.\n\n3.3.2.  Transport Layer Usage\n\n   The protocol is capable of running over UDP or TCP, except for link-\n   local multicast discovery messages, which can only run over UDP and\n   MUST NOT be fragmented, and therefore cannot exceed the link MTU\n   size.\n\n   When running within a secure ACP, UDP SHOULD be used for messages not\n   exceeding the minimum IPv6 path MTU, and TCP MUST be used for longer\n   messages.  In other words, IPv6 fragmentation is avoided.  If a node\n   receives a UDP message but the reply is too long, it MUST open a TCP\n   connection to the peer for the reply.\n\n   When running without an ACP, TLS MUST be supported and used by\n   default, except for multicast discovery messages.  DTLS MAY be\n   supported as an alternative but the details are out of scope for this\n   document.\n\n   For all transport protocols, the GDNP protocol listens to the GDNP\n   Listen Port (Section 3.4).\n\n3.3.3.  Discovery Mechanism and Procedures\n\n   o  Separated discovery and negotiation mechanisms\n\n         Although discovery and negotiation or synchronization are\n         defined together in the GDNP, they are separated mechanisms.\n         The discovery process could run independently from the\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 15]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n         negotiation or synchronization process.  Upon receiving a\n         discovery (Section 3.6.2) or request (Section 3.6.4) message,\n         the recipient ASA should return a message in which it either\n         indicates itself as a discovery responder or diverts the\n         initiator towards another more suitable ASA.\n\n         The discovery action will normally be followed by a negotiation\n         or synchronization action.  The discovery results could be\n         utilized by the negotiation protocol to decide which ASA the\n         initiator will negotiate with.\n\n   o  Discovery Procedures\n\n         Discovery starts as an on-link operation.  The Divert option\n         can tell the discovery initiator to contact an off-link ASA for\n         that discovery objective.  Every DISCOVERY message is sent by a\n         discovery initiator via UDP to the ALL_GDNP_NEIGHBOR multicast\n         address (Section 3.4).  Every network device that supports the\n         GDNP always listens to a well-known UDP port to capture the\n         discovery messages.\n\n         If an ASA in the neighbor device supports the requested\n         discovery objective, it MAY respond with a Response message\n         (Section 3.6.3) with locator option(s).  Otherwise, if the\n         neighbor has cached information about an ASA that supports the\n         requested discovery objective (usually because it discovered\n         the same objective before), it SHOULD respond with a Response\n         message with a Divert option pointing to the appropriate\n         Discovery Responder.\n\n         If no discovery response is received within a reasonable\n         timeout (default GDNP_DEF_TIMEOUT milliseconds, Section 3.4),\n         the DISCOVERY message MAY be repeated, with a newly generated\n         Session ID (Section 3.5).  An exponential backoff SHOULD be\n         used for subsequent repetitions, in order to mitigate possible\n         denial of service attacks.\n\n         After a GDNP device successfully discovers a Discovery\n         Responder supporting a specific objective, it MUST cache this\n         information.  This cache record MAY be used for future\n         negotiation or synchronization, and SHOULD be passed on when\n         appropriate as a Divert option to another Discovery Initiator.\n         The cache lifetime is an implementation choice that MAY be\n         modified by network Intent.\n\n         If multiple Discovery Responders are found for the same\n         objective, they SHOULD all be cached, unless this creates a\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 16]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n         resource shortage.  The method of choosing between multiple\n         responders is an implementation choice.\n\n         A GDNP device with multiple link-layer interfaces (typically a\n         router) MUST support discovery on all interfaces.  If it\n         receives a DISCOVERY message on a given interface for a\n         specific objective that it does not support and for which it\n         has not previously discovered a Discovery Responder, it MUST\n         relay the query by re-issuing the same DISCOVERY message on its\n         other interfaces.  However, it MUST limit the total rate at\n         which it relays discovery messages to a reasonable value, in\n         order to mitigate possible denial of service attacks.  It MUST\n         cache the Session ID value of each relayed discovery message\n         and, to prevent loops, MUST NOT relay a DISCOVERY message which\n         carries such a cached Session ID.  These precautions avoid\n         discovery loops.\n\n         This relayed discovery mechanism, with caching of the results,\n         should be sufficient to support most network bootstrapping\n         scenarios.\n\n   o  A complete discovery process will start with multicast on the\n      local link; a neighbor might divert it to an off-link destination,\n      which could be a default higher-level gateway in a hierarchical\n      network.  Then discovery would continue with a unicast to that\n      gateway; if that gateway is still not the right counterpart, it\n      should divert to another gateway, which is in principle closer to\n      the right counterpart.  Finally the right counterpart responds to\n      start the negotiation or synchronization process.\n\n   o  Rapid Mode (Discovery/Negotiation binding)\n\n         A Discovery message MAY include one or more Negotiation\n         Objective option(s).  This allows a rapid mode of negotiation\n         described in Section 3.3.4.  A similar mechanism is defined for\n         synchronization in Section 3.3.5.\n\n3.3.4.  Negotiation Procedures\n\n   A negotiation initiator sends a negotiation request to a counterpart\n   ASA, including a specific negotiation objective.  It may request the\n   negotiation counterpart to make a specific configuration.\n   Alternatively, it may request a certain simulation or forecast result\n   by sending a dry run configuration.  The details, including the\n   distinction between dry run and an actual configuration change, will\n   be defined separately for each type of negotiation objective.\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 17]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   If the counterpart can immediately apply the requested configuration,\n   it will give an immediate positive (accept) answer.  This will end\n   the negotiation phase immediately.  Otherwise, it will negotiate.  It\n   will reply with a proposed alternative configuration that it can\n   apply (typically, a configuration that uses fewer resources than\n   requested by the negotiation initiator).  This will start a bi-\n   directional negotiation to reach a compromise between the two ASAs.\n\n   The negotiation procedure is ended when one of the negotiation peers\n   sends a Negotiation Ending message, which contains an accept or\n   decline option and does not need a response from the negotiation\n   peer.  Negotiation may also end in failure (equivalent to a decline)\n   if a timeout is exceeded or a loop count is exceeded.\n\n   A negotiation procedure concerns one objective and one counterpart.\n   Both the initiator and the counterpart may take part in simultaneous\n   negotiations with various other ASAs, or in simultaneous negotiations\n   about different objectives.  Thus, GDNP is expected to be used in a\n   multi-threaded mode.  Certain negotiation objectives may have\n   restrictions on multi-threading, for example to avoid over-allocating\n   resources.\n\n   Rapid Mode (Discovery/Negotiation linkage)\n\n      A Discovery message MAY include a Negotiation Objective option.\n      In this case the Discovery message also acts as a Request message\n      to indicate to the Discovery Responder that it could directly\n      reply to the Discovery Initiator with a Negotiation message for\n      rapid processing, if it could act as the corresponding negotiation\n      counterpart.  However, the indication is only advisory not\n      prescriptive.\n\n      This rapid mode could reduce the interactions between nodes so\n      that a higher efficiency could be achieved.  This rapid\n      negotiation function SHOULD be configured off by default and MAY\n      be configured on or off by Intent.\n\n3.3.5.  Synchronization Procedure\n\n   A synchronization initiator sends a synchronization request to a\n   counterpart, including a specific synchronization objective.  The\n   counterpart responds with a Response message containing the current\n   value of the requested synchronization objective.  No further\n   messages are needed.  If no Response message is received, the\n   synchronization request MAY be repeated after a suitable timeout.\n\n   In the case just described, the message exchange is unicast and\n   concerns only one synchronization objective.  For large groups of\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 18]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   nodes requiring the same data, synchronization flooding is available.\n   For this, a synchronization responder MAY send an unsolicited\n   Response message containing one or more Synchronization Objective\n   option(s), if and only if the specification of those objectives\n   permits it.  This is sent as a multicast message to the\n   ALL_GDNP_NEIGHBOR multicast address (Section 3.4).  In this case a\n   suitable mechanism is needed to avoid excessive multicast traffic.\n   This mechanism MUST be defined as part of the specification of the\n   synchronization objective(s) concerned.  It might be a simple rate\n   limit or a more complex mechanism such as the Trickle algorithm\n   [RFC6206].\n\n   A GDNP device with multiple link-layer interfaces (typically a\n   router) MUST support synchronization flooding on all interfaces.  If\n   it receives a multicast unsolicited Response message on a given\n   interface, it MUST relay it by re-issuing the same Response message\n   on its other interfaces.  However, it MUST limit the total rate at\n   which it relays Response messages to a reasonable value, in order to\n   mitigate possible denial of service attacks.  It MUST cache the\n   Session ID value of each relayed discovery message and, to prevent\n   loops, MUST NOT relay a Response message which carries such a cached\n   Session ID.  These precautions avoid synchronization loops.\n\n   Note that this mechanism is unreliable in the case of sleeping nodes.\n   Sleeping nodes that require an objective subject to synchronization\n   flooding SHOULD periodically initiate normal synchronization for that\n   objective.\n\n   Rapid Mode (Discovery/Synchronization linkage)\n\n      A Discovery message MAY include one or more Synchronization\n      Objective option(s).  In this case the Discovery message also acts\n      as a Request message to indicate to the Discovery Responder that\n      it could directly reply to the Discovery Initiator with a Response\n      message with synchronization data for rapid processing, if the\n      discovery target supports the corresponding synchronization\n      objective(s).  However, the indication is only advisory not\n      prescriptive.\n\n      This rapid mode could reduce the interactions between nodes so\n      that a higher efficiency could be achieved.  This rapid\n      synchronization function SHOULD be configured off by default and\n      MAY be configured on or off by Intent.\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 19]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.4.  GDNP Constants\n\n   o  ALL_GDNP_NEIGHBOR\n\n      A link-local scope multicast address used by a GDNP-enabled device\n      to discover GDNP-enabled neighbor (i.e., on-link) devices . All\n      devices that support GDNP are members of this multicast group.\n\n      *  IPv6 multicast address: TBD1\n\n      *  IPv4 multicast address: TBD2\n\n   o  GDNP Listen Port (TBD3)\n\n      A UDP and TCP port that every GDNP-enabled network device always\n      listens to.\n\n   o  GDNP_DEF_TIMEOUT (60000 milliseconds)\n\n      The default timeout used to determine that a discovery or\n      negotiation has failed to complete.\n\n   o  GDNP_DEF_LOOPCT (6)\n\n      The default loop count used to determine that a negotiation has\n      failed to complete.\n\n3.5.  Session Identifier (Session ID)\n\n   A 24-bit opaque value used to distinguish multiple sessions between\n   the same two devices.  A new Session ID MUST be generated for every\n   new Discovery or Request message, and for every unsolicited Response\n   message.  All follow-up messages in the same discovery,\n   synchronization or negotiation procedure, which is initiated by the\n   request message, MUST carry the same Session ID.\n\n   The Session ID SHOULD have a very low collision rate locally.  It is\n   RECOMMENDED to be generated by a pseudo-random algorithm using a seed\n   which is unlikely to be used by any other device in the same network\n   [RFC4086].\n\n3.6.  GDNP Messages\n\n   This document defines the following GDNP message format and types.\n   Message types not listed here are reserved for future use.  The\n   numeric encoding for each message type is shown in parentheses.\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 20]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.6.1.  GDNP Message Format\n\n   GDNP messages share an identical fixed format header and a variable\n   format area for options.  GDNP message headers and options are in the\n   type-length-value (TLV) format defined in DNCP (see Section "Type-\n   Length-Value Objects" in [I-D.ietf-homenet-dncp]).\n\n   Every GDNP message carries a Session ID.  Options are presented\n   serially in the options field, with padding to 4-byte alignment.\n\n   The following diagram illustrates the format of GDNP messages:\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _          MESSAGE_TYPE         _                4              _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _    Reserved   _                Session ID                     _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                        Options  (variable length)             _\n   .                                                               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   MESSAGE_TYPE:  Identifies the GDNP message type. 16-bit.\n\n   Reserved:  Set to zero, ignored on receipt. 8-bit.\n\n   Session ID:  Identifies this GDNP session, as defined in Section 3.5.\n      24-bit.\n\n   Options:  GDNP Options carried in this message.  Options are defined\n      starting at Section 3.7.\n\n3.6.2.  Discovery Message\n\n   DISCOVERY (MESSAGE_TYPE = G1):\n\n   A discovery initiator sends a DISCOVERY message to initiate a\n   discovery process.\n\n   The discovery initiator sends the DISCOVERY messages to the link-\n   local ALL_GDNP_NEIGHBOR multicast address for discovery, and stores\n   the discovery results (including responding discovery objectives and\n   corresponding unicast addresses or FQDNs).\n\n   A DISCOVERY message MUST include exactly one of the following:\n\n   o  a discovery objective option (Section 3.8.1).\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 21]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  a negotiation objective option (Section 3.8.1) to indicate to the\n      discovery target that it MAY directly reply to the discovery\n      initiatior with a NEGOTIATION message for rapid processing, if it\n      could act as the corresponding negotiation counterpart.  The\n      sender of such a DISCOVERY message MUST initialize a negotiation\n      timer and loop count in the same way as a REQUEST message\n      (Section 3.6.4).\n\n   o  one or more synchronization objective options (Section 3.8.1) to\n      indicate to the discovery target that it MAY directly reply to the\n      discovery initiator with a RESPONSE message for rapid processing,\n      if it could act as the corresponding synchronization counterpart.\n\n3.6.3.  Response Message\n\n   RESPONSE (MESSAGE_TYPE = G2):\n\n   A node which receives a DISCOVERY message sends a Response message to\n   respond to a discovery.  It MUST contain the same Session ID as the\n   DISCOVERY message.  It MAY include a copy of the discovery objective\n   from the DISCOVERY message.\n\n   If the responding node supports the discovery objective of the\n   discovery, it MUST include at least one kind of locator option\n   (Section 3.7.7) to indicate its own location.  A combination of\n   multiple kinds of locator options (e.g.  IP address option + FQDN\n   option) is also valid.\n\n   If the responding node itself does not support the discovery\n   objective, but it knows the locator of the discovery objective, then\n   it SHOULD respond to the discovery message with a divert option\n   (Section 3.7.2) embedding a locator option or a combination of\n   multiple kinds of locator options which indicate the locator(s) of\n   the discovery objective.\n\n   A node which receives a synchronization request sends a Response\n   message with the synchronization data, in the form of GDNP Option(s)\n   for the specific synchronization objective(s).\n\n3.6.4.  Request Message\n\n   REQUEST (MESSAGE_TYPE = G3):\n\n   A negotiation or synchronization requesting node sends the REQUEST\n   message to the unicast address (directly stored or resolved from the\n   FQDN) of the negotiation or synchronization counterpart (selected\n   from the discovery results).\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 22]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   A request message MUST include the relevant objective option, with\n   the requested value in the case of negotiation.\n\n   When an initiator sends a REQUEST message, it MUST initialize a\n   negotiation timer for the new negotiation thread with the value\n   GDNP_DEF_TIMEOUT milliseconds.  Unless this timeout is modified by a\n   CONFIRM-WAITING message (Section 3.6.7), the initiator will consider\n   that the negotiation has failed when the timer expires.\n\n   When an initiator sends a REQUEST message, it MUST initialize the\n   loop count of the objective option with a value defined in the\n   specification of the option or, if no such value is specified, with\n   GDNP_DEF_LOOPCT.\n\n3.6.5.  Negotiation Message\n\n   NEGOTIATION (MESSAGE_TYPE = G4):\n\n   A negotiation counterpart sends a NEGOTIATION message in response to\n   a REQUEST message, a NEGOTIATION message, or a DISCOVERY message in\n   Rapid Mode.  A negotiation process MAY include multiple steps.\n\n   The NEGOTIATION message MUST include the relevant Negotiation\n   Objective option, with its value updated according to progress in the\n   negotiation.  The sender MUST decrement the loop count by 1.  If the\n   loop count becomes zero both parties will consider that the\n   negotiation has failed.\n\n3.6.6.  Negotiation-ending Message\n\n   NEGOTIATION-ENDING (MESSAGE_TYPE = G5):\n\n   A negotiation counterpart sends an NEGOTIATION-ENDING message to\n   close the negotiation.  It MUST contain one, but only one of accept/\n   decline option, defined in Section 3.7.3 and Section 3.7.4.  It could\n   be sent either by the requesting node or the responding node.\n\n3.6.7.  Confirm-waiting Message\n\n   CONFIRM-WAITING (MESSAGE_TYPE = G6):\n\n   A responding node sends a CONFIRM-WAITING message to indicate the\n   requesting node to wait for a further negotiation response.  It might\n   be that the local process needs more time or that the negotiation\n   depends on another triggered negotiation.  This message MUST NOT\n   include any other options than the Waiting Time Option\n   (Section 3.7.5).\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 23]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.7.  GDNP General Options\n\n   This section defines the GDNP general options for the negotiation and\n   synchronization protocol signaling.  Additional option types are\n   reserved for GDNP general options defined in the future.\n\n3.7.1.  Format of GDNP Options\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _          option-code          _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                          option-data                          _\n   _                      (option-len octets)                      _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  An unsigned integer identifying the specific option\n      type carried in this option.\n\n   Option-len:  An unsigned integer giving the length of the option-data\n      field in this option in octets.\n\n   Option-data:  The data for the option; the format of this data\n      depends on the definition of the option.\n\n   GDNP options are scoped by using encapsulation.  If an option\n   contains other options, the outer Option-len includes the total size\n   of the encapsulated options, and the latter apply only to the outer\n   option.\n\n3.7.2.  Divert Option\n\n   The divert option is used to redirect a GDNP request to another node,\n   which may be more appropriate for the intended negotiation or\n   synchronization.  It may redirect to an entity that is known as a\n   specific negotiation or synchronization counterpart (on-link or off-\n   link) or a default gateway.  The divert option MUST only be\n   encapsulated in Response messages.  If found elsewhere, it SHOULD be\n   silently ignored.\n\n\n\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 24]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_DIVERT         _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _             Locator Option(s) of Diversion Target(s)          _\n   .                                                               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_DIVERT (G32).\n\n   Option-len:  The total length of diverted destination sub-option(s)\n      in octets.\n\n   Locator Option(s) of Diversion Device(s):  Embedded Locator Option(s)\n      (Section 3.7.7) that point to diverted destination target(s).\n\n3.7.3.  Accept Option\n\n   The accept option is used to indicate to the negotiation counterpart\n   that the proposed negotiation content is accepted.\n\n   The accept option MUST only be encapsulated in Negotiation-ending\n   messages.  If found elsewhere, it SHOULD be silently ignored.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _        OPTION_ACCEPT          _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_ACCEPT (G33)\n\n   Option-len:  0\n\n3.7.4.  Decline Option\n\n   The decline option is used to indicate to the negotiation counterpart\n   the proposed negotiation content is declined and end the negotiation\n   process.\n\n   The decline option MUST only be encapsulated in Negotiation-ending\n   messages.  If found elsewhere, it SHOULD be silently ignored.\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 25]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _        OPTION_DECLINE         _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_DECLINE (G34)\n\n   Option-len:  0\n\n   Notes: there are scenarios where a negotiation counterpart wants to\n   decline the proposed negotiation content and continue the negotiation\n   process.  For these scenarios, the negotiation counterpart SHOULD use\n   a Negotiate message, with either an objective option that contains at\n   least one data field with all bits set to 1 to indicate a meaningless\n   initial value, or a specific objective option that provides further\n   conditions for convergence.\n\n3.7.5.  Waiting Time Option\n\n   The waiting time option is used to indicate that the negotiation\n   counterpart needs to wait for a further negotiation response, since\n   the processing might need more time than usual or it might depend on\n   another triggered negotiation.\n\n   The waiting time option MUST only be encapsulated in Confirm-waiting\n   messages.  If found elsewhere, it SHOULD be silently ignored.  When\n   received, its value overwrites the negotiation timer (Section 3.6.4).\n\n   The counterpart SHOULD send a Negotiation, Negotiation-Ending or\n   another Confirm-waiting message before the negotiation timer expires.\n   If not, the initiator MUST abandon or restart the negotiation\n   procedure, to avoid an indefinite wait.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _       OPTION_WAITING          _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                              Time                             _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_WAITING (G35)\n\n   Option-len:  4, in octets\n\n   Time:  Time in milliseconds\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 26]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.7.6.  Device Identity Option\n\n   The Device Identity option carries the identities of the sender and\n   of the domain(s) that it belongs to.  The format of the Device\n   Identity option is as follows:\n\n      0                   1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     _       OPTION_DEVICE_ID        _           option-len          _\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     _                                                               _\n     .                    Identities (variable length)               .\n     .                                                               .\n     _                                                               _\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_DEVICE_ID (G36)\n\n   Option-len:  Length of identities in octets\n\n   Identities:  A variable-length field containing the device identity\n      and one or more domain identities.  The format is not yet defined.\n\n   Note:  Currently this option is a placeholder.  It might be removed\n      or modified.\n\n3.7.7.  Locator Options\n\n   These locator options are used to present reachability information\n   for an ASA, a device or an interface.  They are Locator IPv4 Address\n   Option, Locator IPv6 Address Option and Locator FQDN (Fully Qualified\n   Domain Name) Option.\n\n   Note that it is assumed that all locators are in scope throughout the\n   GDNP domain.  GDNP is not intended to work across disjoint addressing\n   or naming realms.\n\n3.7.7.1.  Locator IPv4 address option\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _    OPTION_LOCATOR_IPV4ADDR    _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                          IPv4-Address                         _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 27]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Option-code:  OPTION_LOCATOR_IPV4ADDR (G37)\n\n   Option-len:  4, in octets\n\n   IPv4-Address:  The IPv4 address locator of the target\n\n   Note: If an operator has internal network address translation for\n   IPv4, this option MUST NOT be used within the Divert option.\n\n3.7.7.2.  Locator IPv6 address option\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _   OPTION_LOCATOR_IPV6ADDR     _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                                                               _\n   _                          IPv6-Address                         _\n   _                                                               _\n   _                                                               _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_LOCATOR_IPV6ADDR (G38)\n\n   Option-len:  16, in octets\n\n   IPv6-Address:  The IPv6 address locator of the target\n\n   Note: A link-local IPv6 address MUST NOT be used when this option is\n   used within the Divert option.\n\n3.7.7.3.  Locator FQDN option\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_FQDN           _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                   Fully Qualified Domain Name                 _\n   _                       (variable length)                       _\n   .                                                               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_FQDN (G39)\n\n   Option-len:  Length of Fully Qualified Domain Name in octets\n\n   Domain-Name:  The Fully Qualified Domain Name of the target\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 28]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Note: Any FQDN which might not be valid throughout the network in\n   question, such as a Multicast DNS name [RFC6762], MUST NOT be used\n   when this option is used within the Divert option.\n\n3.8.  Objective Options\n\n3.8.1.  Format of Objective Options\n\n   An objective option is used to identify objectives for the purposes\n   of discovery, negotiation or synchronization.  All objectives must\n   follow a common format as follows:\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_XXX            _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _   flags       _   loop-count  _                               _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+          value                _\n   .                                    (variable length)          .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_XXX: The option code assigned in the\n      specification of the XXX objective.\n\n   option-len:  The total length in octets.\n\n   flags:  Flag bits.\n\n      Bit 0 (D bit): set if this objective is valid for GDNP discovery\n      operations.\n\n      Bit 1 (N bit): set if this objective is valid for GDNP negotiation\n      operations.\n\n      Bit 2 (S bit): set if this objective is valid for GDNP\n      synchronization operations.\n\n      Bits 3~7: reserved, set to zero and ignored on reception.\n\n   loop-count:  The loop count for terminating negotation.  This field\n      is present if and only if the objective is a negotiation\n      objective.\n\n   value:  This field is to express the actual value of a negotiation or\n      synchronization objective.  Its format is defined in the\n      specification of the objective and may be a single value or a data\n      structure of any kind.\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 29]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.8.2.  General Considerations for Objective Options\n\n   Objective Options MUST be assigned an option type greater than G63 in\n   the GDNP option table.\n\n   An Objective Option that contains no additional fields, i.e., has a\n   length of 4 octets, is a discovery objective and MUST only be used in\n   Discovery and Response messages.\n\n   The Negotiation Objective Options contain negotiation objectives,\n   which are various according to different functions/services.  They\n   MUST be carried by Discovery, Request or Negotiation Messages only.\n   The negotiation initiator MUST set the initial "loop-count" to a\n   value specified in the specification of the objective or, if no such\n   value is specified, to GDNP_DEF_LOOPCT.\n\n   For most scenarios, there should be initial values in the negotiation\n   requests.  Consequently, the Negotiation Objective options MUST\n   always be completely presented in a Request message, or in a\n   Discovery message in rapid mode.  If there is no initial value, the\n   bits in the value field SHOULD all be set to 1 to indicate a\n   meaningless value, unless this is inappropriate for the specific\n   negotiation objective.\n\n   Synchronization Objective Options are similar, but MUST be carried by\n   Discovery, Request or Response messages only.  They include value\n   fields only in Response messages.\n\n3.8.3.  Organizing of Objective Options\n\n   As noted earlier, one negotiation objective is handled by each GDNP\n   negotiation thread.  Therefore, a negotiation objective, which is\n   based on a specific function or action, SHOULD be organized as a\n   single GDNP option.  It is NOT RECOMMENDED to organize multiple\n   negotiation objectives into a single option, nor to split a single\n   function or action into multiple negotiation objectives.\n\n   A synchronization objective SHOULD also be organized as a single GDNP\n   option.\n\n   Some objectives will support more than one operational mode.  An\n   example is a negotiation objective with both a "dry run" mode (where\n   the negotiation is to find out whether the other end can in fact make\n   the requested change without problems) and a "live" mode.  Such modes\n   will be defined in the specification of such an objective.  These\n   objectives SHOULD include a "flags" octet, with bits indicating the\n   applicable mode(s).\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 30]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   An objective may have multiple parameters.  Parameters can be\n   categorized into two classes: the obligatory ones presented as fixed\n   fields; and the optional ones presented in TLV sub-options or some\n   other form of data structure.  The format might be inherited from an\n   existing management or configuration protocol, the objective option\n   acting as a carrier for that format.  The data structure might be\n   defined in a formal language, but that is a matter for the\n   specifications of individual objectives.  There are many candidates,\n   according to the context, such as ABNF, RBNF, XML Schema, possibly\n   YANG, etc.  The GDNP protocol itself is agnostic on these questions.\n\n   It is NOT RECOMMENDED to split parameters in a single objective into\n   multiple options, unless they have different response periods.  An\n   exception scenario may also be described by split objectives.\n\n3.8.4.  Vendor Specific Objective Options\n\n   Option codes G128~159 have been reserved for vendor specific options.\n   Multiple option codes have been assigned because a single vendor\n   might use multiple options simultaneously.  These vendor specific\n   options are highly likely to have different meanings when used by\n   different vendors.  Therefore, they SHOULD NOT be used without an\n   explicit human decision and SHOULD NOT be used in unmanaged networks\n   such as home networks.\n\n   There is one general requirement that applies to all vendor specific\n   options.  They MUST start with a field that uniquely identifies the\n   enterprise that defines the option, in the form of a registered 32\n   bit Private Enterprise Number (PEN) [I-D.liang-iana-pen].  There is\n   no default value for this field.  Note that it is not used during\n   discovery.  It MUST be verified during negotiation or\n   synchronization.\n\n   In the case of a vendor-specific objective, the loop count and flags,\n   if present, follow the PEN.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_vendor         _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                              PEN                              _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _   flags       _   loop-count  _                               _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+          value                _\n   .                                    (variable length)          .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 31]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Option-code:  OPTION_vendor (G128~159)\n\n   Option-len:  The total length in octets.\n\n   PEN:  Private Enterprise Number.\n\n   flags:  See Section 3.8.1\n\n   loop-count:  See Section 3.8.1 This field is present if and only if\n      the objective is a negotiation objective.\n\n   value:  This field is to express the actual value of a negotiation or\n      synchronization objective.  Its format is defined in the vendor\'s\n      specification of the objective.\n\n3.8.5.  Experimental Objective Options\n\n   Option codes G176~191 have been reserved for experimental options.\n   Multiple option codes have been assigned because a single experiment\n   may use multiple options simultaneously.  These experimental options\n   are highly likely to have different meanings when used for different\n   experiments.  Therefore, they SHOULD NOT be used without an explicit\n   human decision and SHOULD NOT be used in unmanaged networks such as\n   home networks.\n\n   These option codes are also RECOMMENDED for use in documentation\n   examples.\n\n4.  Open Issues\n\n   There are various unresolved design questions that are worthy of more\n   work in the near future, as listed below (statically numbered in\n   historical order for reference purposes, with the resolved issues\n   retained for reference):\n\n   o  1.  UDP vs TCP: For now, this specification suggests UDP and TCP\n      as message transport mechanisms.  This is not clarified yet.  UDP\n      is good for short conversations, is necessary for multicast\n      discovery, and generally fits the discovery and divert scenarios\n      well.  However, it will cause problems with large messages.  TCP\n      is good for stable and long sessions, with a little bit of time\n      consumption during the session establishment stage.  If messages\n      exceed a reasonable MTU, a TCP mode will be required in any case.\n      This question may be affected by the security discussion.\n\n      RESOLVED by specifying UDP for short message and TCP for longer\n      one.\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 32]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  2.  DTLS or TLS vs built-in security mechanism.  For now, this\n      specification has chosen a PKI based built-in security mechanism\n      based on asymmetric cryptography.  However, (D)TLS might be chosen\n      as security solution to avoid duplication of effort.  It also\n      allows essentially similar security for short messages over UDP\n      and longer ones over TCP.  The implementation trade-offs are\n      different.  The current approach requires expensive asymmetric\n      cryptographic calculations for every message.  (D)TLS has startup\n      overheads but cheaper crypto per message.  DTLS is less mature\n      than TLS.\n\n      RESOLVED by specifying external security (ACP or (D)TLS).\n\n\n\n   o  The following open issues apply only if the current security model\n      is retained:\n\n      *  2.1.  For replay protection, GDNP currently requires every\n         participant to have an NTP-synchronized clock.  Is this OK for\n         low-end devices, and how does it work during device\n         bootstrapping?  We could take the Timestamp out of signature\n         option, to become an independent and OPTIONAL (or RECOMMENDED)\n         option.\n\n      *  2.2.  The Signature Option states that this option could be any\n         place in a message.  Wouldn\'t it be better to specify a\n         position (such as the end)?  That would be much simpler to\n         implement.\n\n      RESOLVED by changing security model.\n\n   o  3.  DoS Attack Protection needs work.\n\n      RESOLVED by adding text.\n\n\n   o  4.  Should we consider preferring a text-based approach to\n      discovery (after the initial discovery needed for bootstrapping)?\n      This could be a complementary mechanism for multicast based\n      discovery, especially for a very large autonomic network.\n      Centralized registration could be automatically deployed\n      incrementally.  At the very first stage, the repository could be\n      empty; then it could be filled in by the objectives discovered by\n      different devices (for example using Dynamic DNS Update).  The\n      more records are stored in the repository, the less the multicast-\n      based discovery is needed.  However, if we adopt such a mechanism,\n      there would be challenges: stateful solution, and security.\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 33]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      RESOLVED for now by adding optional use of DNS-SD by ASAs.\n\n\n\n   o  5.  Need to expand description of the minimum requirements for the\n      specification of an individual discovery, synchronization or\n      negotiation objective.\n\n   o  6.  Use case and protocol walkthrough.  A description of how a\n      node starts up, performs discovery, and conducts negotiation and\n      synchronisation for a sample use case would help readers to\n      understand the applicability of this specification.  Maybe it\n      should be an artificial use case or maybe a simple real one, based\n      on a conceptual API.  However, the authors have not yet decided\n      whether to have a separate document or have it in the protocol\n      document.\n\n   o  7.  Cross-check against other ANIMA WG documents for consistency\n      and gaps.\n\n   o  8.  Consideration of ADNCP proposal.\n\n      RESOLVED by adding optional use of DNCP for flooding-type\n      synchronization.\n\n\n   o  9.  Clarify how a GDNP instance knows whether it is running inside\n      the ACP.  (Sheng)\n\n      RESOLVED by improved text.\n\n\n   o  10.  Clarify how a non-ACP GDNP instance initiates (D)TLS.\n      (Sheng)\n\n      RESOLVED by improved text and declaring DTLS out of scope for this\n      draft.\n\n\n   o  11.  Clarify how UDP/TCP choice is made.  (Sheng) [Like DNS? -\n      Brian]\n\n      RESOLVED by improved text.\n\n\n   o  12.  Justify that IP address within ACP or (D)TLS environment is\n      sufficient to prove AN identity; or explain how Device Identity\n      Option is used.  (Sheng)\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 34]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      RESOLVED for now: we assume that all ASAs in a device are trusted\n      as soon as the device is trusted, so they share credentials.  In\n      that case the Device Identity Option is useless.  This needs to be\n      reviewed later.\n\n\n   o  13.  Emphasise that negotiation/synchronization are independent\n      from discovery, although the rapid discovery mode includes the\n      first step of a negotiation/synchronization.  (Sheng)\n\n      RESOLVED by improved text.\n\n\n   o  14.  Do we need an unsolicited flooding mechanism for discovery\n      (for discovery results that everyone needs), to reduce scaling\n      impact of flooding discovery messages?  (Toerless)\n\n      RESOLVED: Yes, added to requirements and solution.\n\n\n   o  15.  Do we need flag bits in Objective Options to distinguish\n      distinguish Synchronization and Negotiation "Request" or rapid\n      mode "Discovery" messages?  (Bing)\n\n      RESOLVED: yes, work on the API showed that these flags are\n      essential.\n\n   o  16.  (Related to issue 14).  Should we revive the "unsolicited\n      Response" for flooding synchronisation data?  This has to be done\n      carefully due to the well-known issues with flooding, but it could\n      be useful, e.g. for Intent distribution, where DNCP doesn\'t seem\n      applicable.\n\n   o  17.  Ensure that the discovery mechanism is completely proof\n      against loops and protected against duplicate responses.\n\n   o  18.  Discuss the handling of multiple valid discovery responses.\n\n   o  19.  Should we use a text-oriented format such as JSON/CBOR\n      instead of native binary TLV format?\n\n   o  20.  Is the Divert option needed?  If a discovery response\n      provides a valid IP address or FQDN, the recipient doesn\'t gain\n      any extra knowledge from the Divert.\n\n   o  21.  Rename the protocol as GRASP (GeneRic Autonomic Signaling\n      Protocol)?\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 35]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n5.  Security Considerations\n\n   It is obvious that a successful attack on negotiation-enabled nodes\n   would be extremely harmful, as such nodes might end up with a\n   completely undesirable configuration that would also adversely affect\n   their peers.  GDNP nodes and messages therefore require full\n   protection.\n\n   - Authentication\n\n      A cryptographically authenticated identity for each device is\n      needed in an autonomic network.  It is not safe to assume that a\n      large network is physically secured against interference or that\n      all personnel are trustworthy.  Each autonomic device MUST be\n      capable of proving its identity and authenticating its messages.\n      GDNP relies on a separate certificate-based security mechanism to\n      support authentication, data integrity protection, and anti-replay\n      protection.\n\n      Since GDNP is intended to be deployed in a single administrative\n      domain operating its own trust anchor and CA, there is no need for\n      a trusted public third party.  In a network requiring "air gap"\n      security, such a dependency would be unacceptable.\n\n   - Privacy and confidentiality\n\n      Generally speaking, no personal information is expected to be\n      involved in the signaling protocol, so there should be no direct\n      impact on personal privacy.  Nevertheless, traffic flow paths,\n      VPNs, etc. could be negotiated, which could be of interest for\n      traffic analysis.  Also, operators generally want to conceal\n      details of their network topology and traffic density from\n      outsiders.  Therefore, since insider attacks cannot be excluded in\n      a large network, the security mechanism for the protocol MUST\n      provide message confidentiality.\n\n   - DoS Attack Protection\n\n      GDNP discovery partly relies on insecure link-local multicast.\n      Since routers participating in GDNP sometimes relay discovery\n      messages from one link to another, this could be a vector for\n      denial of service attacks.  Relevant mitigations are specified in\n      Section 3.3.3.  Additionally, it is of great importance that\n      firewalls prevent any GDNP messages from entering the domain from\n      an untrusted source.\n\n   - Security during bootstrap and discovery\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 36]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      A node cannot authenticate GDNP traffic from other nodes until it\n      has identified the trust anchor and can validate certificates for\n      other nodes.  Also, until it has succesfully enrolled\n      [I-D.pritikin-anima-bootstrapping-keyinfra] it cannot assume that\n      other nodes are able to authenticate its own traffic.  Therefore,\n      GDNP discovery during the bootstrap phase for a new device will\n      inevitably be insecure and GDNP synchronization and negotiation\n      will be impossible until enrollment is complete.\n\n6.  IANA Considerations\n\n   Section 3.4 defines the following link-local multicast addresses,\n   which have been assigned by IANA for use by GDNP:\n\n   ALL_GDNP_NEIGHBOR multicast address  (IPv6): (TBD1).  Assigned in the\n      IPv6 Link-Local Scope Multicast Addresses registry.\n\n   ALL_GDNP_NEIGHBOR multicast address  (IPv4): (TBD2).  Assigned in the\n      IPv4 Multicast Local Network Control Block.\n\n      (Note in draft: alternatively, we could use 224.0.0.1, currently\n      defined as All Systems on this Subnet.)\n\n   Section 3.4 defines the following UDP and TCP port, which has been\n   assigned by IANA for use by GDNP:\n\n   GDNP Listen Port:  (TBD3)\n\n   This document defines the General Discovery and Negotiation Protocol\n   (GDNP).  The IANA is requested to create a GDNP registry within the\n   unused portion of the DNCP registry [I-D.ietf-homenet-dncp].  The\n   IANA is also requested to add two new registry tables to the newly-\n   created GDNP registry.  The two tables are the GDNP Messages table\n   and GDNP Options table.\n\n   Initial values for these registries are given below.  Future\n   assignments are to be made through Standards Action or Specification\n   Required [RFC5226].  Assignments for each registry consist of a type\n   code value, a name and a document where the usage is defined.\n\n   Note to the RFC Editor: In the following tables and in the body of\n   this document, the values G0, G1, etc., should be replaced by the\n   assigned values.\n\n   GDNP Messages table.  The values in this table are 16-bit unsigned\n   integers.  The following initial values are assigned in Section 3.6\n   in this document:\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 37]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n         Type  _          Name               _   RFCs\n      ---------+-----------------------------+------------\n           G0  _Reserved                     _ this document\n           G1  _Discovery Message            _ this document\n           G2  _Response Message             _ this document\n           G3  _Request Message              _ this document\n           G4  _Negotiation Message          _ this document\n           G5  _Negotiation-ending Message   _ this document\n           G6  _Confirm-waiting Message      _ this document\n        G7~31  _reserved for future messages _\n\n   GDNP Options table.  The values in this table are 16-bit unsigned\n   integers.  The following initial values are assigned in Section 3.7\n   and Section 3.8.1 in this document:\n\n         Type  _          Name               _   RFCs\n      ---------+-----------------------------+------------\n          G32  _Divert Option                _ this document\n          G33  _Accept Option                _ this document\n          G34  _Decline Option               _ this document\n          G35  _Waiting Time Option          _ this document\n          G36  _Device Identity Option       _ this document\n          G37  _Locator IPv4 Address Option  _ this document\n          G38  _Locator IPv6 Address Option  _ this document\n          G39  _Locator FQDN Option          _ this document\n       G40~63  _Reserved for future GDNP     _\n               _General Options              _\n       G64~127 _Reserved for future GDNP     _\n               _Objective Options            _\n       G128~159_Vendor Specific Options      _ this document\n       G160~175_Reserved for future use      _\n       G176~191_Experimental Options         _ this document\n       G192~???_Reserved for future use      _\n\n7.  Acknowledgements\n\n   A major contribution to the original version of this document was\n   made by Sheng Jiang.\n\n   Valuable comments were received from Michael Behringer, Jeferson\n   Campos Nobre, Laurent Ciavaglia, Zongpeng Du, Yu Fu, Zhenbin Li,\n   Dimitri Papadimitriou, Michael Richardson, Markus Stenberg, Rene\n   Struik, Dacheng Zhang, and other participants in the NMRG research\n   group and the ANIMA working group.\n\n   This document was produced using the xml2rfc tool [RFC2629].\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 38]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n8.  Change log [RFC Editor: Please remove]\n\n   draft-carpenter-anima-discovery-negotiation-protocol-04, 2015-06-20:\n\n   Tuned wording around hierarchical structure.\n\n   Changed "device" to "ASA" in many places.\n\n   Reformulated requirements to be clear that the ASA is the main\n   customer for signaling.\n\n   Added requirement for flooding unsolicited synch, and added it to\n   protocol spec.\n\n   Requirements clarified, expanded and rearranged following design team\n   discussion.\n\n   Clarified that GDNP discovery must not be a prerequisite for GDNP\n   negotiation or synchronization (resolved issue 13).\n\n   Specified flag bits for objective options (resolved issue 15).\n\n   Clarified usage of ACP vs TLS/DTLS and TCP vs UDP (resolved issues\n   9,10,11).\n\n   Editorial improvements.\n\n   draft-carpenter-anima-discovery-negotiation-protocol-03, 2015-04-20:\n\n   Removed intrinsic security, required external security\n\n   Format changes to allow ADNCP co-existence\n\n   Recognized DNS-SD as alternative discovery method\n\n   Editorial improvements\n\n   draft-carpenter-anima-discovery-negotiation-protocol-02, 2015-02-19:\n\n   Tuned requirements to clarify scope,\n\n   Clarified relationship between types of objective,\n\n   Clarified that objectives may be simple values or complex data\n   structures,\n\n   Improved description of objective options,\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 39]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Added loop-avoidance mechanisms (loop count and default timeout,\n   limitations on discovery relaying and on unsolicited responses),\n\n   Allow multiple discovery objectives in one response,\n\n   Provided for missing or multiple discovery responses,\n\n   Indicated how modes such as "dry run" should be supported,\n\n   Minor editorial and technical corrections and clarifications,\n\n   Reorganized future work list.\n\n   draft-carpenter-anima-discovery-negotiation-protocol-01, restructured\n   the logical flow of the document, updated to describe synchronization\n   completely, add unsolicited responses, numerous corrections and\n   clarifications, expanded future work list, 2015-01-06.\n\n   draft-carpenter-anima-discovery-negotiation-protocol-00, combination\n   of draft-jiang-config-negotiation-ps-03 and draft-jiang-config-\n   negotiation-protocol-02, 2014-10-08.\n\n9.  References\n\n9.1.  Normative References\n\n   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate\n              Requirement Levels", BCP 14, RFC 2119, March 1997.\n\n   [RFC4086]  Eastlake, D., Schiller, J., and S. Crocker, "Randomness\n              Requirements for Security", BCP 106, RFC 4086, June 2005.\n\n   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security\n              (TLS) Protocol Version 1.2", RFC 5246, August 2008.\n\n   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk, "Internet X.509 Public Key\n              Infrastructure Certificate and Certificate Revocation List\n              (CRL) Profile", RFC 5280, May 2008.\n\n   [RFC6347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer\n              Security Version 1.2", RFC 6347, January 2012.\n\n9.2.  Informative References\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 40]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   [I-D.behringer-anima-autonomic-control-plane]\n              Behringer, M., Bjarnason, S., BL, B., and T. Eckert, "An\n              Autonomic Control Plane", draft-behringer-anima-autonomic-\n              control-plane-02 (work in progress), March 2015.\n\n   [I-D.behringer-anima-reference-model]\n              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,\n              and B. Liu, "A Reference Model for Autonomic Networking",\n              draft-behringer-anima-reference-model-02 (work in\n              progress), June 2015.\n\n   [I-D.chaparadza-intarea-igcp]\n              Behringer, M., Chaparadza, R., Petre, R., Li, X., and H.\n              Mahkonen, "IP based Generic Control Protocol (IGCP)",\n              draft-chaparadza-intarea-igcp-00 (work in progress), July\n              2011.\n\n   [I-D.eckert-anima-stable-connectivity]\n              Eckert, T. and M. Behringer, "Using Autonomic Control\n              Plane for Stable Connectivity of Network OAM", draft-\n              eckert-anima-stable-connectivity-01 (work in progress),\n              March 2015.\n\n   [I-D.ietf-dnssd-requirements]\n              Lynn, K., Cheshire, S., Blanchet, M., and D. Migault,\n              "Requirements for Scalable DNS-SD/mDNS Extensions", draft-\n              ietf-dnssd-requirements-06 (work in progress), March 2015.\n\n   [I-D.ietf-homenet-dncp]\n              Stenberg, M. and S. Barth, "Distributed Node Consensus\n              Protocol", draft-ietf-homenet-dncp-05 (work in progress),\n              June 2015.\n\n   [I-D.ietf-homenet-hncp]\n              Stenberg, M., Barth, S., and P. Pfister, "Home Networking\n              Control Protocol", draft-ietf-homenet-hncp-06 (work in\n              progress), June 2015.\n\n   [I-D.ietf-netconf-restconf]\n              Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF\n              Protocol", draft-ietf-netconf-restconf-05 (work in\n              progress), June 2015.\n\n   [I-D.liang-iana-pen]\n              Liang, P., Melnikov, A., and D. Conrad, "Private\n              Enterprise Number (PEN) practices and Internet Assigned\n              Numbers Authority (IANA) registration considerations",\n              draft-liang-iana-pen-05 (work in progress), March 2015.\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 41]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   [I-D.pritikin-anima-bootstrapping-keyinfra]\n              Pritikin, M., Behringer, M., and S. Bjarnason,\n              "Bootstrapping Key Infrastructures", draft-pritikin-anima-\n              bootstrapping-keyinfra-01 (work in progress), February\n              2015.\n\n   [I-D.stenberg-anima-adncp]\n              Stenberg, M., "Autonomic Distributed Node Consensus\n              Protocol", draft-stenberg-anima-adncp-00 (work in\n              progress), March 2015.\n\n   [RFC2205]  Braden, B., Zhang, L., Berson, S., Herzog, S., and S.\n              Jamin, "Resource ReSerVation Protocol (RSVP) -- Version 1\n              Functional Specification", RFC 2205, September 1997.\n\n   [RFC2608]  Guttman, E., Perkins, C., Veizades, J., and M. Day,\n              "Service Location Protocol, Version 2", RFC 2608, June\n              1999.\n\n   [RFC2629]  Rose, M., "Writing I-Ds and RFCs using XML", RFC 2629,\n              June 1999.\n\n   [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n              "Remote Authentication Dial In User Service (RADIUS)", RFC\n              2865, June 2000.\n\n   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, "RSVP-TE: Extensions to RSVP for LSP\n              Tunnels", RFC 3209, December 2001.\n\n   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n              and M. Carney, "Dynamic Host Configuration Protocol for\n              IPv6 (DHCPv6)", RFC 3315, July 2003.\n\n   [RFC3416]  Presuhn, R., "Version 2 of the Protocol Operations for the\n              Simple Network Management Protocol (SNMP)", STD 62, RFC\n              3416, December 2002.\n\n   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              "Neighbor Discovery for IP version 6 (IPv6)", RFC 4861,\n              September 2007.\n\n   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an\n              IANA Considerations Section in RFCs", BCP 26, RFC 5226,\n              May 2008.\n\n   [RFC5971]  Schulzrinne, H. and R. Hancock, "GIST: General Internet\n              Signalling Transport", RFC 5971, October 2010.\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 42]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   [RFC6206]  Levis, P., Clausen, T., Hui, J., Gnawali, O., and J. Ko,\n              "The Trickle Algorithm", RFC 6206, March 2011.\n\n   [RFC6241]  Enns, R., Bjorklund, M., Schoenwaelder, J., and A.\n              Bierman, "Network Configuration Protocol (NETCONF)", RFC\n              6241, June 2011.\n\n   [RFC6733]  Fajardo, V., Arkko, J., Loughney, J., and G. Zorn,\n              "Diameter Base Protocol", RFC 6733, October 2012.\n\n   [RFC6762]  Cheshire, S. and M. Krochmal, "Multicast DNS", RFC 6762,\n              February 2013.\n\n   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service\n              Discovery", RFC 6763, February 2013.\n\n   [RFC6887]  Wing, D., Cheshire, S., Boucadair, M., Penno, R., and P.\n              Selkirk, "Port Control Protocol (PCP)", RFC 6887, April\n              2013.\n\n   [RFC7228]  Bormann, C., Ersue, M., and A. Keranen, "Terminology for\n              Constrained-Node Networks", RFC 7228, May 2014.\n\n   [RFC7575]  Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,\n              Carpenter, B., Jiang, S., and L. Ciavaglia, "Autonomic\n              Networking: Definitions and Design Goals", RFC 7575, June\n              2015.\n\n   [RFC7576]  Jiang, S., Carpenter, B., and M. Behringer, "General Gap\n              Analysis for Autonomic Networking", RFC 7576, June 2015.\n\nAppendix A.  Capability Analysis of Current Protocols\n\n   This appendix discusses various existing protocols with properties\n   related to the above negotiation and synchronisation requirements.\n   The purpose is to evaluate whether any existing protocol, or a simple\n   combination of existing protocols, can meet those requirements.\n\n   Numerous protocols include some form of discovery, but these all\n   appear to be very specific in their applicability.  Service Location\n   Protocol (SLP) [RFC2608] provides service discovery for managed\n   networks, but requires configuration of its own servers.  DNS-SD\n   [RFC6763] combined with mDNS [RFC6762] provides service discovery for\n   small networks with a single link layer.\n   [I-D.ietf-dnssd-requirements] aims to extend this to larger\n   autonomous networks.  However, both SLP and DNS-SD appear to target\n   primarily application layer services, not the layer 2 and 3\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 43]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   objectives relevant to basic network configuration.  Both SLP and\n   DNS-SD are text-based protocols.\n\n   Routing protocols are mainly one-way information announcements.  The\n   receiver makes independent decisions based on the received\n   information and there is no direct feedback information to the\n   announcing peer.  This remains true even though the protocol is used\n   in both directions between peer routers; there is state\n   synchronization, but no negotiation, and each peer runs its route\n   calculations independently.\n\n   Simple Network Management Protocol (SNMP) [RFC3416] uses a command/\n   response model not well suited for peer negotiation.  Network\n   Configuration Protocol (NETCONF) [RFC6241] uses an RPC model that\n   does allow positive or negative responses from the target system, but\n   this is still not adequate for negotiation.\n\n   There are various existing protocols that have elementary negotiation\n   abilities, such as Dynamic Host Configuration Protocol for IPv6\n   (DHCPv6) [RFC3315], Neighbor Discovery (ND) [RFC4861], Port Control\n   Protocol (PCP) [RFC6887], Remote Authentication Dial In User Service\n   (RADIUS) [RFC2865], Diameter [RFC6733], etc.  Most of them are\n   configuration or management protocols.  However, they either provide\n   only a simple request/response model in a master/slave context or\n   very limited negotiation abilities.\n\n   There are some signaling protocols with an element of negotiation.\n   For example Resource ReSerVation Protocol (RSVP) [RFC2205] was\n   designed for negotiating quality of service parameters along the path\n   of a unicast or multicast flow.  RSVP is a very specialised protocol\n   aimed at end-to-end flows.  However, it has some flexibility, having\n   been extended for MPLS label distribution [RFC3209].  A more generic\n   design is General Internet Signalling Transport (GIST) [RFC5971], but\n   it is complex, tries to solve many problems, and is also aimed at\n   per-flow signaling across many hops rather than at device-to-device\n   signaling.  However, we cannot completely exclude extended RSVP or\n   GIST as a synchronization and negotiation protocol.  They do not\n   appear to be directly useable for peer discovery.\n\n   We now consider two protocols that are works in progress at the time\n   of this writing.  Firstly, RESTCONF [I-D.ietf-netconf-restconf] is a\n   protocol intended to convey NETCONF information expressed in the YANG\n   language via HTTP, including the ability to transit HTML\n   intermediaries.  While this is a powerful approach in the context of\n   centralised configuration of a complex network, it is not well\n   adapted to efficient interactive negotiation between peer devices,\n   especially simple ones that are unlikely to include YANG processing\n   already.\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 44]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Secondly, we consider Distributed Node Consensus Protocol (DNCP)\n   [I-D.ietf-homenet-dncp].  This is defined as a generic form of state\n   synchronization protocol, with a proposed usage profile being the\n   Home Networking Control Protocol (HNCP) [I-D.ietf-homenet-hncp] for\n   configuring Homenet routers.  A specific application of DNCP for\n   autonomic networking was proposed in [I-D.stenberg-anima-adncp].\n\n   Specific features of DNCP include:\n\n   o  Every participating node has a unique node identifier.\n\n   o  DNCP messages are encoded as a sequence of TLV objects, sent over\n      unicast UDP or TCP, with or without (D)TLS security.\n\n   o  Multicast is used only for discovery of DNCP neighbors when lower\n      security is acceptable.\n\n   o  Synchronization of state is maintained by a flooding process using\n      the Trickle algorithm.  There is no bilateral synchronization or\n      negotiation capability.\n\n   o  The HNCP profile of DNCP is designed to operate between directly\n      connected neighbors on a shared link using UDP and link-local IPv6\n      addresses.\n\n   DNCP does not meet the needs of a general negotiation protocol,\n   because it is designed just for flooding synchronization.  Also, in\n   its HNCP profile it is limited to link-local messages and to IPv6.\n   However, at the minimum it is a very interesting test case for this\n   style of interaction between devices without needing a central\n   authority, and it is a proven method of network-wide state\n   synchronization by flooding.\n\n   A proposal was made some years ago for an IP based Generic Control\n   Protocol (IGCP) [I-D.chaparadza-intarea-igcp].  This was aimed at\n   information exchange and negotiation but not directly at peer\n   discovery.  However, it has many points in common with the present\n   work.\n\n   None of the above solutions appears to completely meet the needs of\n   generic discovery, state synchronization and negotiation in a single\n   solution.  Neither is there an obvious combination of protocols that\n   does so.  Therefore, this document proposes the design of a protocol\n   that does meet those needs.  However, this proposal needs to be\n   compared with alternatives such as extension and adaptation of GIST\n   or DNCP, or combination with IGCP.\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 45]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\nAuthors\' Addresses\n\n   Brian Carpenter\n   Department of Computer Science\n   University of Auckland\n   PB 92019\n   Auckland  1142\n   New Zealand\n\n   Email: brian.e.carpenter@gmail.com\n\n\n   Bing Liu\n   Huawei Technologies Co., Ltd\n   Q14, Huawei Campus\n   No.156 Beiqing Road\n   Hai-Dian District, Beijing  100095\n   P.R. China\n\n   Email: leo.liubing@huawei.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 22, 2015              [Page 46]\n', 'filename1': '\n\n\n\nNetwork Working Group                                       B. Carpenter\nInternet-Draft                                         Univ. of Auckland\nIntended status: Standards Track                                  B. Liu\nExpires: December 13, 2015                  Huawei Technologies Co., Ltd\n                                                           June 11, 2015\n\n\n A Generic Discovery and Negotiation Protocol for Autonomic Networking\n                 draft-carpenter-anima-gdn-protocol-04\n\nAbstract\n\n   This document establishes requirements for a signaling protocol that\n   enables autonomic devices and autonomic service agents to dynamically\n   discover peers, to synchronize state with them, and to negotiate\n   parameter settings mutually with them.  The document then defines a\n   general protocol for discovery, synchronization and negotiation,\n   while the technical objectives for specific scenarios are to be\n   described in separate documents.  An Appendix briefly discusses\n   existing protocols with comparable features.\n\nStatus of This Memo\n\n   This Internet-Draft is submitted in full conformance with the\n   provisions of BCP 78 and BCP 79.\n\n   Internet-Drafts are working documents of the Internet Engineering\n   Task Force (IETF).  Note that other groups may also distribute\n   working documents as Internet-Drafts.  The list of current Internet-\n   Drafts is at http://datatracker.ietf.org/drafts/current/.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or obsoleted by other documents at any\n   time.  It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as "work in progress."\n\n   This Internet-Draft will expire on December 13, 2015.\n\nCopyright Notice\n\n   Copyright (c) 2015 IETF Trust and the persons identified as the\n   document authors.  All rights reserved.\n\n   This document is subject to BCP 78 and the IETF Trust\'s Legal\n   Provisions Relating to IETF Documents\n   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication of this document.  Please review these documents\n   carefully, as they describe your rights and restrictions with respect\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 1]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   to this document.  Code Components extracted from this document must\n   include Simplified BSD License text as described in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty as\n   described in the Simplified BSD License.\n\nTable of Contents\n\n   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n   2.  Requirement Analysis of Discovery, Synchronization and\n       Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4\n     2.1.  Requirements for Discovery  . . . . . . . . . . . . . . .   4\n     2.2.  Requirements for Synchronization and Negotiation\n           Capability  . . . . . . . . . . . . . . . . . . . . . . .   6\n     2.3.  Specific Technical Requirements . . . . . . . . . . . . .   8\n   3.  GDNP Protocol Overview  . . . . . . . . . . . . . . . . . . .   9\n     3.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   9\n     3.2.  High-Level Design Choices . . . . . . . . . . . . . . . .  11\n     3.3.  GDNP Protocol Basic Properties and Mechanisms . . . . . .  14\n       3.3.1.  Required External Security Mechanism  . . . . . . . .  14\n       3.3.2.  Transport Layer Usage . . . . . . . . . . . . . . . .  15\n       3.3.3.  Discovery Mechanism and Procedures  . . . . . . . . .  15\n       3.3.4.  Negotiation Procedures  . . . . . . . . . . . . . . .  17\n       3.3.5.  Synchronization Procedure . . . . . . . . . . . . . .  18\n     3.4.  GDNP Constants  . . . . . . . . . . . . . . . . . . . . .  19\n     3.5.  Session Identifier (Session ID) . . . . . . . . . . . . .  19\n     3.6.  GDNP Messages . . . . . . . . . . . . . . . . . . . . . .  20\n       3.6.1.  GDNP Message Format . . . . . . . . . . . . . . . . .  20\n       3.6.2.  Discovery Message . . . . . . . . . . . . . . . . . .  20\n       3.6.3.  Response Message  . . . . . . . . . . . . . . . . . .  21\n       3.6.4.  Request Message . . . . . . . . . . . . . . . . . . .  22\n       3.6.5.  Negotiation Message . . . . . . . . . . . . . . . . .  22\n       3.6.6.  Negotiation-ending Message  . . . . . . . . . . . . .  22\n       3.6.7.  Confirm-waiting Message . . . . . . . . . . . . . . .  23\n     3.7.  GDNP General Options  . . . . . . . . . . . . . . . . . .  23\n       3.7.1.  Format of GDNP Options  . . . . . . . . . . . . . . .  23\n       3.7.2.  Divert Option . . . . . . . . . . . . . . . . . . . .  23\n       3.7.3.  Accept Option . . . . . . . . . . . . . . . . . . . .  24\n       3.7.4.  Decline Option  . . . . . . . . . . . . . . . . . . .  24\n       3.7.5.  Waiting Time Option . . . . . . . . . . . . . . . . .  25\n       3.7.6.  Device Identity Option  . . . . . . . . . . . . . . .  26\n       3.7.7.  Locator Options . . . . . . . . . . . . . . . . . . .  26\n     3.8.  Objective Options . . . . . . . . . . . . . . . . . . . .  28\n       3.8.1.  Format of Objective Options . . . . . . . . . . . . .  28\n       3.8.2.  General Considerations for Objective Options  . . . .  29\n       3.8.3.  Organizing of Objective Options . . . . . . . . . . .  29\n       3.8.4.  Vendor Specific Objective Options . . . . . . . . . .  30\n       3.8.5.  Experimental Objective Options  . . . . . . . . . . .  31\n   4.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .  31\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 2]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  35\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  36\n   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  37\n   8.  Change log [RFC Editor: Please remove]  . . . . . . . . . . .  38\n   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  39\n     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  39\n     9.2.  Informative References  . . . . . . . . . . . . . . . . .  39\n   Appendix A.  Capability Analysis of Current Protocols . . . . . .  42\n   Authors\' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  45\n\n1.  Introduction\n\n   The success of the Internet has made IP-based networks bigger and\n   more complicated.  Large-scale ISP and enterprise networks have\n   become more and more problematic for human based management.  Also,\n   operational costs are growing quickly.  Consequently, there are\n   increased requirements for autonomic behavior in the networks.\n   General aspects of autonomic networks are discussed in\n   [I-D.irtf-nmrg-autonomic-network-definitions] and\n   [I-D.irtf-nmrg-an-gap-analysis].  A reference model for autonomic\n   networking is given in [I-D.behringer-anima-reference-model].  In\n   order to fulfil autonomy, devices that embody autonomic service\n   agents have specific signaling requirements.  In particular they need\n   to discover each other, to synchronize state with each other, and to\n   negotiate parameters and resources directly with each other.  There\n   is no restriction on the type of parameters and resources concerned,\n   which include very basic information needed for addressing and\n   routing, as well as anything else that might be configured in a\n   conventional network.  The atomic unit of synchronization or\n   negotiation is referred to as an objective, defined more precisely\n   later in this document.\n\n   Following this Introduction, Section 2 describes the requirements for\n   discovery, synchronization and negotiation.  Negotiation is an\n   iterative process, requiring multiple message exchanges forming a\n   closed loop between the negotiating devices.  State synchronization,\n   when needed, can be regarded as a special case of negotiation,\n   without iteration.  Section 3.2 describes a behavior model for a\n   protocol intended to support discovery, synchronization and\n   negotiation.  The design of Generic Discovery and Negotiation\n   Protocol (GDNP) in Section 3 of this document is mainly based on this\n   behavior model.  The relevant capabilities of various existing\n   protocols are reviewed in Appendix A.\n\n   The proposed discovery mechanism is oriented towards synchronization\n   and negotiation objectives.  It is based on a neighbor discovery\n   process, but also supports diversion to off-link peers.  Although\n   many negotiations will occur between horizontally distributed peers,\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 3]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   many target scenarios are hierarchical networks, which is the\n   predominant structure of current large-scale managed networks.\n   However, when a device starts up with no pre-configuration, it has no\n   knowledge of the topology.  The protocol itself is capable of being\n   used in a small and/or flat network structure such as a small office\n   or home network as well as a professionally managed network.\n   Therefore, the discovery mechanism needs to be able to allow a device\n   to bootstrap itself without making any prior assumptions about\n   network structure.\n\n   Because GDNP can be used to perform a decision process among\n   distributed devices or between networks, it must run in a secure and\n   strongly authenticated environment.\n\n   It is understood that in realistic deployments, not all devices will\n   support GDNP.  It is expected that some autonomic service agents will\n   directly manage a group of non-autonomic nodes, and that other non-\n   autonomic nodes will be managed traditionally.  Such mixed scenarios\n   are not discussed in this specification.\n\n2.  Requirement Analysis of Discovery, Synchronization and Negotiation\n\n   This section discusses the requirements for discovery, negotiation\n   and synchronization capabilities.  The primary user of the protocol\n   is an autonomic service agent (ASA), so the requirements are mainly\n   expressed as the features needed by an ASA.  A single physical device\n   might contain several ASAs, and a single ASA might manage several\n   objectives.\n\n2.1.  Requirements for Discovery\n\n   1.  ASAs may be designed to manage anything, as required in\n   Section 2.2.  A basic requirement is therefore that the protocol can\n   represent and discover any kind of network objective among arbitrary\n   subsets of participating nodes.\n\n   In an autonomic network we must assume that when a device starts up\n   it has no information about any peer devices, the network structure,\n   or what specific role it must play.  The ASA(s) inside the device are\n   in the same situation.  In some cases, when a new application session\n   starts up within a device, the device or ASA may again lack\n   information about relevant peers.  It might be necessary to set up\n   resources on multiple other devices, coordinated and matched to each\n   other so that there is no wasted resource.  Security settings might\n   also need updating to allow for the new device or user.  The relevant\n   peers may be different for different technical objectives.  Therefore\n   discovery needs to be repeated as often as necessary to find peers\n   capable of acting as counterparts for each objective that a discovery\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 4]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   initiator needs to handle.  From this background we derive the next\n   three requirements:\n\n   2.  When an ASA first starts up, it has no knowledge of the specific\n   network to which it is attached.  Therefore the discovery process\n   must be able to support any network scenario, assuming only that the\n   device concerned is bootstrapped from factory condition.\n\n   3.  When an ASA starts up, it must require no information about any\n   peers in order to discover them.\n\n   4.  If an ASA supports multiple objectives, relevant peers may be\n   different for different discovery objectives, so discovery needs to\n   be repeated to find counterparts for each objective.  Thus, there\n   must be a mechanism by which an ASA can separately discover peer ASAs\n   for each of the technical objectives that it needs to manage,\n   whenever necessary.\n\n   5.  Following discovery, an ASA will normally perform negotiation or\n   synchronization for the corresponding objectives.  The design should\n   allow for this by associating discovery, negotiation and\n   synchronization objectives.  It may provide an optional mechanism to\n   combine discovery and negotiation/synchronization in a single call.\n\n   6.  Some objectives may only be significant on the local link, but\n   others may be significant across the routed network and require off-\n   link operations.  Thus, the relevant peers might be immediate\n   neighbors on the same layer 2 link, or they might be more distant and\n   only accessible via layer 3.  The mechanism must therefore provide\n   both on-link and off-link discovery of ASAs supporting specific\n   technical objectives.\n\n   7.  The discovery process should be flexible enough to allow for\n   special cases, such as the following:\n\n   o  In some networks, as mentioned above, there will be some\n      hierarchical structure, at least for certain synchronization or\n      negotiation objectives, but this is unknown in advance.  The\n      discovery protocol must therefore operate regardless of\n      hierarchical structure, which is an attribute of individual\n      objectives and not of the autonomic network as a whole.  This is\n      part of the more general requirement to discover off-link peers.\n\n   o  During initialisation, a device must be able to establish mutual\n      trust with the rest of the network and join an authentication\n      mechanism.  Although this will inevitably start with a discovery\n      action, it is a special case precisely because trust is not yet\n      established.  This topic is the subject of\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 5]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      [I-D.pritikin-anima-bootstrapping-keyinfra].  We require that once\n      trust has been established for a device, all ASAs within the\n      device inherit the device\'s credentials and are also trusted.\n\n   o  Depending on the type of network involved, discovery of other\n      central functions might be needed, such as the Network Operations\n      Center (NOC) [I-D.eckert-anima-stable-connectivity].  The protocol\n      must be capable of supporting such discovery during\n      initialisation, as well as discovery during ongoing operation.\n\n   8.  The discovery process must not generate excessive (multicast)\n   traffic and must take account of sleeping nodes in the case of a\n   resource-constrained network.\n\n2.2.  Requirements for Synchronization and Negotiation Capability\n\n   As background, consider the example of routing protocols, the closest\n   approximation to autonomic networking already in widespread use.\n   Routing protocols use a largely autonomic model based on distributed\n   devices that communicate repeatedly with each other.  The focus is\n   reachability, so current routing protocols mainly consider simple\n   link status, i.e., up or down, and an underlying assumption is that\n   all nodes need a consistent view of the network topology in order for\n   the routing algorithm to converge.  Thus, routing is mainly based on\n   information synchronization between peers, rather than on bi-\n   directional negotiation.  Other information, such as latency,\n   congestion, capacity, and particularly unused capacity, would be\n   helpful to get better path selection and utilization rate, but is not\n   normally used in distributed routing algorithms.  Additionally,\n   autonomic networks need to be able to manage many more dimensions,\n   such as security settings, power saving, load balancing, etc.  Status\n   information and traffic metrics need to be shared between nodes for\n   dynamic adjustment of resources and for monitoring purposes.  While\n   this might be achieved by existing protocols when they are available,\n   the new protocol needs to be able to support parameter exchange,\n   including mutual synchronization, even when no negotiation as such is\n   required.  In general, these parameters do not apply to all\n   participating nodes, but only to a subset.\n\n   9.  A basic requirement for the protocol is therefore the ability to\n   represent, discover, synchronize and negotiate almost any kind of\n   network parameter among arbitrary subsets of participating nodes.\n\n   10.  Negotiation is a request/response process that must be\n   guaranteed to terminate (with success or failure) and if necessary it\n   must contain tie-breaking rules for each technical objective that\n   requires them.  While these must be defined specifically for each use\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 6]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   case, the protocol should have some general mechanisms in support of\n   loop and deadlock prevention.\n\n   11.  Synchronization might concern small groups of nodes or very\n   large groups.  Different solutions might be needed at different\n   scales.\n\n   12.  To avoid "reinventing the wheel", the protocol should be able to\n   carry the message formats used by existing configuration protocols in\n   cases where that is convenient.\n\n   13.  Human intervention in complex situations is costly and error-\n   prone.  Therefore, synchronization or negotiation of parameters\n   without human intervention is desirable whenever the coordination of\n   multiple devices can improve overall network performance.  It follows\n   that a requirement for the protocol is to be capable of running in\n   any device that would otherwise need human intervention.\n\n   14.  Human intervention in large networks is often replaced by use of\n   a top-down network management system (NMS).  It therefore follows\n   that a requirement for the protocol is to be capable of running in\n   any device that would otherwise be managed by an NMS, and that it can\n   co-exist with an NMS.\n\n   15.  Some features are expected to be implemented by individual ASAs,\n   but the protocol must be general enough to allow them:\n\n   o  Dependencies and conflicts: In order to decide a configuration on\n      a given device, the device may need information from neighbors.\n      This can be established through the negotiation procedure, or\n      through synchronization if that is sufficient.  However, a given\n      item in a neighbor may depend on other information from its own\n      neighbors, which may need another negotiation or synchronization\n      procedure to obtain or decide.  Therefore, there are potential\n      dependencies and conflicts among negotiation or synchronization\n      procedures.  Resolving dependencies and conflicts is a matter for\n      the individual ASAs involved.  To allow this, there need to be\n      clear boundaries and convergence mechanisms for negotiations.\n      Also some mechanisms are needed to avoid loop dependencies.  In\n      such a case, the protocol\'s role is limited to signaling between\n      ASAs.\n\n   o  Recovery from faults and identification of faulty devices should\n      be as automatic as possible.  The protocol\'s role is limited to\n      the ability to handle discovery, synchronization and negotiation\n      at any time, in case an ASA detects an anomaly such as a\n      negotiation counterpart failing.\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 7]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  Since the goal is to minimize human intervention, it is necessary\n      that the network can in effect "think ahead" before changing its\n      parameters.  In other words there must be a possibility of\n      forecasting the effect of a change by a "dry run" mechanism before\n      actually installing the change.  This will be an application of\n      the protocol rather than a feature of the protocol itself.\n\n   o  Management logging, monitoring, alerts and tools for intervention\n      are required.  However, these can only be features of individual\n      ASAs.  Another document [I-D.eckert-anima-stable-connectivity]\n      discusses how such agents may be linked into conventional OAM\n      systems via an Autonomic Control Plane\n      [I-D.behringer-anima-autonomic-control-plane].\n\n   16.  The protocol will be able to deal with a wide variety of\n   technical objectives, covering any type of network parameter.\n   Therefore the protocol will need either an explicit information model\n   describing its messages, or at least a flexible and extensible\n   message format.  One design consideration is whether to adopt an\n   existing information model or to design a new one.\n\n2.3.  Specific Technical Requirements\n\n   17.  It should be convenient for ASA designers to define new\n   objectives and for programmers to express them, without excessive\n   impact on run-time efficiency and footprint.  The classes of device\n   in which the protocol might run is discussed in\n   [I-D.behringer-anima-reference-model].\n\n   18.  The protocol should be extensible in case the initially defined\n   discovery, synchronization and negotiation mechanisms prove to be\n   insufficient.\n\n   19.  To be a generic platform, the protocol payload format should be\n   independent of the transport protocol or IP version.  In particular,\n   it should be able to run over IPv6 or IPv4.  However, some functions,\n   such as multicasting or broadcasting on a link, might need to be IP\n   version dependent.  In case of doubt, IPv6 should be preferred.\n\n   20.  The protocol must be able to access off-link counterparts via\n   routable addresses, i.e., must not be restricted to link-local\n   operation.\n\n   21.  It must also be possible for an external discovery mechanism to\n   be used, if appropriate for a given objective.  In other words, GDNP\n   discovery must not be a prerequisite for GDNP negotiation or\n   synchronization; the prerequisite is discovering a peer\'s locator by\n   any method.\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 8]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   22.  ASAs and the signaling protocol engine need to run\n   asynchronously when wait states occur.\n\n   23.  Intent: There must be provision for general policy intent rules\n   to be applied by all devices in the network (e.g., security rules,\n   prefix length, resource sharing rules).  However, intent distribution\n   might not use the signaling protocol itself.\n\n   24.  Management monitoring, alerts and intervention: Devices should\n   be able to report to a monitoring system.  Some events must be able\n   to generate operator alerts and some provision for emergency\n   intervention must be possible (e.g.  to freeze synchronization or\n   negotiation in a mis-behaving device).  These features may not use\n   the signaling protocol itself.\n\n   25.  The protocol needs to be fully secured against forged messages\n   and man-in-the middle attacks, and secured as much as reasonably\n   possible against denial of service attacks.  It needs to be capable\n   of encryption in order to resist unwanted monitoring, although this\n   capability may not be required in all deployments.  However, it is\n   not required that the protocol itself provides these security\n   features; it may depend on an existing secure environment.\n\n3.  GDNP Protocol Overview\n\n3.1.  Terminology\n\n   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",\n   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and\n   "OPTIONAL" in this document are to be interpreted as described in\n   [RFC2119] when they appear in ALL CAPS.  When these words are not in\n   ALL CAPS (such as "should" or "Should"), they have their usual\n   English meanings, and are not to be interpreted as [RFC2119] key\n   words.\n\n   This document uses terminology defined in\n   [I-D.irtf-nmrg-autonomic-network-definitions].\n\n   The following additional terms are used throughout this document:\n\n   o  Discovery: a process by which an ASA discovers peers according to\n      a specific discovery objective.  The discovery results may be\n      different according to the different discovery objectives.  The\n      discovered peers may later be used as negotiation counterparts or\n      as sources of synchronization data.\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015               [Page 9]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  Negotiation: a process by which two (or more) ASAs interact\n      iteratively to agree on parameter settings that best satisfy the\n      objectives of one or more ASAs.\n\n   o  State Synchronization: a process by which two (or more) ASAs\n      interact to agree on the current state of parameter values stored\n      in each ASA.  This is a special case of negotiation in which\n      information is sent but the ASAs do not request their peers to\n      change parameter settings.  All other definitions apply to both\n      negotiation and synchronization.\n\n   o  Objective: An objective in GDNP is a configurable state of some\n      kind, which occurs in three contexts: Discovery, Negotiation and\n      Synchronization.  In the protocol, an objective is represented by\n      an identifier (actually a GDNP option number) and if relevant a\n      value.  Normally, a given objective will occur during discovery\n      and negotiation, or during discovery and synchronization, but not\n      in all three contexts.\n\n      *  One ASA may support multiple independent objectives.\n\n      *  The parameter described by a given objective is naturally based\n         on a specific service or function or action.  It may in\n         principle be anything that can be set to a specific logical,\n         numerical or string value, or a more complex data structure, by\n         a network node.  That node is generally expected to contain an\n         ASA which may itself manage other nodes.\n\n      *  Discovery Objective: if a node needs to synchronize or\n         negotiate a specific objective but does not know a peer that\n         supports this objective, it starts a discovery process.  The\n         objective is called a Discovery Objective during this process.\n\n      *  Synchronization Objective: an objective whose specific\n         technical content needs to be synchronized among two or more\n         ASAs.\n\n      *  Negotiation Objective: an objective whose specific technical\n         content needs to be decided in coordination with another ASA.\n\n   o  Discovery Initiator: an ASA that spontaneously starts discovery by\n      sending a discovery message referring to a specific discovery\n      objective.\n\n   o  Discovery Responder: a peer ASA which responds to the discovery\n      objective initiated by the discovery initiator.\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 10]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  Synchronization Initiator: an ASA that spontaneously starts\n      synchronization by sending a request message referring to a\n      specific synchronization objective.\n\n   o  Synchronization Responder: a peer ASA which responds with the\n      value of a synchronization objective.\n\n   o  Negotiation Initiator: an ASA that spontaneously starts\n      negotiation by sending a request message referring to a specific\n      negotiation objective.\n\n   o  Negotiation Counterpart: a peer with which the Negotiation\n      Initiator negotiates a specific negotiation objective.\n\n3.2.  High-Level Design Choices\n\n   This section describes a behavior model and some considerations for\n   designing a generic discovery, synchronization and negotiation\n   protocol, which can act as a platform for different technical\n   objectives.\n\n   NOTE: This protocol is described here in a stand-alone fashion as a\n   proof of concept.  An early version was prototyped by Huawei and the\n   Beijing University of Posts and Telecommunications.  However, this is\n   not yet a definitive proposal for IETF adoption.  In particular,\n   adaptation and extension of one of the protocols discussed in\n   Appendix A might be an option.  This whole specification is subject\n   to change as a result.\n\n   o  A generic platform\n\n      The protocol is designed as a generic platform, which is\n      independent from the synchronization or negotiation contents.  It\n      takes care of the general intercommunication between counterparts.\n      The technical contents will vary according to the various\n      synchronization or negotiation objectives and the different pairs\n      of counterparts.\n\n\n   o  Security infrastructure and trust relationship\n\n      Because this negotiation protocol may directly cause changes to\n      device configurations and bring significant impacts to a running\n      network, this protocol is assumed to run within an existing secure\n      environment with strong authentication.\n\n      On the other hand, a limited negotiation model might be deployed\n      based on a limited trust relationship.  For example, between two\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 11]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      administrative domains, ASAs might also exchange limited\n      information and negotiate some particular configurations based on\n      a limited conventional or contractual trust relationship.\n\n\n   o  Discovery, synchronization and negotiation designed together\n\n      The discovery method and the synchronization and negotiation\n      methods are designed in the same way and can be combined when this\n      is useful.  These processes can also be performed independently\n      when appropriate.\n\n      *  GDNP discovery is appropriate for efficient discovery of GDNP\n         peers and allows a rapid mode of operation described in\n         Section 3.3.3.  For some parameters, especially those concerned\n         with application layer services, a text-based discovery\n         mechanism such as DNS Service Discovery\n         [I-D.ietf-dnssd-requirements] or Service Location Protocol\n         [RFC2608] might be more appropriate.  The choice is left to the\n         designers of individual ASAs.\n\n   o  A uniform pattern for technical contents\n\n      The synchronization and negotiation contents are defined according\n      to a uniform pattern.  They could be carried either in simple TLV\n      (Type, Length and Value) format or in payloads described by a\n      flexible language.  The initial protocol design uses the TLV\n      approach.  The format is extensible for unknown future\n      requirements.\n\n\n   o  A conservative model for synchronization\n\n      GDNP supports bilateral synchronization, which could be used to\n      perform synchronization among a small number of nodes.\n\n      *  For some parameters, synchronization across large groups of\n         nodes, possibly including all autonomic nodes, might be needed.\n         For such cases, a flooding mechanism such as ADNCP\n         [I-D.stenberg-anima-adncp] is considered more appropriate.\n         GDNP can coexist with ADNCP.  The choice is left to the\n         designers of individual ASAs.\n\n   o  A simple initiator/responder model for negotiation\n\n      Multi-party negotiations are too complicated to be modeled and\n      there might be too many dependencies among the parties to converge\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 12]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      efficiently.  A simple initiator/responder model is more feasible\n      and can complete multi-party negotiations by indirect steps.\n\n\n   o  Organizing of synchronization or negotiation content\n\n      Naturally, the technical content will be organized according to\n      the relevant function or service.  The content from different\n      functions or services is kept independent from each other.  They\n      are not combined into a single option or single session because\n      these contents may be negotiated or synchronized with different\n      counterparts or may be different in response time.\n\n\n   o  Self-aware network device\n\n      Every autonomic device will be pre-loaded with various functions\n      and ASAs and will be aware of its own capabilities, typically\n      decided by the hardware, firmware or pre-installed software.  Its\n      exact role may depend on policy intent and on the surrounding\n      network behaviors, which may include forwarding behaviors,\n      aggregation properties, topology location, bandwidth, tunnel or\n      translation properties, etc.  The surrounding topology will depend\n      on the network planning.  Following an initial discovery phase,\n      the device properties and those of its neighbors are the\n      foundation of the synchronization or negotiation behavior of a\n      specific device.  A device has no pre-configuration for the\n      particular network in which it is installed.\n\n\n   o  Requests and responses in negotiation procedures\n\n      The initiator can negotiate with its relevant negotiation\n      counterpart ASAs, which may be different according to the specific\n      negotiation objective.  It can request relevant information from\n      the negotiation counterpart so that it can decide its local\n      configuration to give the most coordinated performance.  It can\n      request the negotiation counterpart to make a matching\n      configuration in order to set up a successful communication with\n      it.  It can request certain simulation or forecast results by\n      sending some dry run conditions.\n\n      Beyond the traditional yes/no answer, the responder can reply with\n      a suggested alternative if its answer is \'no\'.  This would start a\n      bi-directional negotiation ending in a compromise between the two\n      ASAs.\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 13]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  Convergence of negotiation procedures\n\n      To enable convergence, when a responder makes a suggestion of a\n      changed condition in a negative reply, it should be as close as\n      possible to the original request or previous suggestion.  The\n      suggested value of the third or later negotiation steps should be\n      chosen between the suggested values from the last two negotiation\n      steps.  In any case there must be a mechanism to guarantee\n      convergence (or failure) in a small number of steps, such as a\n      timeout or maximum number of iterations.\n\n\n\n      *  End of negotiation\n\n         A limited number of rounds, for example three, or a timeout, is\n         needed on each ASA for each negotiation objective.  It may be\n         an implementation choice, a pre-configurable parameter, or a\n         network-wide policy intent.  These choices might vary between\n         different types of ASA.  Therefore, the definition of each\n         negotiation objective MUST clearly specify this, so that the\n         negotiation can always be terminated properly.\n\n\n      *  Failed negotiation\n\n         There must be a well-defined procedure for concluding that a\n         negotiation cannot succeed, and if so deciding what happens\n         next (deadlock resolution, tie-breaking, or revert to best-\n         effort service).  Again, this MUST be specified for individual\n         negotiation objectives, as an implementation choice, a pre-\n         configurable parameter, or a network-wide policy intent.\n\n3.3.  GDNP Protocol Basic Properties and Mechanisms\n\n3.3.1.  Required External Security Mechanism\n\n   The protocol SHOULD run within a secure Autonomic Control Plane (ACP)\n   [I-D.behringer-anima-autonomic-control-plane].  The procedure for\n   establishing the ACP MUST provide a flag indicating to GDNP that the\n   ACP has been established.\n\n   If there is no ACP, the protocol MUST use TLS [RFC5246] or DTLS\n   [RFC6347] for all messages, based on a local Public Key\n   Infrastructure (PKI) [RFC5280] managed within the autonomic network\n   itself.\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 14]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Link-local multicast is used for discovery messages.  These cannot be\n   secured, but responses to discovery messages MUST be secured.\n   However, during initialisation, before a node has joined the\n   applicable trust infrastructure, e.g.,\n   [I-D.pritikin-anima-bootstrapping-keyinfra], it might be impossible\n   to secure certain messages.  Such messages MUST be limited to the\n   strictly necessary minimum.\n\n3.3.2.  Transport Layer Usage\n\n   The protocol is capable of running over UDP or TCP, except for link-\n   local multicast discovery messages, which can only run over UDP and\n   MUST NOT be fragmented, and therefore cannot exceed the link MTU\n   size.\n\n   When running within a secure ACP, UDP SHOULD be used for messages not\n   exceeding the minimum IPv6 path MTU, and TCP MUST be used for longer\n   messages.  In other words, IPv6 fragmentation is avoided.  If a node\n   receives a UDP message but the reply is too long, it MUST open a TCP\n   connection to the peer for the reply.\n\n   When running without an ACP, TLS MUST be supported and used by\n   default, except for multicast discovery messages.  DTLS MAY be\n   supported as an alternative but the details are out of scope for this\n   document.\n\n   For all transport protocols, the GDNP protocol listens to the GDNP\n   Listen Port (Section 3.4).\n\n3.3.3.  Discovery Mechanism and Procedures\n\n   o  Separated discovery and negotiation mechanisms\n\n         Although discovery and negotiation or synchronization are\n         defined together in the GDNP, they are separated mechanisms.\n         The discovery process could run independently from the\n         negotiation or synchronization process.  Upon receiving a\n         discovery (Section 3.6.2) or request (Section 3.6.4) message,\n         the recipient ASA should return a message in which it either\n         indicates itself as a discovery responder or diverts the\n         initiator towards another more suitable ASA.\n\n         The discovery action will normally be followed by a negotiation\n         or synchronization action.  The discovery results could be\n         utilized by the negotiation protocol to decide which ASA the\n         initiator will negotiate with.\n\n   o  Discovery Procedures\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 15]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n         Discovery starts as an on-link operation.  The Divert option\n         can tell the discovery initiator to contact an off-link ASA for\n         that discovery objective.  Every DISCOVERY message is sent by a\n         discovery initiator via UDP to the ALL_GDNP_NEIGHBOR multicast\n         address (Section 3.4).  Every network device that supports the\n         GDNP always listens to a well-known UDP port to capture the\n         discovery messages.\n\n         If an ASA in the neighbor device supports the requested\n         discovery objective, it MAY respond with a Response message\n         (Section 3.6.3) with locator option(s).  Otherwise, if the\n         neighbor has cached information about an ASA that supports the\n         requested discovery objective (usually because it discovered\n         the same objective before), it SHOULD respond with a Response\n         message with a Divert option pointing to the appropriate\n         Discovery Responder.\n\n         If no discovery response is received within a reasonable\n         timeout (default GDNP_DEF_TIMEOUT milliseconds, Section 3.4),\n         the DISCOVERY message MAY be repeated, with a newly generated\n         Session ID (Section 3.5).  An exponential backoff SHOULD be\n         used for subsequent repetitions, in order to mitigate possible\n         denial of service attacks.\n\n         After a GDNP device successfully discovers a Discovery\n         Responder supporting a specific objective, it MUST cache this\n         information.  This cache record MAY be used for future\n         negotiation or synchronization, and SHOULD be passed on when\n         appropriate as a Divert option to another Discovery Initiator.\n         The cache lifetime is an implementation choice.\n\n         If multiple Discovery Responders are found for the same\n         objective, they SHOULD all be cached, unless this creates a\n         resource shortage.  The method of choosing between multiple\n         responders is an implementation choice.\n\n         A GDNP device with multiple link-layer interfaces (typically a\n         router) MUST support discovery on all interfaces.  If it\n         receives a DISCOVERY message on a given interface for a\n         specific objective that it does not support and for which it\n         has not previously discovered a Discovery Responder, it MUST\n         relay the query by re-issuing the same DISCOVERY message on its\n         other interfaces.  However, it MUST limit the total rate at\n         which it relays discovery messages to a reasonable value, in\n         order to mitigate possible denial of service attacks.  It MUST\n         cache the Session ID value of each relayed discovery message\n         and, to prevent loops, MUST NOT relay a DISCOVERY message which\n         carries such a cached Session ID.\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 16]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n         This relayed discovery mechanism, with caching of the results,\n         should be sufficient to support most network bootstrapping\n         scenarios.\n\n   o  A complete discovery process will start with multicast on the\n      local link; a neighbor might divert it to an off-link destination,\n      which could be a default higher-level gateway in a hierarchical\n      network.  Then discovery would continue with a unicast to that\n      gateway; if that gateway is still not the right counterpart, it\n      should divert to another gateway, which is in principle closer to\n      the right counterpart.  Finally the right counterpart responds to\n      start the negotiation or synchronization process.\n\n   o  Rapid Mode (Discovery/Negotiation binding)\n\n         A Discovery message MAY include one or more Negotiation\n         Objective option(s).  This allows a rapid mode of negotiation\n         described in Section 3.3.4.  A similar mechanism is defined for\n         synchronization in Section 3.3.5.\n\n3.3.4.  Negotiation Procedures\n\n   A negotiation initiator sends a negotiation request to a counterpart\n   ASA, including a specific negotiation objective.  It may request the\n   negotiation counterpart to make a specific configuration.\n   Alternatively, it may request a certain simulation or forecast result\n   by sending a dry run configuration.  The details, including the\n   distinction between dry run and an actual configuration change, will\n   be defined separately for each type of negotiation objective.\n\n   If the counterpart can immediately apply the requested configuration,\n   it will give an immediate positive (accept) answer.  This will end\n   the negotiation phase immediately.  Otherwise, it will negotiate.  It\n   will reply with a proposed alternative configuration that it can\n   apply (typically, a configuration that uses fewer resources than\n   requested by the negotiation initiator).  This will start a bi-\n   directional negotiation to reach a compromise between the two ASAs.\n\n   The negotiation procedure is ended when one of the negotiation peers\n   sends a Negotiation Ending message, which contains an accept or\n   decline option and does not need a response from the negotiation\n   peer.  Negotiation may also end in failure (equivalent to a decline)\n   if a timeout is exceeded or a loop count is exceeded.\n\n   A negotiation procedure concerns one objective and one counterpart.\n   Both the initiator and the counterpart may take part in simultaneous\n   negotiations with various other ASAs, or in simultaneous negotiations\n   about different objectives.  Thus, GDNP is expected to be used in a\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 17]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   multi-threaded mode.  Certain negotiation objectives may have\n   restrictions on multi-threading, for example to avoid over-allocating\n   resources.\n\n   Rapid Mode (Discovery/Negotiation linkage)\n\n      A Discovery message MAY include a Negotiation Objective option.\n      In this case the Discovery message also acts as a Request message\n      to indicate to the Discovery Responder that it could directly\n      reply to the Discovery Initiator with a Negotiation message for\n      rapid processing, if it could act as the corresponding negotiation\n      counterpart.  However, the indication is only advisory not\n      prescriptive.\n\n      This rapid mode could reduce the interactions between nodes so\n      that a higher efficiency could be achieved.  This rapid\n      negotiation function SHOULD be configured off by default and MAY\n      be configured on or off by policy intent.\n\n3.3.5.  Synchronization Procedure\n\n   A synchronization initiator sends a synchronization request to a\n   counterpart, including a specific synchronization objective.  The\n   counterpart responds with a Response message containing the current\n   value of the requested synchronization objective.  No further\n   messages are needed.  If no Response message is received, the\n   synchronization request MAY be repeated after a suitable timeout.\n\n   In the case just described, the message exchange is unicast and\n   concerns only one synchronization objective.  For large groups of\n   nodes requiring mutual synchronization, ADNCP\n   [I-D.stenberg-anima-adncp] is considered more appropriate.  In the\n   following case, several synchronization objectives may be combined.\n\n   Rapid Mode (Discovery/Synchronization linkage)\n\n      A Discovery message MAY include one or more Synchronization\n      Objective option(s).  In this case the Discovery message also acts\n      as a Request message to indicate to the Discovery Responder that\n      it could directly reply to the Discovery Initiator with a Response\n      message with synchronization data for rapid processing, if the\n      discovery target supports the corresponding synchronization\n      objective(s).  However, the indication is only advisory not\n      prescriptive.\n\n      This rapid mode could reduce the interactions between nodes so\n      that a higher efficiency could be achieved.  This rapid\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 18]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      synchronization function SHOULD be configured off by default and\n      MAY be configured on or off by policy intent.\n\n3.4.  GDNP Constants\n\n   o  ALL_GDNP_NEIGHBOR\n\n      A link-local scope multicast address used by a GDNP-enabled device\n      to discover GDNP-enabled neighbor (i.e., on-link) devices . All\n      devices that support GDNP are members of this multicast group.\n\n      *  IPv6 multicast address: TBD1\n\n      *  IPv4 multicast address: TBD2\n\n   o  GDNP Listen Port (TBD3)\n\n      A UDP and TCP port that every GDNP-enabled network device always\n      listens to.\n\n   o  GDNP_DEF_TIMEOUT (60000 milliseconds)\n\n      The default timeout used to determine that a discovery or\n      negotiation has failed to complete.\n\n   o  GDNP_DEF_LOOPCT (6)\n\n      The default loop count used to determine that a negotiation has\n      failed to complete.\n\n3.5.  Session Identifier (Session ID)\n\n   A 24-bit opaque value used to distinguish multiple sessions between\n   the same two devices.  A new Session ID MUST be generated for every\n   new Discovery or Request message, and for every unsolicited Response\n   message.  All follow-up messages in the same discovery,\n   synchronization or negotiation procedure, which is initiated by the\n   request message, MUST carry the same Session ID.\n\n   The Session ID SHOULD have a very low collision rate locally.  It is\n   RECOMMENDED to be generated by a pseudo-random algorithm using a seed\n   which is unlikely to be used by any other device in the same network\n   [RFC4086].\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 19]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.6.  GDNP Messages\n\n   This document defines the following GDNP message format and types.\n   Message types not listed here are reserved for future use.  The\n   numeric encoding for each message type is shown in parentheses.\n\n3.6.1.  GDNP Message Format\n\n   GDNP messages share an identical fixed format header and a variable\n   format area for options.  GDNP message headers and options are in the\n   type-length-value (TLV) format defined in DNCP (see Section "Type-\n   Length-Value Objects" in [I-D.ietf-homenet-dncp]).\n\n   Every GDNP message carries a Session ID.  Options are presented\n   serially in the options field, with padding to 4-byte alignment.\n\n   The following diagram illustrates the format of GDNP messages:\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _          MESSAGE_TYPE         _                4              _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _    Reserved   _                Session ID                     _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                        Options  (variable length)             _\n   .                                                               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   MESSAGE_TYPE:  Identifies the GDNP message type. 16-bit.\n\n   Reserved:  Set to zero, ignored on receipt. 8-bit.\n\n   Session ID:  Identifies this GDNP session, as defined in Section 3.5.\n      24-bit.\n\n   Options:  GDNP Options carried in this message.  Options are defined\n      starting at Section 3.7.\n\n3.6.2.  Discovery Message\n\n   DISCOVERY (MESSAGE_TYPE = G1):\n\n   A discovery initiator sends a DISCOVERY message to initiate a\n   discovery process.\n\n   The discovery initiator sends the DISCOVERY messages to the link-\n   local ALL_GDNP_NEIGHBOR multicast address for discovery, and stores\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 20]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   the discovery results (including responding discovery objectives and\n   corresponding unicast addresses or FQDNs).\n\n   A DISCOVERY message MUST include exactly one of the following:\n\n   o  a discovery objective option (Section 3.8.1).\n\n   o  a negotiation objective option (Section 3.8.1) to indicate to the\n      discovery target that it MAY directly reply to the discovery\n      initiatior with a NEGOTIATION message for rapid processing, if it\n      could act as the corresponding negotiation counterpart.  The\n      sender of such a DISCOVERY message MUST initialize a negotiation\n      timer and loop count in the same way as a REQUEST message\n      (Section 3.6.4).\n\n   o  one or more synchronization objective options (Section 3.8.1) to\n      indicate to the discovery target that it MAY directly reply to the\n      discovery initiator with a RESPONSE message for rapid processing,\n      if it could act as the corresponding synchronization counterpart.\n\n3.6.3.  Response Message\n\n   RESPONSE (MESSAGE_TYPE = G2):\n\n   A node which receives a DISCOVERY message sends a Response message to\n   respond to a discovery.  It MUST contain the same Session ID as the\n   DISCOVERY message.  It MAY include a copy of the discovery objective\n   from the DISCOVERY message.\n\n   If the responding node supports the discovery objective of the\n   discovery, it MUST include at least one kind of locator option\n   (Section 3.7.7) to indicate its own location.  A combination of\n   multiple kinds of locator options (e.g.  IP address option + FQDN\n   option) is also valid.\n\n   If the responding node itself does not support the discovery\n   objective, but it knows the locator of the discovery objective, then\n   it SHOULD respond to the discovery message with a divert option\n   (Section 3.7.2) embedding a locator option or a combination of\n   multiple kinds of locator options which indicate the locator(s) of\n   the discovery objective.\n\n   A node which receives a synchronization request sends a Response\n   message with the synchronization data, in the form of GDNP Option(s)\n   for the specific synchronization objective(s).\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 21]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.6.4.  Request Message\n\n   REQUEST (MESSAGE_TYPE = G3):\n\n   A negotiation or synchronization requesting node sends the REQUEST\n   message to the unicast address (directly stored or resolved from the\n   FQDN) of the negotiation or synchronization counterpart (selected\n   from the discovery results).\n\n   A request message MUST include the relevant objective option, with\n   the requested value in the case of negotiation.\n\n   When an initiator sends a REQUEST message, it MUST initialize a\n   negotiation timer for the new negotiation thread with the value\n   GDNP_DEF_TIMEOUT milliseconds.  Unless this timeout is modified by a\n   CONFIRM-WAITING message (Section 3.6.7), the initiator will consider\n   that the negotiation has failed when the timer expires.\n\n   When an initiator sends a REQUEST message, it MUST initialize the\n   loop count of the objective option with a value defined in the\n   specification of the option or, if no such value is specified, with\n   GDNP_DEF_LOOPCT.\n\n3.6.5.  Negotiation Message\n\n   NEGOTIATION (MESSAGE_TYPE = G4):\n\n   A negotiation counterpart sends a NEGOTIATION message in response to\n   a REQUEST message, a NEGOTIATION message, or a DISCOVERY message in\n   Rapid Mode.  A negotiation process MAY include multiple steps.\n\n   The NEGOTIATION message MUST include the relevant Negotiation\n   Objective option, with its value updated according to progress in the\n   negotiation.  The sender MUST decrement the loop count by 1.  If the\n   loop count becomes zero both parties will consider that the\n   negotiation has failed.\n\n3.6.6.  Negotiation-ending Message\n\n   NEGOTIATION-ENDING (MESSAGE_TYPE = G5):\n\n   A negotiation counterpart sends an NEGOTIATION-ENDING message to\n   close the negotiation.  It MUST contain one, but only one of accept/\n   decline option, defined in Section 3.7.3 and Section 3.7.4.  It could\n   be sent either by the requesting node or the responding node.\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 22]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.6.7.  Confirm-waiting Message\n\n   CONFIRM-WAITING (MESSAGE_TYPE = G6):\n\n   A responding node sends a CONFIRM-WAITING message to indicate the\n   requesting node to wait for a further negotiation response.  It might\n   be that the local process needs more time or that the negotiation\n   depends on another triggered negotiation.  This message MUST NOT\n   include any other options than the Waiting Time Option\n   (Section 3.7.5).\n\n3.7.  GDNP General Options\n\n   This section defines the GDNP general options for the negotiation and\n   synchronization protocol signaling.  Additional option types are\n   reserved for GDNP general options defined in the future.\n\n3.7.1.  Format of GDNP Options\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _          option-code          _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                          option-data                          _\n   _                      (option-len octets)                      _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  An unsigned integer identifying the specific option\n      type carried in this option.\n\n   Option-len:  An unsigned integer giving the length of the option-data\n      field in this option in octets.\n\n   Option-data:  The data for the option; the format of this data\n      depends on the definition of the option.\n\n   GDNP options are scoped by using encapsulation.  If an option\n   contains other options, the outer Option-len includes the total size\n   of the encapsulated options, and the latter apply only to the outer\n   option.\n\n3.7.2.  Divert Option\n\n   The divert option is used to redirect a GDNP request to another node,\n   which may be more appropriate for the intended negotiation or\n   synchronization.  It may redirect to an entity that is known as a\n   specific negotiation or synchronization counterpart (on-link or off-\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 23]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   link) or a default gateway.  The divert option MUST only be\n   encapsulated in Response messages.  If found elsewhere, it SHOULD be\n   silently ignored.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_DIVERT         _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _             Locator Option(s) of Diversion Target(s)          _\n   .                                                               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_DIVERT (G32).\n\n   Option-len:  The total length of diverted destination sub-option(s)\n      in octets.\n\n   Locator Option(s) of Diversion Device(s):  Embedded Locator Option(s)\n      (Section 3.7.7) that point to diverted destination target(s).\n\n3.7.3.  Accept Option\n\n   The accept option is used to indicate to the negotiation counterpart\n   that the proposed negotiation content is accepted.\n\n   The accept option MUST only be encapsulated in Negotiation-ending\n   messages.  If found elsewhere, it SHOULD be silently ignored.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _        OPTION_ACCEPT          _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_ACCEPT (G33)\n\n   Option-len:  0\n\n3.7.4.  Decline Option\n\n   The decline option is used to indicate to the negotiation counterpart\n   the proposed negotiation content is declined and end the negotiation\n   process.\n\n   The decline option MUST only be encapsulated in Negotiation-ending\n   messages.  If found elsewhere, it SHOULD be silently ignored.\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 24]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _        OPTION_DECLINE         _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_DECLINE (G34)\n\n   Option-len:  0\n\n   Notes: there are scenarios where a negotiation counterpart wants to\n   decline the proposed negotiation content and continue the negotiation\n   process.  For these scenarios, the negotiation counterpart SHOULD use\n   a Negotiate message, with either an objective option that contains at\n   least one data field with all bits set to 1 to indicate a meaningless\n   initial value, or a specific objective option that provides further\n   conditions for convergence.\n\n3.7.5.  Waiting Time Option\n\n   The waiting time option is used to indicate that the negotiation\n   counterpart needs to wait for a further negotiation response, since\n   the processing might need more time than usual or it might depend on\n   another triggered negotiation.\n\n   The waiting time option MUST only be encapsulated in Confirm-waiting\n   messages.  If found elsewhere, it SHOULD be silently ignored.  When\n   received, its value overwrites the negotiation timer (Section 3.6.4).\n\n   The counterpart SHOULD send a Negotiation, Negotiation-Ending or\n   another Confirm-waiting message before the negotiation timer expires.\n   If not, the initiator MUST abandon or restart the negotiation\n   procedure, to avoid an indefinite wait.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _       OPTION_WAITING          _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                              Time                             _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_WAITING (G35)\n\n   Option-len:  4, in octets\n\n   Time:  Time in milliseconds\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 25]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.7.6.  Device Identity Option\n\n   The Device Identity option carries the identities of the sender and\n   of the domain(s) that it belongs to.  The format of the Device\n   Identity option is as follows:\n\n      0                   1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     _       OPTION_DEVICE_ID        _           option-len          _\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     _                                                               _\n     .                    Identities (variable length)               .\n     .                                                               .\n     _                                                               _\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_DEVICE_ID (G36)\n\n   Option-len:  Length of identities in octets\n\n   Identities:  A variable-length field containing the device identity\n      and one or more domain identities.  The format is not yet defined.\n\n   Note:  Currently this option is a placeholder.  It might be removed\n      or modified.\n\n3.7.7.  Locator Options\n\n   These locator options are used to present reachability information\n   for an ASA, a device or an interface.  They are Locator IPv4 Address\n   Option, Locator IPv6 Address Option and Locator FQDN (Fully Qualified\n   Domain Name) Option.\n\n   Note that it is assumed that all locators are in scope throughout the\n   GDNP domain.  GDNP is not intended to work across disjoint addressing\n   or naming realms.\n\n3.7.7.1.  Locator IPv4 address option\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _    OPTION_LOCATOR_IPV4ADDR    _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                          IPv4-Address                         _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 26]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Option-code:  OPTION_LOCATOR_IPV4ADDR (G37)\n\n   Option-len:  4, in octets\n\n   IPv4-Address:  The IPv4 address locator of the target\n\n   Note: If an operator has internal network address translation for\n   IPv4, this option MUST NOT be used within the Divert option.\n\n3.7.7.2.  Locator IPv6 address option\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _   OPTION_LOCATOR_IPV6ADDR     _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                                                               _\n   _                          IPv6-Address                         _\n   _                                                               _\n   _                                                               _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_LOCATOR_IPV6ADDR (G38)\n\n   Option-len:  16, in octets\n\n   IPv6-Address:  The IPv6 address locator of the target\n\n   Note: A link-local IPv6 address MUST NOT be used when this option is\n   used within the Divert option.\n\n3.7.7.3.  Locator FQDN option\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_FQDN           _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                   Fully Qualified Domain Name                 _\n   _                       (variable length)                       _\n   .                                                               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_FQDN (G39)\n\n   Option-len:  Length of Fully Qualified Domain Name in octets\n\n   Domain-Name:  The Fully Qualified Domain Name of the target\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 27]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Note: Any FQDN which might not be valid throughout the network in\n   question, such as a Multicast DNS name [RFC6762], MUST NOT be used\n   when this option is used within the Divert option.\n\n3.8.  Objective Options\n\n3.8.1.  Format of Objective Options\n\n   An objective option is used to identify objectives for the purposes\n   of discovery, negotiation or synchronization.  All objectives must\n   follow a common format as follows:\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_XXX            _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _   flags       _   loop-count  _                               _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+          value                _\n   .                                    (variable length)          .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n   Option-code:  OPTION_XXX: The option code assigned in the\n      specification of the XXX objective.\n\n   option-len:  The total length in octets.\n\n   flags:  Flag bits.\n\n      Bit 0 (D bit): set if this objective is valid for GDNP discovery\n      operations.\n\n      Bit 1 (N bit): set if this objective is valid for GDNP negotiation\n      operations.\n\n      Bit 2 (S bit): set if this objective is valid for GDNP\n      synchronization operations.\n\n      Bits 3~7: reserved, set to zero and ignored on reception.\n\n   loop-count:  The loop count for terminating negotation.  This field\n      is present if and only if the objective is a negotiation\n      objective.\n\n   value:  This field is to express the actual value of a negotiation or\n      synchronization objective.  Its format is defined in the\n      specification of the objective and may be a single value or a data\n      structure of any kind.\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 28]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n3.8.2.  General Considerations for Objective Options\n\n   Objective Options MUST be assigned an option type greater than G63 in\n   the GDNP option table.\n\n   An Objective Option that contains no additional fields, i.e., has a\n   length of 4 octets, is a discovery objective and MUST only be used in\n   Discovery and Response messages.\n\n   The Negotiation Objective Options contain negotiation objectives,\n   which are various according to different functions/services.  They\n   MUST be carried by Discovery, Request or Negotiation Messages only.\n   The negotiation initiator MUST set the initial "loop-count" to a\n   value specified in the specification of the objective or, if no such\n   value is specified, to GDNP_DEF_LOOPCT.\n\n   For most scenarios, there should be initial values in the negotiation\n   requests.  Consequently, the Negotiation Objective options MUST\n   always be completely presented in a Request message, or in a\n   Discovery message in rapid mode.  If there is no initial value, the\n   bits in the value field SHOULD all be set to 1 to indicate a\n   meaningless value, unless this is inappropriate for the specific\n   negotiation objective.\n\n   Synchronization Objective Options are similar, but MUST be carried by\n   Discovery, Request or Response messages only.  They include value\n   fields only in Response messages.\n\n3.8.3.  Organizing of Objective Options\n\n   As noted earlier, one negotiation objective is handled by each GDNP\n   negotiation thread.  Therefore, a negotiation objective, which is\n   based on a specific function or action, SHOULD be organized as a\n   single GDNP option.  It is NOT RECOMMENDED to organize multiple\n   negotiation objectives into a single option, nor to split a single\n   function or action into multiple negotiation objectives.\n\n   A synchronization objective SHOULD also be organized as a single GDNP\n   option.\n\n   Some objectives will support more than one operational mode.  An\n   example is a negotiation objective with both a "dry run" mode (where\n   the negotiation is to find out whether the other end can in fact make\n   the requested change without problems) and a "live" mode.  Such modes\n   will be defined in the specification of such an objective.  These\n   objectives SHOULD include a "flags" octet, with bits indicating the\n   applicable mode(s).\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 29]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   An objective may have multiple parameters.  Parameters can be\n   categorized into two classes: the obligatory ones presented as fixed\n   fields; and the optional ones presented in TLV sub-options or some\n   other form of data structure.  The format might be inherited from an\n   existing management or configuration protocol, the objective option\n   acting as a carrier for that format.  The data structure might be\n   defined in a formal language, but that is a matter for the\n   specifications of individual objectives.  There are many candidates,\n   according to the context, such as ABNF, RBNF, XML Schema, possibly\n   YANG, etc.  The GDNP protocol itself is agnostic on these questions.\n\n   It is NOT RECOMMENDED to split parameters in a single objective into\n   multiple options, unless they have different response periods.  An\n   exception scenario may also be described by split objectives.\n\n3.8.4.  Vendor Specific Objective Options\n\n   Option codes G128~159 have been reserved for vendor specific options.\n   Multiple option codes have been assigned because a single vendor\n   might use multiple options simultaneously.  These vendor specific\n   options are highly likely to have different meanings when used by\n   different vendors.  Therefore, they SHOULD NOT be used without an\n   explicit human decision and SHOULD NOT be used in unmanaged networks\n   such as home networks.\n\n   There is one general requirement that applies to all vendor specific\n   options.  They MUST start with a field that uniquely identifies the\n   enterprise that defines the option, in the form of a registered 32\n   bit Private Enterprise Number (PEN) [I-D.liang-iana-pen].  There is\n   no default value for this field.  Note that it is not used during\n   discovery.  It MUST be verified during negotiation or\n   synchronization.\n\n   In the case of a vendor-specific objective, the loop count and flags,\n   if present, follow the PEN.\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _         OPTION_vendor         _           option-len          _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _                              PEN                              _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   _   flags       _   loop-count  _                               _\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+          value                _\n   .                                    (variable length)          .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 30]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Option-code:  OPTION_vendor (G128~159)\n\n   Option-len:  The total length in octets.\n\n   PEN:  Private Enterprise Number.\n\n   flags:  See Section 3.8.1\n\n   loop-count:  See Section 3.8.1 This field is present if and only if\n      the objective is a negotiation objective.\n\n   value:  This field is to express the actual value of a negotiation or\n      synchronization objective.  Its format is defined in the vendor\'s\n      specification of the objective.\n\n3.8.5.  Experimental Objective Options\n\n   Option codes G176~191 have been reserved for experimental options.\n   Multiple option codes have been assigned because a single experiment\n   may use multiple options simultaneously.  These experimental options\n   are highly likely to have different meanings when used for different\n   experiments.  Therefore, they SHOULD NOT be used without an explicit\n   human decision and SHOULD NOT be used in unmanaged networks such as\n   home networks.\n\n   These option codes are also RECOMMENDED for use in documentation\n   examples.\n\n4.  Open Issues\n\n   There are various unresolved design questions that are worthy of more\n   work in the near future, as listed below (statically numbered in\n   historical order for reference purposes, with the resolved issues\n   retained for reference):\n\n   o  1.  UDP vs TCP: For now, this specification suggests UDP and TCP\n      as message transport mechanisms.  This is not clarified yet.  UDP\n      is good for short conversations, is necessary for multicast\n      discovery, and generally fits the discovery and divert scenarios\n      well.  However, it will cause problems with large messages.  TCP\n      is good for stable and long sessions, with a little bit of time\n      consumption during the session establishment stage.  If messages\n      exceed a reasonable MTU, a TCP mode will be required in any case.\n      This question may be affected by the security discussion.\n\n      RESOLVED by specifying UDP for short message and TCP for longer\n      one.\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 31]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   o  2.  DTLS or TLS vs built-in security mechanism.  For now, this\n      specification has chosen a PKI based built-in security mechanism\n      based on asymmetric cryptography.  However, (D)TLS might be chosen\n      as security solution to avoid duplication of effort.  It also\n      allows essentially similar security for short messages over UDP\n      and longer ones over TCP.  The implementation trade-offs are\n      different.  The current approach requires expensive asymmetric\n      cryptographic calculations for every message.  (D)TLS has startup\n      overheads but cheaper crypto per message.  DTLS is less mature\n      than TLS.\n\n      RESOLVED by specifying external security (ACP or (D)TLS).\n\n\n\n   o  The following open issues apply only if the current security model\n      is retained:\n\n      *  2.1.  For replay protection, GDNP currently requires every\n         participant to have an NTP-synchronized clock.  Is this OK for\n         low-end devices, and how does it work during device\n         bootstrapping?  We could take the Timestamp out of signature\n         option, to become an independent and OPTIONAL (or RECOMMENDED)\n         option.\n\n      *  2.2.  The Signature Option states that this option could be any\n         place in a message.  Wouldn\'t it be better to specify a\n         position (such as the end)?  That would be much simpler to\n         implement.\n\n      RESOLVED by changing security model.\n\n   o  3.  DoS Attack Protection needs work.\n\n      RESOLVED by adding text.\n\n\n   o  4.  Should we consider preferring a text-based approach to\n      discovery (after the initial discovery needed for bootstrapping)?\n      This could be a complementary mechanism for multicast based\n      discovery, especially for a very large autonomic network.\n      Centralized registration could be automatically deployed\n      incrementally.  At the very first stage, the repository could be\n      empty; then it could be filled in by the objectives discovered by\n      different devices (for example using Dynamic DNS Update).  The\n      more records are stored in the repository, the less the multicast-\n      based discovery is needed.  However, if we adopt such a mechanism,\n      there would be challenges: stateful solution, and security.\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 32]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      RESOLVED for now by adding optional use of DNS-SD by ASAs.\n\n\n\n   o  5.  Need to expand description of the minimum requirements for the\n      specification of an individual discovery, synchronization or\n      negotiation objective.\n\n   o  6.  Use case and protocol walkthrough.  A description of how a\n      node starts up, performs discovery, and conducts negotiation and\n      synchronisation for a sample use case would help readers to\n      understand the applicability of this specification.  Maybe it\n      should be an artificial use case or maybe a simple real one, based\n      on a conceptual API.  However, the authors have not yet decided\n      whether to have a separate document or have it in the protocol\n      document.\n\n   o  7.  Cross-check against other ANIMA WG documents for consistency\n      and gaps.\n\n   o  8.  Consideration of ADNCP proposal.\n\n      RESOLVED by adding optional use of DNCP for flooding-type\n      synchronization.\n\n\n   o  9.  Clarify how a GDNP instance knows whether it is running inside\n      the ACP.  (Sheng)\n\n      RESOLVED by improved text.\n\n\n   o  10.  Clarify how a non-ACP GDNP instance initiates (D)TLS.\n      (Sheng)\n\n      RESOLVED by improved text and declaring DTLS out of scope for this\n      draft.\n\n\n   o  11.  Clarify how UDP/TCP choice is made.  (Sheng) [Like DNS? -\n      Brian]\n\n      RESOLVED by improved text.\n\n\n   o  12.  Justify that IP address within ACP or (D)TLS environment is\n      sufficient to prove AN identity; or explain how Device Identity\n      Option is used.  (Sheng)\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 33]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      RESOLVED for now: we assume that all ASAs in a device are trusted\n      as soon as the device is trusted, so they share credentials.  In\n      that case the Device Identity Option is useless.  This needs to be\n      reviewed later.\n\n\n   o  13.  Emphasise that negotiation/synchronization are independent\n      from discovery, although the rapid discovery mode includes the\n      first step of a negotiation/synchronization.  (Sheng)\n\n      RESOLVED by improved text.\n\n\n   o  14.  Do we need an unsolicited flooding mechanism for discovery\n      (for discovery results that everyone needs), to reduce scaling\n      impact of flooding discovery messages?  (Toerless)\n\n   o  15.  Do we need flag bits in Objective Options to distinguish\n      distinguish Synchronization and Negotiation "Request" or rapid\n      mode "Discovery" messages?  (Bing)\n\n      RESOLVED: yes, work on the API showed that these flags are\n      essential.\n\n   o  16.  (Related to issue 14).  Should we revive the "unsolicited\n      Response" for flooding synchronisation data?  This has to be done\n      carefully due to the well-known issues with flooding, but it could\n      be useful, e.g. for intent distribution, where DNCP doesn\'t seem\n      applicable.\n\n   o  17.  Ensure that the discovery mechanism is completely proof\n      against loops and protected against duplicate responses.\n\n   o  18.  Discuss the handling of multiple valid discovery responses.\n\n   o  19.  Should we use a text-oriented format such as JSON/CBOR\n      instead of native binary TLV format?\n\n   o  20.  Is the Divert option needed?  If a discovery response\n      provides a valid IP address or FQDN, the recipient doesn\'t gain\n      any extra knowledge from the Divert.\n\n   o  21.  Rename the protocol as GRASP (GeneRic Autonomic Signaling\n      Protocol)?\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 34]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n5.  Security Considerations\n\n   It is obvious that a successful attack on negotiation-enabled nodes\n   would be extremely harmful, as such nodes might end up with a\n   completely undesirable configuration that would also adversely affect\n   their peers.  GDNP nodes and messages therefore require full\n   protection.\n\n   - Authentication\n\n      A cryptographically authenticated identity for each device is\n      needed in an autonomic network.  It is not safe to assume that a\n      large network is physically secured against interference or that\n      all personnel are trustworthy.  Each autonomic device MUST be\n      capable of proving its identity and authenticating its messages.\n      GDNP relies on a separate certificate-based security mechanism to\n      support authentication, data integrity protection, and anti-replay\n      protection.\n\n      Since GDNP is intended to be deployed in a single administrative\n      domain operating its own trust anchor and CA, there is no need for\n      a trusted public third party.  In a network requiring "air gap"\n      security, such a dependency would be unacceptable.\n\n   - Privacy and confidentiality\n\n      Generally speaking, no personal information is expected to be\n      involved in the signaling protocol, so there should be no direct\n      impact on personal privacy.  Nevertheless, traffic flow paths,\n      VPNs, etc. could be negotiated, which could be of interest for\n      traffic analysis.  Also, operators generally want to conceal\n      details of their network topology and traffic density from\n      outsiders.  Therefore, since insider attacks cannot be excluded in\n      a large network, the security mechanism for the protocol MUST\n      provide message confidentiality.\n\n   - DoS Attack Protection\n\n      GDNP discovery partly relies on insecure link-local multicast.\n      Since routers participating in GDNP sometimes relay discovery\n      messages from one link to another, this could be a vector for\n      denial of service attacks.  Relevant mitigations are specified in\n      Section 3.3.3.  Additionally, it is of great importance that\n      firewalls prevent any GDNP messages from entering the domain from\n      an untrusted source.\n\n   - Security during bootstrap and discovery\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 35]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n      A node cannot authenticate GDNP traffic from other nodes until it\n      has identified the trust anchor and can validate certificates for\n      other nodes.  Also, until it has succesfully enrolled\n      [I-D.pritikin-anima-bootstrapping-keyinfra] it cannot assume that\n      other nodes are able to authenticate its own traffic.  Therefore,\n      GDNP discovery during the bootstrap phase for a new device will\n      inevitably be insecure and GDNP synchronization and negotiation\n      will be impossible until enrollment is complete.\n\n6.  IANA Considerations\n\n   Section 3.4 defines the following link-local multicast addresses,\n   which have been assigned by IANA for use by GDNP:\n\n   ALL_GDNP_NEIGHBOR multicast address  (IPv6): (TBD1).  Assigned in the\n      IPv6 Link-Local Scope Multicast Addresses registry.\n\n   ALL_GDNP_NEIGHBOR multicast address  (IPv4): (TBD2).  Assigned in the\n      IPv4 Multicast Local Network Control Block.\n\n      (Note in draft: alternatively, we could use 224.0.0.1, currently\n      defined as All Systems on this Subnet.)\n\n   Section 3.4 defines the following UDP and TCP port, which has been\n   assigned by IANA for use by GDNP:\n\n   GDNP Listen Port:  (TBD3)\n\n   This document defines the General Discovery and Negotiation Protocol\n   (GDNP).  The IANA is requested to create a GDNP registry within the\n   unused portion of the DNCP registry [I-D.ietf-homenet-dncp].  The\n   IANA is also requested to add two new registry tables to the newly-\n   created GDNP registry.  The two tables are the GDNP Messages table\n   and GDNP Options table.\n\n   Initial values for these registries are given below.  Future\n   assignments are to be made through Standards Action or Specification\n   Required [RFC5226].  Assignments for each registry consist of a type\n   code value, a name and a document where the usage is defined.\n\n   Note to the RFC Editor: In the following tables and in the body of\n   this document, the values G0, G1, etc., should be replaced by the\n   assigned values.\n\n   GDNP Messages table.  The values in this table are 16-bit unsigned\n   integers.  The following initial values are assigned in Section 3.6\n   in this document:\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 36]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n         Type  _          Name               _   RFCs\n      ---------+-----------------------------+------------\n           G0  _Reserved                     _ this document\n           G1  _Discovery Message            _ this document\n           G2  _Response Message             _ this document\n           G3  _Request Message              _ this document\n           G4  _Negotiation Message          _ this document\n           G5  _Negotiation-ending Message   _ this document\n           G6  _Confirm-waiting Message      _ this document\n        G7~31  _reserved for future messages _\n\n   GDNP Options table.  The values in this table are 16-bit unsigned\n   integers.  The following initial values are assigned in Section 3.7\n   and Section 3.8.1 in this document:\n\n         Type  _          Name               _   RFCs\n      ---------+-----------------------------+------------\n          G32  _Divert Option                _ this document\n          G33  _Accept Option                _ this document\n          G34  _Decline Option               _ this document\n          G35  _Waiting Time Option          _ this document\n          G36  _Device Identity Option       _ this document\n          G37  _Locator IPv4 Address Option  _ this document\n          G38  _Locator IPv6 Address Option  _ this document\n          G39  _Locator FQDN Option          _ this document\n       G40~63  _Reserved for future GDNP     _\n               _General Options              _\n       G64~127 _Reserved for future GDNP     _\n               _Objective Options            _\n       G128~159_Vendor Specific Options      _ this document\n       G160~175_Reserved for future use      _\n       G176~191_Experimental Options         _ this document\n       G192~???_Reserved for future use      _\n\n7.  Acknowledgements\n\n   A major contribution to the original version of this document was\n   made by Sheng Jiang.\n\n   Valuable comments were received from Michael Behringer, Jeferson\n   Campos Nobre, Laurent Ciavaglia, Zongpeng Du, Yu Fu, Zhenbin Li,\n   Dimitri Papadimitriou, Michael Richardson, Markus Stenberg, Rene\n   Struik, Dacheng Zhang, and other participants in the NMRG research\n   group and the ANIMA working group.\n\n   This document was produced using the xml2rfc tool [RFC2629].\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 37]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n8.  Change log [RFC Editor: Please remove]\n\n   draft-carpenter-anima-discovery-negotiation-protocol-04, 2015-06-12:\n\n   Tuned wording around hierarchical structure.\n\n   Changed "device" to "ASA" in many places.\n\n   Reformulated requirements to be clear that the ASA is the main\n   customer for signaling, and following design discussions.\n\n   Requirements clarified, expanded and rearranged following design team\n   discussion.\n\n   Clarified that GDNP discovery must not be a prerequisite for GDNP\n   negotiation or synchronization (resolved issue 13).\n\n   Specified flag bits for objective options (resolved issue 15).\n\n   Clarified usage of ACP vs TLS/DTLS and TCP vs UDP (resolved issues\n   9,10,11).\n\n   Editorial improvements.\n\n   draft-carpenter-anima-discovery-negotiation-protocol-03, 2015-04-20:\n\n   Removed intrinsic security, required external security\n\n   Format changes to allow ADNCP co-existence\n\n   Recognized DNS-SD as alternative discovery method\n\n   Editorial improvements\n\n   draft-carpenter-anima-discovery-negotiation-protocol-02, 2015-02-19:\n\n   Tuned requirements to clarify scope,\n\n   Clarified relationship between types of objective,\n\n   Clarified that objectives may be simple values or complex data\n   structures,\n\n   Improved description of objective options,\n\n   Added loop-avoidance mechanisms (loop count and default timeout,\n   limitations on discovery relaying and on unsolicited responses),\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 38]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Allow multiple discovery objectives in one response,\n\n   Provided for missing or multiple discovery responses,\n\n   Indicated how modes such as "dry run" should be supported,\n\n   Minor editorial and technical corrections and clarifications,\n\n   Reorganized future work list.\n\n   draft-carpenter-anima-discovery-negotiation-protocol-01, restructured\n   the logical flow of the document, updated to describe synchronization\n   completely, add unsolicited responses, numerous corrections and\n   clarifications, expanded future work list, 2015-01-06.\n\n   draft-carpenter-anima-discovery-negotiation-protocol-00, combination\n   of draft-jiang-config-negotiation-ps-03 and draft-jiang-config-\n   negotiation-protocol-02, 2014-10-08.\n\n9.  References\n\n9.1.  Normative References\n\n   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate\n              Requirement Levels", BCP 14, RFC 2119, March 1997.\n\n   [RFC4086]  Eastlake, D., Schiller, J., and S. Crocker, "Randomness\n              Requirements for Security", BCP 106, RFC 4086, June 2005.\n\n   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security\n              (TLS) Protocol Version 1.2", RFC 5246, August 2008.\n\n   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk, "Internet X.509 Public Key\n              Infrastructure Certificate and Certificate Revocation List\n              (CRL) Profile", RFC 5280, May 2008.\n\n   [RFC6347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer\n              Security Version 1.2", RFC 6347, January 2012.\n\n9.2.  Informative References\n\n   [I-D.behringer-anima-autonomic-control-plane]\n              Behringer, M., Bjarnason, S., BL, B., and T. Eckert, "An\n              Autonomic Control Plane", draft-behringer-anima-autonomic-\n              control-plane-02 (work in progress), March 2015.\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 39]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   [I-D.behringer-anima-reference-model]\n              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,\n              and B. Liu, "A Reference Model for Autonomic Networking",\n              draft-behringer-anima-reference-model-01 (work in\n              progress), April 2015.\n\n   [I-D.chaparadza-intarea-igcp]\n              Behringer, M., Chaparadza, R., Petre, R., Li, X., and H.\n              Mahkonen, "IP based Generic Control Protocol (IGCP)",\n              draft-chaparadza-intarea-igcp-00 (work in progress), July\n              2011.\n\n   [I-D.eckert-anima-stable-connectivity]\n              Eckert, T. and M. Behringer, "Using Autonomic Control\n              Plane for Stable Connectivity of Network OAM", draft-\n              eckert-anima-stable-connectivity-01 (work in progress),\n              March 2015.\n\n   [I-D.ietf-dnssd-requirements]\n              Lynn, K., Cheshire, S., Blanchet, M., and D. Migault,\n              "Requirements for Scalable DNS-SD/mDNS Extensions", draft-\n              ietf-dnssd-requirements-06 (work in progress), March 2015.\n\n   [I-D.ietf-homenet-dncp]\n              Stenberg, M. and S. Barth, "Distributed Node Consensus\n              Protocol", draft-ietf-homenet-dncp-05 (work in progress),\n              June 2015.\n\n   [I-D.ietf-homenet-hncp]\n              Stenberg, M., Barth, S., and P. Pfister, "Home Networking\n              Control Protocol", draft-ietf-homenet-hncp-05 (work in\n              progress), June 2015.\n\n   [I-D.ietf-netconf-restconf]\n              Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF\n              Protocol", draft-ietf-netconf-restconf-05 (work in\n              progress), June 2015.\n\n   [I-D.irtf-nmrg-an-gap-analysis]\n              Jiang, S., Carpenter, B., and M. Behringer, "General Gap\n              Analysis for Autonomic Networking", draft-irtf-nmrg-an-\n              gap-analysis-06 (work in progress), April 2015.\n\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 40]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   [I-D.irtf-nmrg-autonomic-network-definitions]\n              Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,\n              Carpenter, B., Jiang, S., and L. Ciavaglia, "Autonomic\n              Networking - Definitions and Design Goals", draft-irtf-\n              nmrg-autonomic-network-definitions-07 (work in progress),\n              March 2015.\n\n   [I-D.liang-iana-pen]\n              Liang, P., Melnikov, A., and D. Conrad, "Private\n              Enterprise Number (PEN) practices and Internet Assigned\n              Numbers Authority (IANA) registration considerations",\n              draft-liang-iana-pen-05 (work in progress), March 2015.\n\n   [I-D.pritikin-anima-bootstrapping-keyinfra]\n              Pritikin, M., Behringer, M., and S. Bjarnason,\n              "Bootstrapping Key Infrastructures", draft-pritikin-anima-\n              bootstrapping-keyinfra-01 (work in progress), February\n              2015.\n\n   [I-D.stenberg-anima-adncp]\n              Stenberg, M., "Autonomic Distributed Node Consensus\n              Protocol", draft-stenberg-anima-adncp-00 (work in\n              progress), March 2015.\n\n   [RFC2205]  Braden, B., Zhang, L., Berson, S., Herzog, S., and S.\n              Jamin, "Resource ReSerVation Protocol (RSVP) -- Version 1\n              Functional Specification", RFC 2205, September 1997.\n\n   [RFC2608]  Guttman, E., Perkins, C., Veizades, J., and M. Day,\n              "Service Location Protocol, Version 2", RFC 2608, June\n              1999.\n\n   [RFC2629]  Rose, M., "Writing I-Ds and RFCs using XML", RFC 2629,\n              June 1999.\n\n   [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n              "Remote Authentication Dial In User Service (RADIUS)", RFC\n              2865, June 2000.\n\n   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, "RSVP-TE: Extensions to RSVP for LSP\n              Tunnels", RFC 3209, December 2001.\n\n   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n              and M. Carney, "Dynamic Host Configuration Protocol for\n              IPv6 (DHCPv6)", RFC 3315, July 2003.\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 41]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   [RFC3416]  Presuhn, R., "Version 2 of the Protocol Operations for the\n              Simple Network Management Protocol (SNMP)", STD 62, RFC\n              3416, December 2002.\n\n   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              "Neighbor Discovery for IP version 6 (IPv6)", RFC 4861,\n              September 2007.\n\n   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an\n              IANA Considerations Section in RFCs", BCP 26, RFC 5226,\n              May 2008.\n\n   [RFC5971]  Schulzrinne, H. and R. Hancock, "GIST: General Internet\n              Signalling Transport", RFC 5971, October 2010.\n\n   [RFC6241]  Enns, R., Bjorklund, M., Schoenwaelder, J., and A.\n              Bierman, "Network Configuration Protocol (NETCONF)", RFC\n              6241, June 2011.\n\n   [RFC6733]  Fajardo, V., Arkko, J., Loughney, J., and G. Zorn,\n              "Diameter Base Protocol", RFC 6733, October 2012.\n\n   [RFC6762]  Cheshire, S. and M. Krochmal, "Multicast DNS", RFC 6762,\n              February 2013.\n\n   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service\n              Discovery", RFC 6763, February 2013.\n\n   [RFC6887]  Wing, D., Cheshire, S., Boucadair, M., Penno, R., and P.\n              Selkirk, "Port Control Protocol (PCP)", RFC 6887, April\n              2013.\n\nAppendix A.  Capability Analysis of Current Protocols\n\n   This appendix discusses various existing protocols with properties\n   related to the above negotiation and synchronisation requirements.\n   The purpose is to evaluate whether any existing protocol, or a simple\n   combination of existing protocols, can meet those requirements.\n\n   Numerous protocols include some form of discovery, but these all\n   appear to be very specific in their applicability.  Service Location\n   Protocol (SLP) [RFC2608] provides service discovery for managed\n   networks, but requires configuration of its own servers.  DNS-SD\n   [RFC6763] combined with mDNS [RFC6762] provides service discovery for\n   small networks with a single link layer.\n   [I-D.ietf-dnssd-requirements] aims to extend this to larger\n   autonomous networks.  However, both SLP and DNS-SD appear to target\n   primarily application layer services, not the layer 2 and 3\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 42]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   objectives relevant to basic network configuration.  Both SLP and\n   DNS-SD are text-based protocols.\n\n   Routing protocols are mainly one-way information announcements.  The\n   receiver makes independent decisions based on the received\n   information and there is no direct feedback information to the\n   announcing peer.  This remains true even though the protocol is used\n   in both directions between peer routers; there is state\n   synchronization, but no negotiation, and each peer runs its route\n   calculations independently.\n\n   Simple Network Management Protocol (SNMP) [RFC3416] uses a command/\n   response model not well suited for peer negotiation.  Network\n   Configuration Protocol (NETCONF) [RFC6241] uses an RPC model that\n   does allow positive or negative responses from the target system, but\n   this is still not adequate for negotiation.\n\n   There are various existing protocols that have elementary negotiation\n   abilities, such as Dynamic Host Configuration Protocol for IPv6\n   (DHCPv6) [RFC3315], Neighbor Discovery (ND) [RFC4861], Port Control\n   Protocol (PCP) [RFC6887], Remote Authentication Dial In User Service\n   (RADIUS) [RFC2865], Diameter [RFC6733], etc.  Most of them are\n   configuration or management protocols.  However, they either provide\n   only a simple request/response model in a master/slave context or\n   very limited negotiation abilities.\n\n   There are some signaling protocols with an element of negotiation.\n   For example Resource ReSerVation Protocol (RSVP) [RFC2205] was\n   designed for negotiating quality of service parameters along the path\n   of a unicast or multicast flow.  RSVP is a very specialised protocol\n   aimed at end-to-end flows.  However, it has some flexibility, having\n   been extended for MPLS label distribution [RFC3209].  A more generic\n   design is General Internet Signalling Transport (GIST) [RFC5971], but\n   it is complex, tries to solve many problems, and is also aimed at\n   per-flow signaling across many hops rather than at device-to-device\n   signaling.  However, we cannot completely exclude extended RSVP or\n   GIST as a synchronization and negotiation protocol.  They do not\n   appear to be directly useable for peer discovery.\n\n   We now consider two protocols that are works in progress at the time\n   of this writing.  Firstly, RESTCONF [I-D.ietf-netconf-restconf] is a\n   protocol intended to convey NETCONF information expressed in the YANG\n   language via HTTP, including the ability to transit HTML\n   intermediaries.  While this is a powerful approach in the context of\n   centralised configuration of a complex network, it is not well\n   adapted to efficient interactive negotiation between peer devices,\n   especially simple ones that are unlikely to include YANG processing\n   already.\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 43]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\n   Secondly, we consider Distributed Node Consensus Protocol (DNCP)\n   [I-D.ietf-homenet-dncp].  This is defined as a generic form of state\n   synchronization protocol, with a proposed usage profile being the\n   Home Networking Control Protocol (HNCP) [I-D.ietf-homenet-hncp] for\n   configuring Homenet routers.  A specific application of DNCP for\n   autonomic networking was proposed in [I-D.stenberg-anima-adncp].\n\n   Specific features of DNCP include:\n\n   o  Every participating node has a unique node identifier.\n\n   o  DNCP messages are encoded as a sequence of TLV objects, sent over\n      unicast UDP or TCP, with or without (D)TLS security.\n\n   o  Multicast is used only for discovery of DNCP neighbors when lower\n      security is acceptable.\n\n   o  Synchronization of state is maintained by a flooding process using\n      the Trickle algorithm.  There is no bilateral synchronization or\n      negotiation capability.\n\n   o  The HNCP profile of DNCP is designed to operate between directly\n      connected neighbors on a shared link using UDP and link-local IPv6\n      addresses.\n\n   Clearly DNCP does not meet the needs of a general negotiation\n   protocol, especially in its HNCP profile due to the limitation to\n   link-local messages and its strict dependency on IPv6.  However, at\n   the minimum it is a very interesting test case for this style of\n   interaction between devices without needing a central authority, and\n   it is a proven method of network-wide state synchronization by\n   flooding.\n\n   A proposal was made some years ago for an IP based Generic Control\n   Protocol (IGCP) [I-D.chaparadza-intarea-igcp].  This was aimed at\n   information exchange and negotiation but not directly at peer\n   discovery.  However, it has many points in common with the present\n   work.\n\n   None of the above solutions appears to completely meet the needs of\n   generic discovery, state synchronization and negotiation in a single\n   solution.  Neither is there an obvious combination of protocols that\n   does so.  Therefore, this document proposes the design of a protocol\n   that does meet those needs.  However, this proposal needs to be\n   compared with alternatives such as extension and adaptation of GIST\n   or DNCP, or combination with IGCP.\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 44]\n_\nInternet-Draft                GDN Protocol                     June 2015\n\n\nAuthors\' Addresses\n\n   Brian Carpenter\n   Department of Computer Science\n   University of Auckland\n   PB 92019\n   Auckland  1142\n   New Zealand\n\n   Email: brian.e.carpenter@gmail.com\n\n\n   Bing Liu\n   Huawei Technologies Co., Ltd\n   Q14, Huawei Campus\n   No.156 Beiqing Road\n   Hai-Dian District, Beijing  100095\n   P.R. China\n\n   Email: leo.liubing@huawei.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCarpenter _ Liu         Expires December 13, 2015              [Page 45]\n', 'url1': '', 'submit': 'Generate diff', 'url2': '', '--newcolour': 'green'} -->