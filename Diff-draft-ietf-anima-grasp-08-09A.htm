
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<!-- Generated by rfcdiff 1.45: rfcdiff  --> 
<!-- <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional" > -->
<!-- System: Linux dechaunac 3.2.0-4-amd64 #1 SMP Debian 3.2.68-1+deb7u6 x86_64 GNU/Linux --> 
<!-- Using awk: /usr/bin/gawk: GNU Awk 4.1.1, API: 1.1 (GNU MPFR 3.1.3, GNU MP 6.0.0) --> 
<!-- Using diff: /usr/bin/diff: diff (GNU diffutils) 3.3 --> 
<!-- Using wdiff: /usr/bin/wdiff: wdiff (GNU wdiff) 1.2.2 --> 
<html xmlns="http://www.w3.org/1999/xhtml"> 
<head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 
  <meta http-equiv="Content-Style-Type" content="text/css" /> 
  <title>Diff: draft-ietf-anima-grasp-08.txt - draft-ietf-anima-grasp-09A.txt</title> 
  <style type="text/css"> 
    body    { margin: 0.4ex; margin-right: auto; } 
    tr      { } 
    td      { white-space: pre; font-family: monospace; vertical-align: top; font-size: 0.86em;} 
    th      { font-size: 0.86em; } 
    .small  { font-size: 0.6em; font-style: italic; font-family: Verdana, Helvetica, sans-serif; } 
    .left   { background-color: #EEE; } 
    .right  { background-color: #FFF; } 
    .diff   { background-color: #CCF; } 
    .lblock { background-color: #BFB; } 
    .rblock { background-color: #FF8; } 
    .insert { background-color: #8FF; } 
    .delete { background-color: #ACF; } 
    .void   { background-color: #FFB; } 
    .cont   { background-color: #EEE; } 
    .linebr { background-color: #AAA; } 
    .lineno { color: red; background-color: #FFF; font-size: 0.7em; text-align: right; padding: 0 2px; } 
    .elipsis{ background-color: #AAA; } 
    .left .cont { background-color: #DDD; } 
    .right .cont { background-color: #EEE; } 
    .lblock .cont { background-color: #9D9; } 
    .rblock .cont { background-color: #DD6; } 
    .insert .cont { background-color: #0DD; } 
    .delete .cont { background-color: #8AD; } 
    .stats, .stats td, .stats th { background-color: #EEE; padding: 2px 0; } 
    span.hide { display: none; color: #aaa;}    a:hover span { display: inline; }    tr.change { background-color: gray; } 
    tr.change a { text-decoration: none; color: black } 
  </style> 
     <script>
var chunk_index = 0;
var old_chunk = null;

function format_chunk(index) {
    var prefix = "diff";
    var str = index.toString();
    for (x=0; x<(4-str.length); ++x) {
        prefix+='0';
    }
    return prefix + str;
}

function find_chunk(n){
    return document.querySelector('tr[id$="' + n + '"]');
}

function change_chunk(offset) {
    var index = chunk_index + offset;
    var new_str;
    var new_chunk;

    new_str = format_chunk(index);
    new_chunk = find_chunk(new_str);
    if (!new_chunk) {
        return;
    }
    if (old_chunk) {
        old_chunk.style.outline = "";
    }
    old_chunk = new_chunk;
    old_chunk.style.outline = "1px solid red";
    window.location.hash = "#" + new_str;
    window.scrollBy(0,-100);
    chunk_index = index;
}

document.onkeydown = function(e) {
    switch (e.keyCode) {
    case 78:
        change_chunk(1);
        break;
    case 80:
        change_chunk(-1);
        break;
    }
};
   </script> 
</head> 
<body > 
  <table border="0" cellpadding="0" cellspacing="0"> 
  <tr id="part-1" bgcolor="orange"><th></th><th><a href="/rfcdiff?url2=draft-ietf-anima-grasp-08.txt" style="color:#008; text-decoration:none;">&lt;</a>&nbsp;<a href="https://tools.ietf.org/html/draft-ietf-anima-grasp-08.txt" style="color:#008">draft-ietf-anima-grasp-08.txt</a>&nbsp;</th><th> </th><th>&nbsp;<a href="https://tools.ietf.org/html/draft-ietf-anima-grasp-09A.txt" style="color:#008">draft-ietf-anima-grasp-09A.txt</a>&nbsp;<a href="/rfcdiff?url1=draft-ietf-anima-grasp-09A.txt" style="color:#008; text-decoration:none;">&gt;</a></th><th></th></tr> 
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Network Working Group                                         C. Bormann</td><td> </td><td class="right">Network Working Group                                         C. Bormann</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Internet-Draft                                   Universitaet Bremen TZI</td><td> </td><td class="right">Internet-Draft                                   Universitaet Bremen TZI</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Intended status: Standards Track                       B. Carpenter, Ed.</td><td> </td><td class="right">Intended status: Standards Track                       B. Carpenter, Ed.</td><td class="lineno"></td></tr>
      <tr id="diff0001"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">Expires: <span class="delete">May 3, 2017 </span>                                  Univ. of Auckland</td><td> </td><td class="rblock">Expires: <span class="insert">June 4, 2017</span>                                  Univ. of Auckland</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                                                             B. Liu, Ed.</td><td> </td><td class="right">                                                             B. Liu, Ed.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                                            Huawei Technologies Co., Ltd</td><td> </td><td class="right">                                            Huawei Technologies Co., Ltd</td><td class="lineno"></td></tr>
      <tr id="diff0002"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">                                                        <span class="delete">October 30</span>, 2016</td><td> </td><td class="rblock">                                                        <span class="insert">December 1</span>, 2016</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">             A Generic Autonomic Signaling Protocol (GRASP)</td><td> </td><td class="right">             A Generic Autonomic Signaling Protocol (GRASP)</td><td class="lineno"></td></tr>
      <tr id="diff0003"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">                       draft-ietf-anima-grasp-0<span class="delete">8</span></td><td> </td><td class="rblock">                       draft-ietf-anima-grasp-0<span class="insert">9</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Abstract</td><td> </td><td class="right">Abstract</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This document establishes requirements for a signaling protocol that</td><td> </td><td class="right">   This document establishes requirements for a signaling protocol that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   enables autonomic devices and autonomic service agents to dynamically</td><td> </td><td class="right">   enables autonomic devices and autonomic service agents to dynamically</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discover peers, to synchronize state with them, and to negotiate</td><td> </td><td class="right">   discover peers, to synchronize state with them, and to negotiate</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   parameter settings mutually with them.  The document then defines a</td><td> </td><td class="right">   parameter settings mutually with them.  The document then defines a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   general protocol for discovery, synchronization and negotiation,</td><td> </td><td class="right">   general protocol for discovery, synchronization and negotiation,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   while the technical objectives for specific scenarios are to be</td><td> </td><td class="right">   while the technical objectives for specific scenarios are to be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   described in separate documents.  An Appendix briefly discusses</td><td> </td><td class="right">   described in separate documents.  An Appendix briefly discusses</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-2" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-2"><em> page 1, line 40<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-2"><em> page 1, line 40<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   Internet-Drafts are working documents of the Internet Engineering</td><td> </td><td class="right">   Internet-Drafts are working documents of the Internet Engineering</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Task Force (IETF).  Note that other groups may also distribute</td><td> </td><td class="right">   Task Force (IETF).  Note that other groups may also distribute</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   working documents as Internet-Drafts.  The list of current Internet-</td><td> </td><td class="right">   working documents as Internet-Drafts.  The list of current Internet-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Drafts is at http://datatracker.ietf.org/drafts/current/.</td><td> </td><td class="right">   Drafts is at http://datatracker.ietf.org/drafts/current/.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Internet-Drafts are draft documents valid for a maximum of six months</td><td> </td><td class="right">   Internet-Drafts are draft documents valid for a maximum of six months</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   and may be updated, replaced, or obsoleted by other documents at any</td><td> </td><td class="right">   and may be updated, replaced, or obsoleted by other documents at any</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   time.  It is inappropriate to use Internet-Drafts as reference</td><td> </td><td class="right">   time.  It is inappropriate to use Internet-Drafts as reference</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   material or to cite them other than as "work in progress."</td><td> </td><td class="right">   material or to cite them other than as "work in progress."</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0004"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   This Internet-Draft will expire on <span class="delete">May 3</span>, 2017.</td><td> </td><td class="rblock">   This Internet-Draft will expire on <span class="insert">June 4</span>, 2017.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Copyright Notice</td><td> </td><td class="right">Copyright Notice</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Copyright (c) 2016 IETF Trust and the persons identified as the</td><td> </td><td class="right">   Copyright (c) 2016 IETF Trust and the persons identified as the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   document authors.  All rights reserved.</td><td> </td><td class="right">   document authors.  All rights reserved.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This document is subject to BCP 78 and the IETF Trust's Legal</td><td> </td><td class="right">   This document is subject to BCP 78 and the IETF Trust's Legal</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Provisions Relating to IETF Documents</td><td> </td><td class="right">   Provisions Relating to IETF Documents</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (http://trustee.ietf.org/license-info) in effect on the date of</td><td> </td><td class="right">   (http://trustee.ietf.org/license-info) in effect on the date of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   publication of this document.  Please review these documents</td><td> </td><td class="right">   publication of this document.  Please review these documents</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-3" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-3"><em> page 2, line 25<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-3"><em> page 2, line 25<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">       Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4</td><td> </td><td class="right">       Negotiation . . . . . . . . . . . . . . . . . . . . . . . . .   4</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     2.1.  Requirements for Discovery  . . . . . . . . . . . . . . .   5</td><td> </td><td class="right">     2.1.  Requirements for Discovery  . . . . . . . . . . . . . . .   5</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     2.2.  Requirements for Synchronization and Negotiation</td><td> </td><td class="right">     2.2.  Requirements for Synchronization and Negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">           Capability  . . . . . . . . . . . . . . . . . . . . . . .   6</td><td> </td><td class="right">           Capability  . . . . . . . . . . . . . . . . . . . . . . .   6</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     2.3.  Specific Technical Requirements . . . . . . . . . . . . .   9</td><td> </td><td class="right">     2.3.  Specific Technical Requirements . . . . . . . . . . . . .   9</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   3.  GRASP Protocol Overview . . . . . . . . . . . . . . . . . . .  10</td><td> </td><td class="right">   3.  GRASP Protocol Overview . . . . . . . . . . . . . . . . . . .  10</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .  10</td><td> </td><td class="right">     3.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .  10</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.2.  High Level Deployment Model . . . . . . . . . . . . . . .  12</td><td> </td><td class="right">     3.2.  High Level Deployment Model . . . . . . . . . . . . . . .  12</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.3.  High Level Design Choices . . . . . . . . . . . . . . . .  13</td><td> </td><td class="right">     3.3.  High Level Design Choices . . . . . . . . . . . . . . . .  13</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.4.  Quick Operating Overview  . . . . . . . . . . . . . . . .  16</td><td> </td><td class="right">     3.4.  Quick Operating Overview  . . . . . . . . . . . . . . . .  16</td><td class="lineno"></td></tr>
      <tr id="diff0005"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     3.5.  GRASP Protocol Basic Properties and Mechanisms  . . . . .  <span class="delete">17</span></td><td> </td><td class="rblock">     3.5.  GRASP Protocol Basic Properties and Mechanisms  . . . . .  <span class="insert">16</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.5.1.  Required External Security Mechanism  . . . . . . . .  <span class="delete">17</span></td><td> </td><td class="rblock">       3.5.1.  Required External Security Mechanism  . . . . . . . .  <span class="insert">16</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.5.2.  <span class="delete">Limited Security</span> Instances  . . . . . . . . . . . . .  17</td><td> </td><td class="rblock">       3.5.2.  <span class="insert">Constrained</span> Instances <span class="insert">. . .</span> . . . . . . . . . . . . .  17</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.5.3.  Transport Layer Usage . . . . . . . . . . . . . . . .  19</td><td> </td><td class="right">       3.5.3.  Transport Layer Usage . . . . . . . . . . . . . . . .  19</td><td class="lineno"></td></tr>
      <tr id="diff0006"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.5.4.  Discovery Mechanism and Procedures  . . . . . . . . .  <span class="delete">20</span></td><td> </td><td class="rblock">       3.5.4.  Discovery Mechanism and Procedures  . . . . . . . . .  <span class="insert">19</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.5.5.  Negotiation Procedures  . . . . . . . . . . . . . . .  23</td><td> </td><td class="right">       3.5.5.  Negotiation Procedures  . . . . . . . . . . . . . . .  23</td><td class="lineno"></td></tr>
      <tr id="diff0007"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.5.6.  Synchronization and Flooding Procedure  . . . . . . .  2<span class="delete">5</span></td><td> </td><td class="rblock">       3.5.6.  Synchronization and Flooding Procedure  . . . . . . .  2<span class="insert">4</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.6.  GRASP Constants . . . . . . . . . . . . . . . . . . . . .  27</td><td> </td><td class="right">     3.6.  GRASP Constants . . . . . . . . . . . . . . . . . . . . .  27</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.7.  Session Identifier (Session ID) . . . . . . . . . . . . .  27</td><td> </td><td class="right">     3.7.  Session Identifier (Session ID) . . . . . . . . . . . . .  27</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.8.  GRASP Messages  . . . . . . . . . . . . . . . . . . . . .  28</td><td> </td><td class="right">     3.8.  GRASP Messages  . . . . . . . . . . . . . . . . . . . . .  28</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.1.  Message Overview  . . . . . . . . . . . . . . . . . .  28</td><td> </td><td class="right">       3.8.1.  Message Overview  . . . . . . . . . . . . . . . . . .  28</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.2.  GRASP Message Format  . . . . . . . . . . . . . . . .  28</td><td> </td><td class="right">       3.8.2.  GRASP Message Format  . . . . . . . . . . . . . . . .  28</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.3.  Message Size  . . . . . . . . . . . . . . . . . . . .  29</td><td> </td><td class="right">       3.8.3.  Message Size  . . . . . . . . . . . . . . . . . . . .  29</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.4.  Discovery Message . . . . . . . . . . . . . . . . . .  29</td><td> </td><td class="right">       3.8.4.  Discovery Message . . . . . . . . . . . . . . . . . .  29</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.5.  Discovery Response Message  . . . . . . . . . . . . .  31</td><td> </td><td class="right">       3.8.5.  Discovery Response Message  . . . . . . . . . . . . .  31</td><td class="lineno"></td></tr>
      <tr id="diff0008"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.8.6.  Request Messages  . . . . . . . . . . . . . . . . . .  <span class="delete">31</span></td><td> </td><td class="rblock">       3.8.6.  Request Messages  . . . . . . . . . . . . . . . . . .  <span class="insert">32</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.8.7.  Negotiation Message . . . . . . . . . . . . . . . . .  <span class="delete">32</span></td><td> </td><td class="rblock">       3.8.7.  Negotiation Message . . . . . . . . . . . . . . . . .  <span class="insert">33</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.8.  Negotiation End Message . . . . . . . . . . . . . . .  33</td><td> </td><td class="right">       3.8.8.  Negotiation End Message . . . . . . . . . . . . . . .  33</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.9.  Confirm Waiting     Message . . . . . . . . . . . . .  33</td><td> </td><td class="right">       3.8.9.  Confirm Waiting     Message . . . . . . . . . . . . .  33</td><td class="lineno"></td></tr>
      <tr id="diff0009"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.8.10. Synchronization Message . . . . . . . . . . . . . . .  3<span class="delete">3</span></td><td> </td><td class="rblock">       3.8.10. Synchronization Message . . . . . . . . . . . . . . .  3<span class="insert">4</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.11. Flood Synchronization Message . . . . . . . . . . . .  34</td><td> </td><td class="right">       3.8.11. Flood Synchronization Message . . . . . . . . . . . .  34</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.12. Invalid Message . . . . . . . . . . . . . . . . . . .  35</td><td> </td><td class="right">       3.8.12. Invalid Message . . . . . . . . . . . . . . . . . . .  35</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.8.13. No Operation Message  . . . . . . . . . . . . . . . .  35</td><td> </td><td class="right">       3.8.13. No Operation Message  . . . . . . . . . . . . . . . .  35</td><td class="lineno"></td></tr>
      <tr id="diff0010"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     3.9.  GRASP Options . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">35</span></td><td> </td><td class="rblock">     3.9.  GRASP Options . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">36</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.9.1.  Format of GRASP Options . . . . . . . . . . . . . . .  <span class="delete">35</span></td><td> </td><td class="rblock">       3.9.1.  Format of GRASP Options . . . . . . . . . . . . . . .  <span class="insert">36</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.9.2.  Divert Option . . . . . . . . . . . . . . . . . . . .  36</td><td> </td><td class="right">       3.9.2.  Divert Option . . . . . . . . . . . . . . . . . . . .  36</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.9.3.  Accept Option . . . . . . . . . . . . . . . . . . . .  36</td><td> </td><td class="right">       3.9.3.  Accept Option . . . . . . . . . . . . . . . . . . . .  36</td><td class="lineno"></td></tr>
      <tr id="diff0011"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.9.4.  Decline Option  . . . . . . . . . . . . . . . . . . .  3<span class="delete">6</span></td><td> </td><td class="rblock">       3.9.4.  Decline Option  . . . . . . . . . . . . . . . . . . .  3<span class="insert">7</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.9.5.  Locator Options . . . . . . . . . . . . . . . . . . .  37</td><td> </td><td class="right">       3.9.5.  Locator Options . . . . . . . . . . . . . . . . . . .  37</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     3.10. Objective Options . . . . . . . . . . . . . . . . . . . .  39</td><td> </td><td class="right">     3.10. Objective Options . . . . . . . . . . . . . . . . . . . .  39</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.10.1.  Format of Objective Options  . . . . . . . . . . . .  39</td><td> </td><td class="right">       3.10.1.  Format of Objective Options  . . . . . . . . . . . .  39</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.10.2.  Objective flags  . . . . . . . . . . . . . . . . . .  40</td><td> </td><td class="right">       3.10.2.  Objective flags  . . . . . . . . . . . . . . . . . .  40</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.10.3.  General Considerations for Objective Options . . . .  40</td><td> </td><td class="right">       3.10.3.  General Considerations for Objective Options . . . .  40</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">       3.10.4.  Organizing of Objective Options  . . . . . . . . . .  41</td><td> </td><td class="right">       3.10.4.  Organizing of Objective Options  . . . . . . . . . .  41</td><td class="lineno"></td></tr>
      <tr id="diff0012"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">       3.10.5.  Experimental and Example Objective Options . . . . .  <span class="delete">42</span></td><td> </td><td class="rblock">       3.10.5.  Experimental and Example Objective Options . . . . .  <span class="insert">43</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   4.  Implementation Status [RFC Editor: please remove] . . . . . .  <span class="delete">42</span></td><td> </td><td class="rblock">   4.  Implementation Status [RFC Editor: please remove] . . . . . .  <span class="insert">43</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     4.1.  BUPT C++ Implementation . . . . . . . . . . . . . . . . .  <span class="delete">42</span></td><td> </td><td class="rblock">     4.1.  BUPT C++ Implementation . . . . . . . . . . . . . . . . .  <span class="insert">43</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     4.2.  Python Implementation . . . . . . . . . . . . . . . . . .  <span class="delete">43</span></td><td> </td><td class="rblock">     4.2.  Python Implementation . . . . . . . . . . . . . . . . . .  <span class="insert">44</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  44</td><td> </td><td class="right">   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  44</td><td class="lineno"></td></tr>
      <tr id="diff0013"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   6.  CDDL Specification of GRASP . . . . . . . . . . . . . . . . .  <span class="delete">46</span></td><td> </td><td class="rblock">   6.  CDDL Specification of GRASP . . . . . . . . . . . . . . . . .  <span class="insert">47</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  <span class="delete">48</span></td><td> </td><td class="rblock">   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  <span class="insert">49</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  50</td><td> </td><td class="right">   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  50</td><td class="lineno"></td></tr>
      <tr id="diff0014"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">50</span></td><td> </td><td class="rblock">   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">51</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  <span class="delete">50</span></td><td> </td><td class="rblock">     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  <span class="insert">51</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     9.2.  Informative References  . . . . . . . . . . . . . . . . .  <span class="delete">51</span></td><td> </td><td class="rblock">     9.2.  Informative References  . . . . . . . . . . . . . . . . .  <span class="insert">52</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Appendix A.  Open Issues [RFC Editor: Please remove if empty] . .  <span class="delete">54</span></td><td> </td><td class="rblock">   Appendix A.  Open Issues [RFC Editor: Please remove if empty] . .  <span class="insert">55</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Appendix B.  Closed Issues [RFC Editor: Please remove]  . . . . .  <span class="delete">54</span></td><td> </td><td class="rblock">   Appendix B.  Closed Issues [RFC Editor: Please remove]  . . . . .  <span class="insert">55</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Appendix C.  Change log [RFC Editor: Please remove] . . . . . . .  <span class="delete">62</span></td><td> </td><td class="rblock">   Appendix C.  Change log [RFC Editor: Please remove] . . . . . . .  <span class="insert">63</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Appendix D.  Example Message Formats  . . . . . . . . . . . . . .  <span class="delete">67</span></td><td> </td><td class="rblock">   Appendix D.  Example Message Formats  . . . . . . . . . . . . . .  <span class="insert">69</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     D.1.  Discovery Example . . . . . . . . . . . . . . . . . . . .  <span class="delete">68</span></td><td> </td><td class="rblock">     D.1.  Discovery Example . . . . . . . . . . . . . . . . . . . .  <span class="insert">69</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     D.2.  Flood Example . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">68</span></td><td> </td><td class="rblock">     D.2.  Flood Example . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">69</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     D.3.  Synchronization Example . . . . . . . . . . . . . . . . .  <span class="delete">68</span></td><td> </td><td class="rblock">     D.3.  Synchronization Example . . . . . . . . . . . . . . . . .  <span class="insert">70</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     D.4.  Simple Negotiation Example  . . . . . . . . . . . . . . .  <span class="delete">69</span></td><td> </td><td class="rblock">     D.4.  Simple Negotiation Example  . . . . . . . . . . . . . . .  <span class="insert">70</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">     D.5.  Complete Negotiation Example  . . . . . . . . . . . . . .  <span class="delete">69</span></td><td> </td><td class="rblock">     D.5.  Complete Negotiation Example  . . . . . . . . . . . . . .  <span class="insert">70</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Appendix E.  Capability Analysis of Current Protocols . . . . . .  <span class="delete">70</span></td><td> </td><td class="rblock">   Appendix E.  Capability Analysis of Current Protocols . . . . . .  <span class="insert">71</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  <span class="delete">73</span></td><td> </td><td class="rblock">   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  <span class="insert">74</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">1.  Introduction</td><td> </td><td class="right">1.  Introduction</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The success of the Internet has made IP-based networks bigger and</td><td> </td><td class="right">   The success of the Internet has made IP-based networks bigger and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   more complicated.  Large-scale ISP and enterprise networks have</td><td> </td><td class="right">   more complicated.  Large-scale ISP and enterprise networks have</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   become more and more problematic for human based management.  Also,</td><td> </td><td class="right">   become more and more problematic for human based management.  Also,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operational costs are growing quickly.  Consequently, there are</td><td> </td><td class="right">   operational costs are growing quickly.  Consequently, there are</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   increased requirements for autonomic behavior in the networks.</td><td> </td><td class="right">   increased requirements for autonomic behavior in the networks.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   General aspects of autonomic networks are discussed in [RFC7575] and</td><td> </td><td class="right">   General aspects of autonomic networks are discussed in [RFC7575] and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC7576].</td><td> </td><td class="right">   [RFC7576].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-4" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-4"><em> page 6, line 38<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-4"><em> page 6, line 38<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">      trust has been established for a device, all ASAs within the</td><td> </td><td class="right">      trust has been established for a device, all ASAs within the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      device inherit the device's credentials and are also trusted.</td><td> </td><td class="right">      device inherit the device's credentials and are also trusted.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Depending on the type of network involved, discovery of other</td><td> </td><td class="right">   o  Depending on the type of network involved, discovery of other</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      central functions might be needed, such as the Network Operations</td><td> </td><td class="right">      central functions might be needed, such as the Network Operations</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Center (NOC) [I-D.ietf-anima-stable-connectivity].  The protocol</td><td> </td><td class="right">      Center (NOC) [I-D.ietf-anima-stable-connectivity].  The protocol</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      must be capable of supporting such discovery during</td><td> </td><td class="right">      must be capable of supporting such discovery during</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      initialisation, as well as discovery during ongoing operation.</td><td> </td><td class="right">      initialisation, as well as discovery during ongoing operation.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   D8.  The discovery process must not generate excessive traffic and</td><td> </td><td class="right">   D8.  The discovery process must not generate excessive traffic and</td><td class="lineno"></td></tr>
      <tr id="diff0015"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   must take account of sleeping <span class="delete">nodes in the case of a constrained-node</span></td><td> </td><td class="rblock">   must take account of sleeping <span class="insert">nodes.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   network [RFC7228].</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   D9.  There must be a mechanism for handling stale discovery results.</td><td> </td><td class="right">   D9.  There must be a mechanism for handling stale discovery results.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">2.2.  Requirements for Synchronization and Negotiation Capability</td><td> </td><td class="right">2.2.  Requirements for Synchronization and Negotiation Capability</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   As background, consider the example of routing protocols, the closest</td><td> </td><td class="right">   As background, consider the example of routing protocols, the closest</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   approximation to autonomic networking already in widespread use.</td><td> </td><td class="right">   approximation to autonomic networking already in widespread use.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Routing protocols use a largely autonomic model based on distributed</td><td> </td><td class="right">   Routing protocols use a largely autonomic model based on distributed</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   devices that communicate repeatedly with each other.  The focus is</td><td> </td><td class="right">   devices that communicate repeatedly with each other.  The focus is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   reachability, so current routing protocols mainly consider simple</td><td> </td><td class="right">   reachability, so current routing protocols mainly consider simple</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-5" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-5"><em> page 8, line 10<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-5"><em> page 8, line 10<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   SN6.  Human intervention in large networks is often replaced by use</td><td> </td><td class="right">   SN6.  Human intervention in large networks is often replaced by use</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   of a top-down network management system (NMS).  It therefore follows</td><td> </td><td class="right">   of a top-down network management system (NMS).  It therefore follows</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that the protocol, as part of the Autonomic Networking</td><td> </td><td class="right">   that the protocol, as part of the Autonomic Networking</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Infrastructure, should be capable of running in any device that would</td><td> </td><td class="right">   Infrastructure, should be capable of running in any device that would</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   otherwise be managed by an NMS, and that it can co-exist with an NMS,</td><td> </td><td class="right">   otherwise be managed by an NMS, and that it can co-exist with an NMS,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   and with protocols such as SNMP and NETCONF.</td><td> </td><td class="right">   and with protocols such as SNMP and NETCONF.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   SN7.  Some features are expected to be implemented by individual</td><td> </td><td class="right">   SN7.  Some features are expected to be implemented by individual</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ASAs, but the protocol must be general enough to allow them:</td><td> </td><td class="right">   ASAs, but the protocol must be general enough to allow them:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0016"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   o  Dependencies and conflicts: In order to decide a configuration <span class="delete">on</span></td><td> </td><td class="rblock">   o  Dependencies and conflicts: In order to decide <span class="insert">upon</span> a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      a given device, the device may need information from neighbors.</td><td> </td><td class="rblock">      configuration <span class="insert">for</span> a given device, the device may need information</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      This can be established through the negotiation procedure, or</td><td> </td><td class="rblock">      from neighbors.  This can be established through the negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      through synchronization if that is sufficient.  However, a given</td><td> </td><td class="rblock">      procedure, or through synchronization if that is sufficient.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      item in a neighbor may depend on other information from its own</td><td> </td><td class="rblock">      However, a given item in a neighbor may depend on other</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      neighbors, which may need another negotiation or synchronization</td><td> </td><td class="rblock">      information from its own neighbors, which may need another</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      procedure to obtain or decide.  Therefore, there are potential</td><td> </td><td class="rblock">      negotiation or synchronization procedure to obtain or decide.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      dependencies and conflicts among negotiation or synchronization</td><td> </td><td class="rblock">      Therefore, there are potential dependencies and conflicts among</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      procedures.  Resolving dependencies and conflicts is a matter for</td><td> </td><td class="rblock">      negotiation or synchronization procedures.  Resolving dependencies</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      the individual ASAs involved.  To allow this, there need to be</td><td> </td><td class="rblock">      and conflicts is a matter for the individual ASAs involved.  To</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      clear boundaries and convergence mechanisms for negotiations.</td><td> </td><td class="rblock">      allow this, there need to be clear boundaries and convergence</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      Also some mechanisms are needed to avoid loop dependencies.  In</td><td> </td><td class="rblock">      mechanisms for negotiations.  Also some mechanisms are needed to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      such a case, the protocol's role is limited to bilateral signaling</td><td> </td><td class="rblock">      avoid loop dependencies.  In such a case, the protocol's role is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      between ASAs.</td><td> </td><td class="rblock">      limited to bilateral signaling between ASAs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Recovery from faults and identification of faulty devices should</td><td> </td><td class="right">   o  Recovery from faults and identification of faulty devices should</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      be as automatic as possible.  The protocol's role is limited to</td><td> </td><td class="right">      be as automatic as possible.  The protocol's role is limited to</td><td class="lineno"></td></tr>
      <tr id="diff0017"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">the ability to handle</span> discovery, synchronization and <span class="delete">negotiation</span></td><td> </td><td class="rblock">      discovery, synchronization and <span class="insert">negotiation.  These processes can</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      at any time, <span class="delete">in case</span> an ASA detects an anomaly such as a</td><td> </td><td class="rblock"><span class="insert">      occur</span> at any time, <span class="insert">and</span> an <span class="insert">ASA may need to repeat any of these</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      negotiation counterpart failing.</td><td> </td><td class="rblock"><span class="insert">      steps when the</span> ASA detects an anomaly such as a negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">      counterpart failing.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Since the goal is to minimize human intervention, it is necessary</td><td> </td><td class="right">   o  Since the goal is to minimize human intervention, it is necessary</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      that the network can in effect "think ahead" before changing its</td><td> </td><td class="right">      that the network can in effect "think ahead" before changing its</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      parameters.  One aspect of this is an ASA that relies on a</td><td> </td><td class="right">      parameters.  One aspect of this is an ASA that relies on a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      knowledge base to predict network behavior.  This is out of scope</td><td> </td><td class="right">      knowledge base to predict network behavior.  This is out of scope</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      for the signaling protocol.  However, another aspect is</td><td> </td><td class="right">      for the signaling protocol.  However, another aspect is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      forecasting the effect of a change by a "dry run" negotiation</td><td> </td><td class="right">      forecasting the effect of a change by a "dry run" negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      before actually installing the change.  This will be an</td><td> </td><td class="right">      before actually installing the change.  This will be an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      application of the protocol rather than a feature of the protocol</td><td> </td><td class="right">      application of the protocol rather than a feature of the protocol</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      itself.</td><td> </td><td class="right">      itself.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-6" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-6"><em> page 11, line 6<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-6"><em> page 11, line 6<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">      is a special case of negotiation in which information is sent but</td><td> </td><td class="right">      is a special case of negotiation in which information is sent but</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the ASAs do not request their peers to change parameter settings.</td><td> </td><td class="right">      the ASAs do not request their peers to change parameter settings.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      All other definitions apply to both negotiation and</td><td> </td><td class="right">      All other definitions apply to both negotiation and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      synchronization.</td><td> </td><td class="right">      synchronization.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Technical Objective (usually abbreviated as Objective): A</td><td> </td><td class="right">   o  Technical Objective (usually abbreviated as Objective): A</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      technical objective is a configurable parameter or set of</td><td> </td><td class="right">      technical objective is a configurable parameter or set of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      parameters of some kind, which occurs in three contexts:</td><td> </td><td class="right">      parameters of some kind, which occurs in three contexts:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Discovery, Negotiation and Synchronization.  In the protocol, an</td><td> </td><td class="right">      Discovery, Negotiation and Synchronization.  In the protocol, an</td><td class="lineno"></td></tr>
      <tr id="diff0018"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      objective is represented by an identifier <span class="delete">and</span> if <span class="delete">relevant</span> a value.</td><td> </td><td class="rblock">      objective is represented by an identifier <span class="insert">and,</span> if <span class="insert">relevant,</span> a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      Normally, a given objective will not occur in negotiation and</td><td> </td><td class="rblock">      value.  Normally, a given objective will not occur in negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      synchronization contexts simultaneously.</td><td> </td><td class="rblock">      and synchronization contexts simultaneously.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  One ASA may support multiple independent objectives.</td><td> </td><td class="right">      *  One ASA may support multiple independent objectives.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  The parameter described by a given objective is naturally based</td><td> </td><td class="right">      *  The parameter described by a given objective is naturally based</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         on a specific service or function or action.  It may in</td><td> </td><td class="right">         on a specific service or function or action.  It may in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         principle be anything that can be set to a specific logical,</td><td> </td><td class="right">         principle be anything that can be set to a specific logical,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         numerical or string value, or a more complex data structure, by</td><td> </td><td class="right">         numerical or string value, or a more complex data structure, by</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         a network node.  That node is generally expected to contain an</td><td> </td><td class="right">         a network node.  That node is generally expected to contain an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         ASA which may itself manage subsidiary non-autonomic nodes.</td><td> </td><td class="right">         ASA which may itself manage subsidiary non-autonomic nodes.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0019"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      *  Discovery Objective: <span class="delete">if a node needs to synchronize or</span></td><td> </td><td class="rblock">      *  Discovery Objective: <span class="insert">an</span> objective <span class="insert">in the process of discovery.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         negotiate a specific</span> objective <span class="delete">but does not know a peer that</span></td><td> </td><td class="rblock"><span class="insert">         Its value may be undefined.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         supports this objective, it starts a discovery process.  The</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         objective is called a Discovery Objective during this process.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  Synchronization Objective: an objective whose specific</td><td> </td><td class="right">      *  Synchronization Objective: an objective whose specific</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         technical content needs to be synchronized among two or more</td><td> </td><td class="right">         technical content needs to be synchronized among two or more</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         ASAs.</td><td> </td><td class="right">         ASAs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  Negotiation Objective: an objective whose specific technical</td><td> </td><td class="right">      *  Negotiation Objective: an objective whose specific technical</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         content needs to be decided in coordination with another ASA.</td><td> </td><td class="right">         content needs to be decided in coordination with another ASA.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0020"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">      <span class="insert">A detailed discussion of objectives, including their format, is</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      found in Section 3.10.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Discovery Initiator: an ASA that spontaneously starts discovery by</td><td> </td><td class="right">   o  Discovery Initiator: an ASA that spontaneously starts discovery by</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      sending a discovery message referring to a specific discovery</td><td> </td><td class="right">      sending a discovery message referring to a specific discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      objective.</td><td> </td><td class="right">      objective.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Discovery Responder: a peer that either contains an ASA supporting</td><td> </td><td class="right">   o  Discovery Responder: a peer that either contains an ASA supporting</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the discovery objective indicated by the discovery initiator, or</td><td> </td><td class="right">      the discovery objective indicated by the discovery initiator, or</td><td class="lineno"></td></tr>
      <tr id="diff0021"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      caches the locator(s) of the ASA(s) supporting the objective.  <span class="delete">The</span></td><td> </td><td class="rblock">      caches the locator(s) of the ASA(s) supporting the objective.  <span class="insert">It</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      locator(s) are indicated in</span> a Discovery Response, <span class="delete">which is</span></td><td> </td><td class="rblock"><span class="insert">      sends</span> a Discovery Response, as described later.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      normally sent by the protocol kernel,</span> as described later.</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Synchronization Initiator: an ASA that spontaneously starts</td><td> </td><td class="right">   o  Synchronization Initiator: an ASA that spontaneously starts</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      synchronization by sending a request message referring to a</td><td> </td><td class="right">      synchronization by sending a request message referring to a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      specific synchronization objective.</td><td> </td><td class="right">      specific synchronization objective.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Synchronization Responder: a peer ASA which responds with the</td><td> </td><td class="right">   o  Synchronization Responder: a peer ASA which responds with the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      value of a synchronization objective.</td><td> </td><td class="right">      value of a synchronization objective.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Negotiation Initiator: an ASA that spontaneously starts</td><td> </td><td class="right">   o  Negotiation Initiator: an ASA that spontaneously starts</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      negotiation by sending a request message referring to a specific</td><td> </td><td class="right">      negotiation by sending a request message referring to a specific</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-7" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-7"><em> page 12, line 25<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-7"><em> page 12, line 25<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   device, these three components might be fully integrated.  A more</td><td> </td><td class="right">   device, these three components might be fully integrated.  A more</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   common model is expected to be a multi-purpose device capable of</td><td> </td><td class="right">   common model is expected to be a multi-purpose device capable of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   containing several ASAs.  In this case it is expected that the ACP,</td><td> </td><td class="right">   containing several ASAs.  In this case it is expected that the ACP,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP and the ASAs will be implemented as separate processes, which</td><td> </td><td class="right">   GRASP and the ASAs will be implemented as separate processes, which</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   are probably multi-threaded to support asynchronous and simultaneous</td><td> </td><td class="right">   are probably multi-threaded to support asynchronous and simultaneous</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operations.  It is expected that GRASP will access the ACP by using a</td><td> </td><td class="right">   operations.  It is expected that GRASP will access the ACP by using a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   typical socket interface.  A well defined Application Programming</td><td> </td><td class="right">   typical socket interface.  A well defined Application Programming</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Interface (API) will be needed between GRASP and the ASAs.  In some</td><td> </td><td class="right">   Interface (API) will be needed between GRASP and the ASAs.  In some</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   implementations, ASAs would run in user space with a GRASP library</td><td> </td><td class="right">   implementations, ASAs would run in user space with a GRASP library</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   providing the API, and this library would in turn communicate via</td><td> </td><td class="right">   providing the API, and this library would in turn communicate via</td><td class="lineno"></td></tr>
      <tr id="diff0022"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   system calls with core GRASP <span class="delete">functions running in kernel mode.</span>  For</td><td> </td><td class="rblock">   system calls with core GRASP <span class="insert">functions.</span>  For further details of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   further details of possible deployment models, see</td><td> </td><td class="rblock">   possible deployment models, see [I-D.ietf-anima-reference-model].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   [I-D.ietf-anima-reference-model].</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A GRASP instance must be aware of its network interfaces, and of its</td><td> </td><td class="right">   A GRASP instance must be aware of its network interfaces, and of its</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   own global-scope and link-local addresses.  In the presence of the</td><td> </td><td class="right">   own global-scope and link-local addresses.  In the presence of the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ACP, such information will be available from the adjacency table</td><td> </td><td class="right">   ACP, such information will be available from the adjacency table</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discussed in [I-D.ietf-anima-reference-model].  In other cases, GRASP</td><td> </td><td class="right">   discussed in [I-D.ietf-anima-reference-model].  In other cases, GRASP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   must determine such information for itself.  Details depend on the</td><td> </td><td class="right">   must determine such information for itself.  Details depend on the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   operating system.</td><td> </td><td class="right">   operating system.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Because GRASP needs to work whatever happens, especially during</td><td> </td><td class="right">   Because GRASP needs to work whatever happens, especially during</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   bootstrapping and during fault conditions, it is essential that every</td><td> </td><td class="right">   bootstrapping and during fault conditions, it is essential that every</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-8" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-8"><em> page 13, line 9<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-8"><em> page 13, line 9<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   An autonomic node will normally run a single instance of GRASP, used</td><td> </td><td class="right">   An autonomic node will normally run a single instance of GRASP, used</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   by multiple ASAs.  However, scenarios where multiple instances of</td><td> </td><td class="right">   by multiple ASAs.  However, scenarios where multiple instances of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP run in a single node, perhaps with different security</td><td> </td><td class="right">   GRASP run in a single node, perhaps with different security</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   properties, are not excluded.  In this case, each instance MUST</td><td> </td><td class="right">   properties, are not excluded.  In this case, each instance MUST</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   listen independently for GRASP link-local multicasts in order for</td><td> </td><td class="right">   listen independently for GRASP link-local multicasts in order for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discovery and flooding to work correctly.</td><td> </td><td class="right">   discovery and flooding to work correctly.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.3.  High Level Design Choices</td><td> </td><td class="right">3.3.  High Level Design Choices</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0023"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   This section describes a behavior model and design <span class="delete">considerations</span> for</td><td> </td><td class="rblock">   This section describes a behavior model and design <span class="insert">choices</span> for GRASP,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   GRASP, supporting discovery, synchronization and negotiation, to act</td><td> </td><td class="rblock">   supporting discovery, synchronization and negotiation, to act as a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   as a platform for different technical objectives.</td><td> </td><td class="rblock">   platform for different technical objectives.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A generic platform</td><td> </td><td class="right">   o  A generic platform</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The protocol is designed as a generic platform, which is</td><td> </td><td class="right">      The protocol is designed as a generic platform, which is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      independent from the synchronization or negotiation contents.  It</td><td> </td><td class="right">      independent from the synchronization or negotiation contents.  It</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      takes care of the general intercommunication between counterparts.</td><td> </td><td class="right">      takes care of the general intercommunication between counterparts.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The technical contents will vary according to the various</td><td> </td><td class="right">      The technical contents will vary according to the various</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      technical objectives and the different pairs of counterparts.</td><td> </td><td class="right">      technical objectives and the different pairs of counterparts.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  The protocol is expected to form part of an Autonomic Networking</td><td> </td><td class="right">   o  The protocol is expected to form part of an Autonomic Networking</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Infrastructure [I-D.ietf-anima-reference-model].  It will provide</td><td> </td><td class="right">      Infrastructure [I-D.ietf-anima-reference-model].  It will provide</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      services to ASAs via a suitable application programming interface</td><td> </td><td class="right">      services to ASAs via a suitable application programming interface</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      (API), which will reflect the protocol elements but will not</td><td> </td><td class="right">      (API), which will reflect the protocol elements but will not</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      necessarily be in one-to-one correspondence to them.  This API is</td><td> </td><td class="right">      necessarily be in one-to-one correspondence to them.  This API is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      out of scope for the present document.</td><td> </td><td class="right">      out of scope for the present document.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  It is normally expected that a single main instance of GRASP will</td><td> </td><td class="right">   o  It is normally expected that a single main instance of GRASP will</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      exist in an autonomic node, and that the protocol engine and each</td><td> </td><td class="right">      exist in an autonomic node, and that the protocol engine and each</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      ASA will run as independent asynchronous processes.  However,</td><td> </td><td class="right">      ASA will run as independent asynchronous processes.  However,</td><td class="lineno"></td></tr>
      <tr id="diff0024"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      separate GRASP instances may exist for security reasons</td><td> </td><td class="rblock">      separate GRASP instances may exist for security<span class="insert">-related</span> reasons</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      (Section 3.5.2).</td><td> </td><td class="right">      (Section 3.5.2).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Security infrastructure and trust relationship</td><td> </td><td class="right">   o  Security infrastructure and trust relationship</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Because this negotiation protocol may directly cause changes to</td><td> </td><td class="right">      Because this negotiation protocol may directly cause changes to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      device configurations and bring significant impacts to a running</td><td> </td><td class="right">      device configurations and bring significant impacts to a running</td><td class="lineno"></td></tr>
      <tr id="diff0025"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      network, this protocol is <span class="delete">assumed</span> to run within an existing secure</td><td> </td><td class="rblock">      network, this protocol is <span class="insert">required</span> to run within an existing</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      environment with strong authentication.  As a design choice, the</td><td> </td><td class="rblock">      secure environment with strong authentication.  As a design</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      protocol itself is not provided with built-in security</td><td> </td><td class="rblock">      choice, the protocol itself is not provided with built-in security</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      functionality.</td><td> </td><td class="right">      functionality.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      On the other hand, a limited negotiation model might be deployed</td><td> </td><td class="right">      On the other hand, a limited negotiation model might be deployed</td><td class="lineno"></td></tr>
      <tr id="diff0026"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      based on a limited trust <span class="delete">relationship.  For example,</span> between two</td><td> </td><td class="rblock">      based on a limited trust <span class="insert">relationship such as that</span> between two</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      administrative <span class="delete">domains,</span> ASAs might <span class="delete">also</span> exchange limited</td><td> </td><td class="rblock">      administrative <span class="insert">domains.</span>  ASAs might <span class="insert">then</span> exchange limited</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      information and negotiate some particular <span class="delete">configurations based on</span></td><td> </td><td class="rblock">      information and negotiate some particular <span class="insert">configurations.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      a limited conventional or contractual trust relationship.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Discovery, synchronization and negotiation are designed together.</td><td> </td><td class="right">   o  Discovery, synchronization and negotiation are designed together.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The discovery method and the synchronization and negotiation</td><td> </td><td class="right">      The discovery method and the synchronization and negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      methods are designed in the same way and can be combined when this</td><td> </td><td class="right">      methods are designed in the same way and can be combined when this</td><td class="lineno"></td></tr>
      <tr id="diff0027"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      is <span class="delete">useful.</span>  These processes can also be performed independently</td><td> </td><td class="rblock">      is <span class="insert">useful, allowing a rapid mode of operation described in</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      when appropriate.</td><td> </td><td class="rblock"><span class="insert">      Section 3.5.4.</span>  These processes can also be performed</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">      independently when appropriate.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0028"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      *  <span class="delete">GRASP discovery is always available</span> for <span class="delete">efficient discovery of</span></td><td> </td><td class="rblock">      *  <span class="insert">Thus,</span> for some objectives, especially those concerned with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         GRASP peers and allows a rapid mode of operation described in</span></td><td> </td><td class="rblock">         application layer services, another discovery mechanism such as</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         Section 3.5.4.  For</span> some objectives, especially those concerned</td><td> </td><td class="rblock">         the future DNS Service Discovery [RFC7558] MAY be used.  The</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">         with application layer services, another discovery mechanism</td><td> </td><td class="rblock">         choice is left to the designers of individual ASAs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">         such as the future DNS Service Discovery [RFC7558] <span class="delete">or Service</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         Location Protocol [RFC2608]</span> MAY be used.  The choice is left to</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">         the designers of individual ASAs.</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0029"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   o  A uniform pattern for technical <span class="delete">content</span>s</td><td> </td><td class="rblock">   o  A uniform pattern for technical <span class="insert">objective</span>s</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0030"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      The synchronization and negotiation <span class="delete">contents</span> are defined according</td><td> </td><td class="rblock">      The synchronization and negotiation <span class="insert">objectives</span> are defined</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      to a uniform pattern.  <span class="delete">They</span> could be carried either in simple</td><td> </td><td class="rblock">      according to a uniform pattern.  <span class="insert">The values that they contain</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      binary format or in <span class="delete">payloads described by</span> a <span class="delete">flexible language.</span></td><td> </td><td class="rblock">      could be carried either in <span class="insert">a</span> simple binary format or in a <span class="insert">complex</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      The basic protocol design uses the Concise Binary Object</td><td> </td><td class="rblock"><span class="insert">      object format.</span>  The basic protocol design uses the Concise Binary</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      Representation (CBOR) <span class="delete">[RFC7049].  The format</span> is extensible for</td><td> </td><td class="rblock">      Object Representation (CBOR) <span class="insert">[RFC7049], which</span> is <span class="insert">readily</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      unknown future requirements.</td><td> </td><td class="rblock">      extensible for unknown future requirements.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A flexible model for synchronization</td><td> </td><td class="right">   o  A flexible model for synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      GRASP supports bilateral synchronization, which could be used to</td><td> </td><td class="right">      GRASP supports bilateral synchronization, which could be used to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      perform synchronization among a small number of nodes.  It also</td><td> </td><td class="right">      perform synchronization among a small number of nodes.  It also</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      supports an unsolicited flooding mode when large groups of nodes,</td><td> </td><td class="right">      supports an unsolicited flooding mode when large groups of nodes,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      possibly including all autonomic nodes, need data for the same</td><td> </td><td class="right">      possibly including all autonomic nodes, need data for the same</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      technical objective.</td><td> </td><td class="right">      technical objective.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  There may be some network parameters for which a more</td><td> </td><td class="right">      *  There may be some network parameters for which a more</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         traditional flooding mechanism such as DNCP [RFC7787] is</td><td> </td><td class="right">         traditional flooding mechanism such as DNCP [RFC7787] is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">         considered more appropriate.  GRASP can coexist with DNCP.</td><td> </td><td class="right">         considered more appropriate.  GRASP can coexist with DNCP.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A simple initiator/responder model for negotiation</td><td> </td><td class="right">   o  A simple initiator/responder model for negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0031"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      Multi-party negotiations are <span class="delete">too</span> complicated to <span class="delete">be modeled</span> and</td><td> </td><td class="rblock">      Multi-party negotiations are <span class="insert">very</span> complicated to <span class="insert">model</span> and <span class="insert">cannot</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">there might</span> be <span class="delete">too many dependencies among the parties</span> to <span class="delete">converge</span></td><td> </td><td class="rblock"><span class="insert">      readily</span> be <span class="insert">guaranteed</span> to <span class="insert">converge.  GRASP uses a</span> simple <span class="insert">bilateral</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      efficiently.  A</span> simple <span class="delete">initiator/responder</span> model <span class="delete">is more feasible</span></td><td> </td><td class="rblock">      model and can <span class="insert">support</span> multi-party negotiations by indirect steps.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      and can <span class="delete">complete</span> multi-party negotiations by indirect steps.</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Organizing of synchronization or negotiation content</td><td> </td><td class="right">   o  Organizing of synchronization or negotiation content</td><td class="lineno"></td></tr>
      <tr id="diff0032"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">Naturally, the</span> technical content will be organized according to</td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      the relevant function or service.  The <span class="delete">content from</span> different</td><td> </td><td class="rblock">      <span class="insert">The</span> technical content <span class="insert">transmitted by GRASP</span> will be organized</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      functions or services <span class="delete">is kept independent from each other.  They</span></td><td> </td><td class="rblock">      according to the relevant function or service.  The <span class="insert">objectives for</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      are <span class="delete">not combined into a single option or single session</span> because</td><td> </td><td class="rblock">      different functions or services are <span class="insert">kept separate,</span> because <span class="insert">they</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">these contents</span> may be negotiated or synchronized with different</td><td> </td><td class="rblock">      may be negotiated or synchronized with different counterparts or</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      counterparts or <span class="delete">may be</span> different <span class="delete">in</span> response <span class="delete">time.</span>  Thus a normal</td><td> </td><td class="rblock">      <span class="insert">have</span> different response <span class="insert">times.</span>  Thus a normal arrangement would be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      arrangement would be a single ASA managing a small set of closely</td><td> </td><td class="rblock">      a single ASA managing a small set of closely related objectives,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      related objectives, with a version of that ASA in each relevant</td><td> </td><td class="rblock">      with a version of that ASA in each relevant autonomic node.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      autonomic node.  Further discussion of this aspect is out of scope</td><td> </td><td class="rblock">      Further discussion of this aspect is out of scope for the current</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      for the current document.</td><td> </td><td class="rblock">      document.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Requests and responses in negotiation procedures</td><td> </td><td class="right">   o  Requests and responses in negotiation procedures</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0033"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      The initiator can negotiate with <span class="delete">its</span> relevant <span class="delete">negotiation</span></td><td> </td><td class="rblock">      The initiator can negotiate <span class="insert">a specific negotiation objective</span> with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      counterpart <span class="delete">ASAs, which may be different according to the specific</span></td><td> </td><td class="rblock">      relevant counterpart <span class="insert">ASAs.</span>  It can request relevant information</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      negotiation objective.</span>  It can request relevant information from</td><td> </td><td class="rblock">      from <span class="insert">a</span> counterpart so that it can <span class="insert">coordinate</span> its local</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">the negotiation</span> counterpart so that it can <span class="delete">decide</span> its local</td><td> </td><td class="rblock">      <span class="insert">configuration.</span>  It can request the counterpart to make a matching</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">configuration to give the most coordinated performance.</span>  It can</td><td> </td><td class="rblock">      <span class="insert">configuration.</span>  It can request simulation or forecast results by</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      request the <span class="delete">negotiation</span> counterpart to make a matching</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">configuration in order to set up a successful communication with</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      it.</span>  It can request <span class="delete">certain</span> simulation or forecast results by</td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      sending some dry run conditions.</td><td> </td><td class="right">      sending some dry run conditions.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Beyond the traditional yes/no answer, the responder can reply with</td><td> </td><td class="right">      Beyond the traditional yes/no answer, the responder can reply with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      a suggested alternative value for the objective concerned.  This</td><td> </td><td class="right">      a suggested alternative value for the objective concerned.  This</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      would start a bi-directional negotiation ending in a compromise</td><td> </td><td class="right">      would start a bi-directional negotiation ending in a compromise</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      between the two ASAs.</td><td> </td><td class="right">      between the two ASAs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Convergence of negotiation procedures</td><td> </td><td class="right">   o  Convergence of negotiation procedures</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0034"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      To enable convergence, when a responder <span class="delete">makes</span> a <span class="delete">suggestion of a</span></td><td> </td><td class="rblock">      To enable convergence, when a responder <span class="insert">suggests</span> a <span class="insert">new value or</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      changed</span> condition in a <span class="delete">negative</span> reply, it should be as close as</td><td> </td><td class="rblock">      condition in a <span class="insert">negotiation step</span> reply, it should be as close as</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      possible to the original request or previous suggestion.  The</td><td> </td><td class="right">      possible to the original request or previous suggestion.  The</td><td class="lineno"></td></tr>
      <tr id="diff0035"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      suggested value of <span class="delete">the third or</span> later negotiation steps should be</td><td> </td><td class="rblock">      suggested value of later negotiation steps should be chosen</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      chosen between the suggested values from the <span class="delete">last</span> two <span class="delete">negotiation</span></td><td> </td><td class="rblock">      between the suggested values from the <span class="insert">previous</span> two steps.  <span class="insert">GRASP</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      steps.  <span class="delete">In any case there must be a mechanism</span> to guarantee</td><td> </td><td class="rblock"><span class="insert">      provides mechanisms</span> to guarantee convergence (or failure) in a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      convergence (or failure) in a small number of steps, <span class="delete">such as</span> a</td><td> </td><td class="rblock">      small number of steps, <span class="insert">i.e.</span> a timeout <span class="insert">and a</span> maximum number of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      timeout <span class="delete">or</span> maximum number of iterations.</td><td> </td><td class="rblock">      iterations.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">                                                                         </td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">*  End of negotiation</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete"></span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         A limited number of rounds, for example three, or a timeout, is</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         needed on each ASA for each negotiation objective.  It may be</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         an implementation choice, a pre-configurable parameter, or</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         network Intent.  These choices might vary between different</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         types of ASA.  Therefore, the definition of each negotiation</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         objective MUST clearly specify this, so that the negotiation</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         can always be terminated properly.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete"></span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      *  Failed negotiation</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete"></span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         There must be a well-defined procedure for concluding that a</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         negotiation cannot succeed, and if so deciding what happens</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         next (deadlock resolution, tie-breaking, or revert to best-</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         effort service).  Again, this MUST be specified for individual</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         negotiation objectives, as an implementation choice, a pre-</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">         configurable parameter, or network Intent.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Extensibility</td><td> </td><td class="right">   o  Extensibility</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      GRASP does not have a version number.  In most cases new semantics</td><td> </td><td class="right">      GRASP does not have a version number.  In most cases new semantics</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      will be added by defining new synchronization or negotiation</td><td> </td><td class="right">      will be added by defining new synchronization or negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      objectives.  However, the protocol could be extended by adding new</td><td> </td><td class="right">      objectives.  However, the protocol could be extended by adding new</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      message types and options in future.</td><td> </td><td class="right">      message types and options in future.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.4.  Quick Operating Overview</td><td> </td><td class="right">3.4.  Quick Operating Overview</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-9" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-9"><em> page 17, line 12<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-9"><em> page 16, line 39<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">      turn.  Two other functions support negotiating steps (M_WAIT,</td><td> </td><td class="right">      turn.  Two other functions support negotiating steps (M_WAIT,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      M_END).</td><td> </td><td class="right">      M_END).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A synchronization mechanism (M_REQ_SYN), by which an ASA can</td><td> </td><td class="right">   o  A synchronization mechanism (M_REQ_SYN), by which an ASA can</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      request the current value of an objective from a counterpart ASA.</td><td> </td><td class="right">      request the current value of an objective from a counterpart ASA.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      With this, there is a corresponding response function (M_SYNCH)</td><td> </td><td class="right">      With this, there is a corresponding response function (M_SYNCH)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      for an ASA that wishes to respond to synchronization requests.</td><td> </td><td class="right">      for an ASA that wishes to respond to synchronization requests.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A flood mechanism (M_FLOOD), by which an ASA can cause the current</td><td> </td><td class="right">   o  A flood mechanism (M_FLOOD), by which an ASA can cause the current</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      value of an objective to be flooded throughout the AN so that any</td><td> </td><td class="right">      value of an objective to be flooded throughout the AN so that any</td><td class="lineno"></td></tr>
      <tr id="diff0036"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      ASA can receive it.</td><td> </td><td class="rblock">      ASA can receive it.  <span class="insert">One application of this is to act as an</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      announcement, avoiding the need for discovery of a widely</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      applicable objective.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Some example messages and simple message flows are provided in</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Appendix D.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.  GRASP Protocol Basic Properties and Mechanisms</td><td> </td><td class="right">3.5.  GRASP Protocol Basic Properties and Mechanisms</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.1.  Required External Security Mechanism</td><td> </td><td class="right">3.5.1.  Required External Security Mechanism</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0037"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   The protocol SHOULD run within a secure Autonomic Control Plane (ACP)</td><td> </td><td class="rblock">   The protocol SHOULD <span class="insert">always</span> run within a secure Autonomic Control</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   [I-D.ietf-anima-autonomic-control-plane].  The ACP is assumed to</td><td> </td><td class="rblock">   Plane (ACP) [I-D.ietf-anima-autonomic-control-plane].  The ACP is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   carry all messages securely, including link-local multicast if</td><td> </td><td class="rblock">   assumed to carry all messages securely, including link-local</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   possible.  A GRASP implementation MUST verify whether the ACP is</td><td> </td><td class="rblock">   multicast if possible.  A GRASP implementation MUST verify whether</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   operational.</td><td> </td><td class="rblock">   the ACP is operational.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   If there is no ACP, the protocol MUST use another form of strong</td><td> </td><td class="right">   If there is no ACP, the protocol MUST use another form of strong</td><td class="lineno"></td></tr>
      <tr id="diff0038"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   authentication and SHOULD use a form of strong encryption.  <span class="delete">TLS</span></td><td> </td><td class="rblock">   authentication and SHOULD use a form of strong encryption.  <span class="insert">See</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   [RFC5246] is RECOMMENDED</span> for <span class="delete">this purpose, based on a local Public</span></td><td> </td><td class="rblock"><span class="insert">   Section 3.5.2.1</span> for <span class="insert">further discussion.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   Key Infrastructure (PKI) [RFC5280] managed within the autonomic</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   network itself.  The details of such a PKI and how its boundary is</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   established are out of scope for this document.  DTLS [RFC6347] MAY</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   be used but since GRASP operations usually involve several messages</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   this is not expected to be advantageous.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0039"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   The ACP, or in its absence <span class="delete">the local PKI,</span> sets the boundary within</td><td> </td><td class="rblock">   The ACP, or in its absence <span class="insert">another security mechanism,</span> sets the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   which nodes are trusted as GRASP peers.  A GRASP implementation MUST</td><td> </td><td class="rblock">   boundary within which nodes are trusted as GRASP peers.  A GRASP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   refuse to execute GRASP synchronization and negotiation functions if</td><td> </td><td class="rblock">   implementation MUST refuse to execute GRASP synchronization and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   there is neither an operational ACP nor <span class="delete">an operational TLS or DTLS</span></td><td> </td><td class="rblock">   negotiation functions if there is neither an operational ACP nor</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   environment.</td><td> </td><td class="rblock">   <span class="insert">another secure</span> environment.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Link-local multicast is used for discovery messages.  Responses to</td><td> </td><td class="right">   Link-local multicast is used for discovery messages.  Responses to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discovery messages MUST be secured, with one exception mentioned in</td><td> </td><td class="right">   discovery messages MUST be secured, with one exception mentioned in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the next section.</td><td> </td><td class="right">   the next section.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0040"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">3.5.2.  <span class="delete">Limited Security</span> Instances</td><td> </td><td class="rblock">3.5.2.  <span class="insert">Constrained</span> Instances</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This section describes three cases where additional instances of</td><td> </td><td class="right">   This section describes three cases where additional instances of</td><td class="lineno"></td></tr>
      <tr id="diff0041"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   GRASP are appropriate.</td><td> </td><td class="rblock">   GRASP <span class="insert">subject to certain constraints </span>are appropriate.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0042"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">1) As mentioned in Section 3.3, some GRASP operations might be</span></td><td> </td><td class="rblock"><span class="insert">3.5.2.1.  No ACP</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   performed across an administrative domain boundary by mutual</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   agreement.  Such operations MUST be confined to a separate instance</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   of GRASP with its own copy of all GRASP data structures.  Messages</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   MUST be authenticated and SHOULD be encrypted.  TLS is RECOMMENDED</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   for this purpose.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0043"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">2) During initialisation, before a node has joined</span> the <span class="delete">applicable</span></td><td> </td><td class="rblock">   <span class="insert">As mentioned in Section 3.3, some GRASP operations might be performed</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   trust infrastructure, [I-D.ietf-anima-bootstrapping-keyinfra], it is</span></td><td> </td><td class="rblock"><span class="insert">   across an administrative domain boundary by mutual agreement, without</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   impossible</span> to <span class="delete">secure messages.  Thus, the security bootstrap process</span></td><td> </td><td class="rblock">   the <span class="insert">benefit of an ACP.  Such operations MUST be confined</span> to <span class="insert">a</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   needs</span> to use insecure GRASP discovery, response and flood <span class="delete">messages.</span></td><td> </td><td class="rblock"><span class="insert">   separate instance of GRASP with its own copy of all GRASP data</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Such usage MUST be limited to link-local operations and MUST be</td><td> </td><td class="rblock"><span class="insert">   structures.  Messages MUST be authenticated and SHOULD be encrypted.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   confined to a separate insecure instance of GRASP with its own copy</td><td> </td><td class="rblock"><span class="insert">   TLS [RFC5246] and DTLS [RFC6347] based on a Public Key Infrastructure</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   of all GRASP data structures.  This instance is nicknamed DULL -</td><td> </td><td class="rblock"><span class="insert">   (PKI) [RFC5280] are RECOMMENDED for this purpose.  Further details</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Discovery Unsolicited <span class="delete">Link Local.</span></td><td> </td><td class="rblock"><span class="insert">   are out of scope for this document.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">3.5.2.2.  Discovery Unsolicited Link-Local</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Some services may need</span> to use insecure GRASP discovery, response and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   flood <span class="insert">messages without being able to use pre-existing security</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   associations.  This includes discovery of candidate ACP neighbors</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   [I-D.ietf-anima-autonomic-control-plane]], discovery of bootstrap</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   proxies [I-D.ietf-anima-bootstrapping-keyinfra] or perhaps</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   initialisation services in networks using GRASP without being fully</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   autonomic (e.g., no ACP).</span>  Such usage MUST be limited to link-local</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   operations and MUST be confined to a separate insecure instance of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   GRASP with its own copy of all GRASP data structures.  This instance</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   is nicknamed DULL - Discovery Unsolicited <span class="insert">Link-Local.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The detailed rules for the DULL instance of GRASP are as follows:</td><td> </td><td class="right">   The detailed rules for the DULL instance of GRASP are as follows:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  An initiator MUST only send Discovery or Flood Synchronization</td><td> </td><td class="right">   o  An initiator MUST only send Discovery or Flood Synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      link-local multicast messages with a loop count of 1.  A responder</td><td> </td><td class="right">      link-local multicast messages with a loop count of 1.  A responder</td><td class="lineno"></td></tr>
      <tr id="diff0044"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">MAY</span> send a Discovery Response <span class="delete">message.</span>  Other GRASP message types</td><td> </td><td class="rblock">      <span class="insert">SHOULD NOT</span> send a Discovery Response <span class="insert">message unless it cannot be</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      MUST NOT be sent.</td><td> </td><td class="rblock"><span class="insert">      avoided.</span>  Other GRASP message types MUST NOT be sent.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A responder MUST silently discard any message whose loop count is</td><td> </td><td class="right">   o  A responder MUST silently discard any message whose loop count is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      not 1.</td><td> </td><td class="right">      not 1.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A responder MUST silently discard any message referring to a GRASP</td><td> </td><td class="right">   o  A responder MUST silently discard any message referring to a GRASP</td><td class="lineno"></td></tr>
      <tr id="diff0045"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      Objective that is not directly part of <span class="delete">the bootstrap creation</span></td><td> </td><td class="rblock">      Objective that is not directly part of <span class="insert">a service that requires</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">      process.</span></td><td> </td><td class="rblock"><span class="insert">      this insecure mode.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A responder MUST NOT relay any multicast messages.</td><td> </td><td class="right">   o  A responder MUST NOT relay any multicast messages.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A Discovery Response MUST indicate a link-local address.</td><td> </td><td class="right">   o  A Discovery Response MUST indicate a link-local address.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A Discovery Response MUST NOT include a Divert option.</td><td> </td><td class="right">   o  A Discovery Response MUST NOT include a Divert option.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  A node MUST silently discard any message whose source address is</td><td> </td><td class="right">   o  A node MUST silently discard any message whose source address is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      not link-local.</td><td> </td><td class="right">      not link-local.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0046"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">3)</span> During ACP formation [I-D.ietf-anima-autonomic-control-plane], a</td><td> </td><td class="rblock"><span class="insert">3.5.2.3.  Secure Only Neighbor Negotiation</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   During ACP formation [I-D.ietf-anima-autonomic-control-plane], a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   separate instance of GRASP is used, with unicast messages secured by</td><td> </td><td class="right">   separate instance of GRASP is used, with unicast messages secured by</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   TLS, and with its own copy of all GRASP data structures.  This</td><td> </td><td class="right">   TLS, and with its own copy of all GRASP data structures.  This</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   instance is nicknamed SONN - Secure Only Neighbor Negotiation.</td><td> </td><td class="right">   instance is nicknamed SONN - Secure Only Neighbor Negotiation.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The detailed rules for the SONN instance of GRASP are as follows:</td><td> </td><td class="right">   The detailed rules for the SONN instance of GRASP are as follows:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Any type of GRASP message MAY be sent.</td><td> </td><td class="right">   o  Any type of GRASP message MAY be sent.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  An initiator MUST send any Discovery or Flood Synchronization</td><td> </td><td class="right">   o  An initiator MUST send any Discovery or Flood Synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      link-local multicast messages with a loop count of 1.</td><td> </td><td class="right">      link-local multicast messages with a loop count of 1.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-10" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-10"><em> page 19, line 43<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-10"><em> page 19, line 31<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Nevertheless, when running within a secure ACP on reliable</td><td> </td><td class="right">   Nevertheless, when running within a secure ACP on reliable</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   infrastructure, UDP MAY be used for unicast messages not exceeding</td><td> </td><td class="right">   infrastructure, UDP MAY be used for unicast messages not exceeding</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the minimum IPv6 path MTU; however, TCP MUST be used for longer</td><td> </td><td class="right">   the minimum IPv6 path MTU; however, TCP MUST be used for longer</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   messages.  In other words, IPv6 fragmentation is avoided.  If a node</td><td> </td><td class="right">   messages.  In other words, IPv6 fragmentation is avoided.  If a node</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   receives a UDP message but the reply is too long, it MUST open a TCP</td><td> </td><td class="right">   receives a UDP message but the reply is too long, it MUST open a TCP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   connection to the peer for the reply.  Note that when the network is</td><td> </td><td class="right">   connection to the peer for the reply.  Note that when the network is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   under heavy load or in a fault condition, UDP might become</td><td> </td><td class="right">   under heavy load or in a fault condition, UDP might become</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unreliable.  Since this is when autonomic functions are most</td><td> </td><td class="right">   unreliable.  Since this is when autonomic functions are most</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   necessary, automatic fallback to TCP MUST be implemented.  The</td><td> </td><td class="right">   necessary, automatic fallback to TCP MUST be implemented.  The</td><td class="lineno"></td></tr>
      <tr id="diff0047"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   simplest implementation is therefore to use only TCP.  <span class="delete">In particular,</span></td><td> </td><td class="rblock">   simplest implementation is therefore to use only TCP.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   to guarantee interoperability during bootstrap and startup, using TCP</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   for discovery responses is strongly advised.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0048"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">When</span> running without an ACP, <span class="delete">TLS MUST be supported and used by</span></td><td> </td><td class="rblock">   <span class="insert">For considerations when</span> running without an ACP, <span class="insert">see Section 3.5.2.1.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   default, except for link-local multicast messages.  DTLS MAY be</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   supported as an alternative but the details are out of scope for this</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   document.  Transport protocols other than TCP and UDP are also out of</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   scope for this document.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For link-local multicast, the GRASP protocol listens to the well-</td><td> </td><td class="right">   For link-local multicast, the GRASP protocol listens to the well-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   known GRASP Listen Port (Section 3.6).  For unicast transport</td><td> </td><td class="right">   known GRASP Listen Port (Section 3.6).  For unicast transport</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   sessions used for discovery responses, synchronization and</td><td> </td><td class="right">   sessions used for discovery responses, synchronization and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   negotiation, the ASA concerned normally listens on its own</td><td> </td><td class="right">   negotiation, the ASA concerned normally listens on its own</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   dynamically assigned ports, which are communicated to its peers</td><td> </td><td class="right">   dynamically assigned ports, which are communicated to its peers</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   during discovery.  However, a minimal implementation MAY use the</td><td> </td><td class="right">   during discovery.  However, a minimal implementation MAY use the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP Listen Port for this purpose.</td><td> </td><td class="right">   GRASP Listen Port for this purpose.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.4.  Discovery Mechanism and Procedures</td><td> </td><td class="right">3.5.4.  Discovery Mechanism and Procedures</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-11" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-11"><em> page 20, line 48<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-11"><em> page 20, line 30<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   subsequent negotiation or synchronization action.  In this case, the</td><td> </td><td class="right">   subsequent negotiation or synchronization action.  In this case, the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discovered objective is simply used as a name during the discovery</td><td> </td><td class="right">   discovered objective is simply used as a name during the discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   process and any subsequent operations between the peers are outside</td><td> </td><td class="right">   process and any subsequent operations between the peers are outside</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the scope of GRASP.</td><td> </td><td class="right">   the scope of GRASP.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.4.2.  Discovery Overview</td><td> </td><td class="right">3.5.4.2.  Discovery Overview</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A complete discovery process will start with a multicast on the local</td><td> </td><td class="right">   A complete discovery process will start with a multicast on the local</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   link.  On-link neighbors supporting the discovery objective will</td><td> </td><td class="right">   link.  On-link neighbors supporting the discovery objective will</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   respond directly.  A neighbor with multiple interfaces will respond</td><td> </td><td class="right">   respond directly.  A neighbor with multiple interfaces will respond</td><td class="lineno"></td></tr>
      <tr id="diff0049"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   with a cached discovery response if any.  If <span class="delete">not,</span> it will relay the</td><td> </td><td class="rblock">   with a cached discovery response if any.  <span class="insert">However, it SHOULD NOT</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   discovery on its other interfaces, for example reaching a <span class="delete">higher-</span></td><td> </td><td class="rblock"><span class="insert">   respond with a cached response on an interface if it learnt that</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   level</span> gateway in a hierarchical network.  If a node receiving the</td><td> </td><td class="rblock"><span class="insert">   information from the same interface.</span>  If <span class="insert">it has no cached response,</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   relayed discovery supports the discovery objective, it will respond</td><td> </td><td class="rblock">   it will relay the discovery on its other interfaces, for example</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   to the relayed discovery.  If it has a cached response, it will</td><td> </td><td class="rblock">   reaching a <span class="insert">higher-level</span> gateway in a hierarchical network.  If a node</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   respond with that.  If not, it will repeat the discovery process,</td><td> </td><td class="rblock">   receiving the relayed discovery supports the discovery objective, it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   which thereby becomes recursive.  The loop count and timeout will</td><td> </td><td class="rblock">   will respond to the relayed discovery.  If it has a cached response,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   ensure that the process ends.</td><td> </td><td class="rblock">   it will respond with that.  If not, it will repeat the discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   process, which thereby becomes recursive.  The loop count and timeout</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   will ensure that the process ends.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0050"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Exceptionally, a Discovery message MAY be sent unicast to a peer</td><td> </td><td class="rblock">   Exceptionally, a Discovery message MAY be sent unicast <span class="insert">(via UDP or</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   node, which will then proceed exactly as if the message had been</td><td> </td><td class="rblock"><span class="insert">   TCP)</span> to a peer node, which will then proceed exactly as if the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">multicast.</span>  However, this mode does not guarantee successful</td><td> </td><td class="rblock">   message had been <span class="insert">multicast, except that when TCP is used, the</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   discovery in the general case.</td><td> </td><td class="rblock"><span class="insert">   response will be on the same socket as the query.</span>  However, this mode</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   does not guarantee successful discovery in the general case.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.4.3.  Discovery Procedures</td><td> </td><td class="right">3.5.4.3.  Discovery Procedures</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Discovery starts as an on-link operation.  The Divert option can tell</td><td> </td><td class="right">   Discovery starts as an on-link operation.  The Divert option can tell</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the discovery initiator to contact an off-link ASA for that discovery</td><td> </td><td class="right">   the discovery initiator to contact an off-link ASA for that discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objective.  Every Discovery message is sent by a discovery initiator</td><td> </td><td class="right">   objective.  Every Discovery message is sent by a discovery initiator</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   via UDP to the ALL_GRASP_NEIGHBOR link-local multicast address</td><td> </td><td class="right">   via UDP to the ALL_GRASP_NEIGHBOR link-local multicast address</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (Section 3.6).  Every network device that supports GRASP always</td><td> </td><td class="right">   (Section 3.6).  Every network device that supports GRASP always</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   listens to a well-known UDP port to capture the discovery messages.</td><td> </td><td class="right">   listens to a well-known UDP port to capture the discovery messages.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Because this port is unique in a device, this is a function of the</td><td> </td><td class="right">   Because this port is unique in a device, this is a function of the</td><td class="lineno"></td></tr>
      <tr id="diff0051"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   GRASP <span class="delete">kernel</span> and not of an individual ASA.  As a result, each ASA</td><td> </td><td class="rblock">   GRASP <span class="insert">core</span> and not of an individual ASA.  As a result, each ASA will</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   will need to register the objectives that it supports with the GRASP</td><td> </td><td class="rblock">   need to register the objectives that it supports with the GRASP <span class="insert">core.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">kernel.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   If an ASA in a neighbor device supports the requested discovery</td><td> </td><td class="right">   If an ASA in a neighbor device supports the requested discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objective, the device SHOULD respond to the link-local multicast with</td><td> </td><td class="right">   objective, the device SHOULD respond to the link-local multicast with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   a unicast Discovery Response message (Section 3.8.5) with locator</td><td> </td><td class="right">   a unicast Discovery Response message (Section 3.8.5) with locator</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   option(s), unless it is temporarily unavailable.  Otherwise, if the</td><td> </td><td class="right">   option(s), unless it is temporarily unavailable.  Otherwise, if the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   neighbor has cached information about an ASA that supports the</td><td> </td><td class="right">   neighbor has cached information about an ASA that supports the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   requested discovery objective (usually because it discovered the same</td><td> </td><td class="right">   requested discovery objective (usually because it discovered the same</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objective before), it SHOULD respond with a Discovery Response</td><td> </td><td class="right">   objective before), it SHOULD respond with a Discovery Response</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   message with a Divert option pointing to the appropriate Discovery</td><td> </td><td class="right">   message with a Divert option pointing to the appropriate Discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Responder.</td><td> </td><td class="right">   Responder.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-12" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-12"><em> page 22, line 49<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-12"><em> page 22, line 33<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   and MUST NOT perform discovery relaying.</td><td> </td><td class="right">   and MUST NOT perform discovery relaying.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   If a relaying instance receives a Discovery message on a given</td><td> </td><td class="right">   If a relaying instance receives a Discovery message on a given</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   interface for a specific objective that it does not support and for</td><td> </td><td class="right">   interface for a specific objective that it does not support and for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   which it has not previously cached a Discovery Responder, it MUST</td><td> </td><td class="right">   which it has not previously cached a Discovery Responder, it MUST</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   relay the query by re-issuing a Discovery message as a link-local</td><td> </td><td class="right">   relay the query by re-issuing a Discovery message as a link-local</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   multicast on its other interfaces.</td><td> </td><td class="right">   multicast on its other interfaces.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The relayed discovery message MUST have the same Session ID as the</td><td> </td><td class="right">   The relayed discovery message MUST have the same Session ID as the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   incoming discovery message and MUST be tagged with the IP address of</td><td> </td><td class="right">   incoming discovery message and MUST be tagged with the IP address of</td><td class="lineno"></td></tr>
      <tr id="diff0052"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   its original initiator (see Section 3.8.4).  Since the relay device</td><td> </td><td class="rblock">   its original initiator (see Section 3.8.4).  <span class="insert">Note that this initiator</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   is unaware of the timeout set by the original initiator it SHOULD set</td><td> </td><td class="rblock"><span class="insert">   address is only used to allow for disambiguation of the Session ID</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   a timeout at least equal to GRASP_DEF_TIMEOUT milliseconds.</td><td> </td><td class="rblock"><span class="insert">   and is never used to address Response packets.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   Since the relay device is unaware of the timeout set by the original</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   initiator it SHOULD set a timeout at least equal to GRASP_DEF_TIMEOUT</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   milliseconds.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The relaying instance MUST decrement the loop count within the</td><td> </td><td class="right">   The relaying instance MUST decrement the loop count within the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objective, and MUST NOT relay the Discovery message if the result is</td><td> </td><td class="right">   objective, and MUST NOT relay the Discovery message if the result is</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   zero.  Also, it MUST limit the total rate at which it relays</td><td> </td><td class="right">   zero.  Also, it MUST limit the total rate at which it relays</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discovery messages to a reasonable value, in order to mitigate</td><td> </td><td class="right">   discovery messages to a reasonable value, in order to mitigate</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   possible denial of service attacks.  It MUST cache the Session ID</td><td> </td><td class="right">   possible denial of service attacks.  It MUST cache the Session ID</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   value and initiator address of each relayed Discovery message until</td><td> </td><td class="right">   value and initiator address of each relayed Discovery message until</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   any Discovery Responses have arrived or the discovery process has</td><td> </td><td class="right">   any Discovery Responses have arrived or the discovery process has</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   timed out.  To prevent loops, it MUST NOT relay a Discovery message</td><td> </td><td class="right">   timed out.  To prevent loops, it MUST NOT relay a Discovery message</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   which carries a given cached Session ID and initiator address more</td><td> </td><td class="right">   which carries a given cached Session ID and initiator address more</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-13" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-13"><em> page 24, line 32<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-13"><em> page 24, line 22<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Some configuration actions, for example wavelength switching in</td><td> </td><td class="right">   Some configuration actions, for example wavelength switching in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   optical networks, might take considerable time to execute.  The ASA</td><td> </td><td class="right">   optical networks, might take considerable time to execute.  The ASA</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   concerned needs to allow for this by design, but GRASP does allow for</td><td> </td><td class="right">   concerned needs to allow for this by design, but GRASP does allow for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   a peer to insert latency in a negotiation process if necessary</td><td> </td><td class="right">   a peer to insert latency in a negotiation process if necessary</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   (Section 3.8.9).</td><td> </td><td class="right">   (Section 3.8.9).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.5.1.  Rapid Mode (Discovery/Negotiation Linkage)</td><td> </td><td class="right">3.5.5.1.  Rapid Mode (Discovery/Negotiation Linkage)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A Discovery message MAY include a Negotiation Objective option.  In</td><td> </td><td class="right">   A Discovery message MAY include a Negotiation Objective option.  In</td><td class="lineno"></td></tr>
      <tr id="diff0053"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   this case the <span class="delete">Discovery message also acts</span> as <span class="delete">a Request</span> Negotiation</td><td> </td><td class="rblock">   this case <span class="insert">it is as if</span> the <span class="insert">initiator sent the sequence M_DISCOVERY,</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">message to indicate</span> to the <span class="delete">Discovery Responder</span> that it <span class="delete">could directly</span></td><td> </td><td class="rblock"><span class="insert">   immediately followed by M_REQ_NEG.  This has implications for the</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   reply to</span> the <span class="delete">Discovery Initiator with</span> a Negotiation message <span class="delete">for rapid</span></td><td> </td><td class="rblock"><span class="insert">   construction of the GRASP core,</span> as <span class="insert">it must carefully pass the</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   processing,</span> if it <span class="delete">could act as</span> the <span class="delete">corresponding negotiation</span></td><td> </td><td class="rblock"><span class="insert">   contents of the</span> Negotiation <span class="insert">Objective option</span> to the <span class="insert">ASA so</span> that it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   counterpart.</span>  However, the <span class="delete">indication is only advisory</span> not</td><td> </td><td class="rblock">   <span class="insert">may evaluate</span> the <span class="insert">objective directly.  When</span> a Negotiation <span class="insert">Objective</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">prescriptive.</span></td><td> </td><td class="rblock"><span class="insert">   option is present the ASA replies with an M_NEGOTIATE</span> message <span class="insert">(or</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   M_END</span> if it <span class="insert">is immediately satisfied with</span> the <span class="insert">proposal), rather than</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   with an M_RESPONSE.</span>  However, <span class="insert">if</span> the <span class="insert">recipient node does</span> not <span class="insert">support</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   rapid mode, discovery will continue normally.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   It is possible that a Discovery Response will arrive from a responder</td><td> </td><td class="right">   It is possible that a Discovery Response will arrive from a responder</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that does not support rapid mode, before such a Negotiation message</td><td> </td><td class="right">   that does not support rapid mode, before such a Negotiation message</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   arrives.  In this case, rapid mode will not occur.</td><td> </td><td class="right">   arrives.  In this case, rapid mode will not occur.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This rapid mode could reduce the interactions between nodes so that a</td><td> </td><td class="right">   This rapid mode could reduce the interactions between nodes so that a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   higher efficiency could be achieved.  However, a network in which</td><td> </td><td class="right">   higher efficiency could be achieved.  However, a network in which</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   some nodes support rapid mode and others do not will have complex</td><td> </td><td class="right">   some nodes support rapid mode and others do not will have complex</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   timing-dependent behaviors.  Therefore, the rapid negotiation</td><td> </td><td class="right">   timing-dependent behaviors.  Therefore, the rapid negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   function SHOULD be configured off by default and MAY be configured on</td><td> </td><td class="right">   function SHOULD be configured off by default and MAY be configured on</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-14" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-14"><em> page 25, line 32<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-14"><em> page 25, line 21<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   concerns only one synchronization objective.  For large groups of</td><td> </td><td class="right">   concerns only one synchronization objective.  For large groups of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   nodes requiring the same data, synchronization flooding is available.</td><td> </td><td class="right">   nodes requiring the same data, synchronization flooding is available.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   For this, a flooding initiator MAY send an unsolicited Flood</td><td> </td><td class="right">   For this, a flooding initiator MAY send an unsolicited Flood</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Synchronization message containing one or more Synchronization</td><td> </td><td class="right">   Synchronization message containing one or more Synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Objective option(s), if and only if the specification of those</td><td> </td><td class="right">   Objective option(s), if and only if the specification of those</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objectives permits it.  This is sent as a multicast message to the</td><td> </td><td class="right">   objectives permits it.  This is sent as a multicast message to the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ALL_GRASP_NEIGHBOR multicast address (Section 3.6).</td><td> </td><td class="right">   ALL_GRASP_NEIGHBOR multicast address (Section 3.6).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Every network device that supports GRASP always listens to a well-</td><td> </td><td class="right">   Every network device that supports GRASP always listens to a well-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   known UDP port to capture flooding messages.  Because this port is</td><td> </td><td class="right">   known UDP port to capture flooding messages.  Because this port is</td><td class="lineno"></td></tr>
      <tr id="diff0054"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   unique in a device, this is a function of the GRASP <span class="delete">kernel</span>.</td><td> </td><td class="rblock">   unique in a device, this is a function of the GRASP <span class="insert">core</span>.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   To ensure that flooding does not result in a loop, the originator of</td><td> </td><td class="right">   To ensure that flooding does not result in a loop, the originator of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the Flood Synchronization message MUST set the loop count in the</td><td> </td><td class="right">   the Flood Synchronization message MUST set the loop count in the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objectives to a suitable value (the default is GRASP_DEF_LOOPCT).</td><td> </td><td class="right">   objectives to a suitable value (the default is GRASP_DEF_LOOPCT).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Also, a suitable mechanism is needed to avoid excessive multicast</td><td> </td><td class="right">   Also, a suitable mechanism is needed to avoid excessive multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   traffic.  This mechanism MUST be defined as part of the specification</td><td> </td><td class="right">   traffic.  This mechanism MUST be defined as part of the specification</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   of the synchronization objective(s) concerned.  It might be a simple</td><td> </td><td class="right">   of the synchronization objective(s) concerned.  It might be a simple</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   rate limit or a more complex mechanism such as the Trickle algorithm</td><td> </td><td class="right">   rate limit or a more complex mechanism such as the Trickle algorithm</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC6206].</td><td> </td><td class="right">   [RFC6206].</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A GRASP device with multiple link-layer interfaces (typically a</td><td> </td><td class="right">   A GRASP device with multiple link-layer interfaces (typically a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   router) MUST support synchronization flooding on all interfaces.  If</td><td> </td><td class="right">   router) MUST support synchronization flooding on all interfaces.  If</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   it receives a multicast Flood Synchronization message on a given</td><td> </td><td class="right">   it receives a multicast Flood Synchronization message on a given</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   interface, it MUST relay it by re-issuing a Flood Synchronization</td><td> </td><td class="right">   interface, it MUST relay it by re-issuing a Flood Synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   message on its other interfaces.  The relayed message MUST have the</td><td> </td><td class="right">   message on its other interfaces.  The relayed message MUST have the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   same Session ID as the incoming message and MUST be tagged with the</td><td> </td><td class="right">   same Session ID as the incoming message and MUST be tagged with the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   IP address of its original initiator.</td><td> </td><td class="right">   IP address of its original initiator.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0055"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">Link-layer Flooding is supported by GRASP by setting the loop count</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   to 1, and sending with a link-local source address.  Floods with</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   link-local source addresses and a loop count other than 1 are</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   invalid, and such messages MUST be discarded.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The relaying device MUST decrement the loop count within the first</td><td> </td><td class="right">   The relaying device MUST decrement the loop count within the first</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objective, and MUST NOT relay the Flood Synchronization message if</td><td> </td><td class="right">   objective, and MUST NOT relay the Flood Synchronization message if</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the result is zero.  Also, it MUST limit the total rate at which it</td><td> </td><td class="right">   the result is zero.  Also, it MUST limit the total rate at which it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   relays Flood Synchronization messages to a reasonable value, in order</td><td> </td><td class="right">   relays Flood Synchronization messages to a reasonable value, in order</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   to mitigate possible denial of service attacks.  It MUST cache the</td><td> </td><td class="right">   to mitigate possible denial of service attacks.  It MUST cache the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Session ID value and initiator address of each relayed Flood</td><td> </td><td class="right">   Session ID value and initiator address of each relayed Flood</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Synchronization message for a finite time not less than twice</td><td> </td><td class="right">   Synchronization message for a finite time not less than twice</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP_DEF_TIMEOUT milliseconds.  To prevent loops, it MUST NOT relay</td><td> </td><td class="right">   GRASP_DEF_TIMEOUT milliseconds.  To prevent loops, it MUST NOT relay</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   a Flood Synchronization message which carries a given cached Session</td><td> </td><td class="right">   a Flood Synchronization message which carries a given cached Session</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ID and initiator address more than once.  These precautions avoid</td><td> </td><td class="right">   ID and initiator address more than once.  These precautions avoid</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-15" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-15"><em> page 26, line 39<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-15"><em> page 26, line 34<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   the recipient ASA.</td><td> </td><td class="right">   the recipient ASA.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.5.6.2.  Rapid Mode (Discovery/Synchronization Linkage)</td><td> </td><td class="right">3.5.6.2.  Rapid Mode (Discovery/Synchronization Linkage)</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A Discovery message MAY include a Synchronization Objective option.</td><td> </td><td class="right">   A Discovery message MAY include a Synchronization Objective option.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In this case the Discovery message also acts as a Request</td><td> </td><td class="right">   In this case the Discovery message also acts as a Request</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Synchronization message to indicate to the Discovery Responder that</td><td> </td><td class="right">   Synchronization message to indicate to the Discovery Responder that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   it could directly reply to the Discovery Initiator with a</td><td> </td><td class="right">   it could directly reply to the Discovery Initiator with a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Synchronization message Section 3.8.10 with synchronization data for</td><td> </td><td class="right">   Synchronization message Section 3.8.10 with synchronization data for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   rapid processing, if the discovery target supports the corresponding</td><td> </td><td class="right">   rapid processing, if the discovery target supports the corresponding</td><td class="lineno"></td></tr>
      <tr id="diff0056"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   synchronization objective.  <span class="delete">However, the indication is only advisory</span></td><td> </td><td class="rblock">   synchronization objective.  <span class="insert">The design implications are similar to</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">   not prescriptive.</span></td><td> </td><td class="rblock"><span class="insert">   those discussed in Section 3.5.5.1.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   It is possible that a Discovery Response will arrive from a responder</td><td> </td><td class="right">   It is possible that a Discovery Response will arrive from a responder</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   that does not support rapid mode, before such a Synchronization</td><td> </td><td class="right">   that does not support rapid mode, before such a Synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   message arrives.  In this case, rapid mode will not occur.</td><td> </td><td class="right">   message arrives.  In this case, rapid mode will not occur.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   This rapid mode could reduce the interactions between nodes so that a</td><td> </td><td class="right">   This rapid mode could reduce the interactions between nodes so that a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   higher efficiency could be achieved.  However, a network in which</td><td> </td><td class="right">   higher efficiency could be achieved.  However, a network in which</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   some nodes support rapid mode and others do not will have complex</td><td> </td><td class="right">   some nodes support rapid mode and others do not will have complex</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   timing-dependent behaviors.  Therefore, the rapid synchronization</td><td> </td><td class="right">   timing-dependent behaviors.  Therefore, the rapid synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   function SHOULD be configured off by default and MAY be configured on</td><td> </td><td class="right">   function SHOULD be configured off by default and MAY be configured on</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-16" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-16"><em> page 29, line 41<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-16"><em> page 29, line 41<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   in Section 6.</td><td> </td><td class="right">   in Section 6.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.8.3.  Message Size</td><td> </td><td class="right">3.8.3.  Message Size</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP nodes MUST be able to receive messages of at least</td><td> </td><td class="right">   GRASP nodes MUST be able to receive messages of at least</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP_DEF_MAX_SIZE bytes.  GRASP nodes MUST NOT send messages longer</td><td> </td><td class="right">   GRASP_DEF_MAX_SIZE bytes.  GRASP nodes MUST NOT send messages longer</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   than GRASP_DEF_MAX_SIZE bytes unless a longer size is explicitly</td><td> </td><td class="right">   than GRASP_DEF_MAX_SIZE bytes unless a longer size is explicitly</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   allowed for the objective concerned.  For example, GRASP negotiation</td><td> </td><td class="right">   allowed for the objective concerned.  For example, GRASP negotiation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   itself could be used to agree on a longer message size.</td><td> </td><td class="right">   itself could be used to agree on a longer message size.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0057"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">The message parser used by GRASP should be configured to know about</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   the GRASP_DEF_MAX_SIZE, or any larger negotiated message size, so</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   that it may defend against overly long messages.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.8.4.  Discovery Message</td><td> </td><td class="right">3.8.4.  Discovery Message</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In fragmentary CDDL, a Discovery message follows the pattern:</td><td> </td><td class="right">   In fragmentary CDDL, a Discovery message follows the pattern:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     discovery-message = [M_DISCOVERY, session-id, initiator, objective]</td><td> </td><td class="right">     discovery-message = [M_DISCOVERY, session-id, initiator, objective]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A discovery initiator sends a Discovery message to initiate a</td><td> </td><td class="right">   A discovery initiator sends a Discovery message to initiate a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   discovery process for a particular objective option.</td><td> </td><td class="right">   discovery process for a particular objective option.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The discovery initiator sends all Discovery messages via UDP to port</td><td> </td><td class="right">   The discovery initiator sends all Discovery messages via UDP to port</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-17" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-17"><em> page 32, line 38<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-17"><em> page 32, line 43<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   synchronization has failed if there is no response before the timer</td><td> </td><td class="right">   synchronization has failed if there is no response before the timer</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   expires.</td><td> </td><td class="right">   expires.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   When an initiator sends a Request message, it MUST initialize the</td><td> </td><td class="right">   When an initiator sends a Request message, it MUST initialize the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   loop count of the objective option with a value defined in the</td><td> </td><td class="right">   loop count of the objective option with a value defined in the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   specification of the option or, if no such value is specified, with</td><td> </td><td class="right">   specification of the option or, if no such value is specified, with</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   GRASP_DEF_LOOPCT.</td><td> </td><td class="right">   GRASP_DEF_LOOPCT.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   If a node receives a Request message for an objective for which no</td><td> </td><td class="right">   If a node receives a Request message for an objective for which no</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   ASA is currently listening, it MUST immediately close the relevant</td><td> </td><td class="right">   ASA is currently listening, it MUST immediately close the relevant</td><td class="lineno"></td></tr>
      <tr id="diff0058"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   socket to indicate this to the initiator.</td><td> </td><td class="rblock">   socket to indicate this to the initiator.  <span class="insert">This is to avoid</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   unnecessary timeouts if, for example, an ASA exits prematurely but</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   the GRASP core is listening on its behalf.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   To avoid the highly unlikely race condition in which two nodes</td><td> </td><td class="right">   To avoid the highly unlikely race condition in which two nodes</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   simultaneously request sessions with each other using the same</td><td> </td><td class="right">   simultaneously request sessions with each other using the same</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Session ID (Section 3.7), when a node receives a Request message, it</td><td> </td><td class="right">   Session ID (Section 3.7), when a node receives a Request message, it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   MUST verify that the received Session ID is not already locally</td><td> </td><td class="right">   MUST verify that the received Session ID is not already locally</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   active.  In case of a clash, it MUST discard the Request message, in</td><td> </td><td class="right">   active.  In case of a clash, it MUST discard the Request message, in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   which case the initiator will detect a timeout.</td><td> </td><td class="right">   which case the initiator will detect a timeout.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.8.7.  Negotiation Message</td><td> </td><td class="right">3.8.7.  Negotiation Message</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-18" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-18"><em> page 34, line 26<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-18"><em> page 34, line 35<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">     flood-message = [M_FLOOD, session-id, initiator, ttl,</td><td> </td><td class="right">     flood-message = [M_FLOOD, session-id, initiator, ttl,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                     (locator-option / []), +objective]</td><td> </td><td class="right">                     (locator-option / []), +objective]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     ttl = 0..4294967295 ; in milliseconds</td><td> </td><td class="right">     ttl = 0..4294967295 ; in milliseconds</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   A node MAY initiate flooding by sending an unsolicited Flood</td><td> </td><td class="right">   A node MAY initiate flooding by sending an unsolicited Flood</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Synchronization Message with synchronization data.  This MAY be sent</td><td> </td><td class="right">   Synchronization Message with synchronization data.  This MAY be sent</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   to the link-local ALL_GRASP_NEIGHBOR multicast address, in accordance</td><td> </td><td class="right">   to the link-local ALL_GRASP_NEIGHBOR multicast address, in accordance</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   with the rules in Section 3.5.6.</td><td> </td><td class="right">   with the rules in Section 3.5.6.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0059"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      The initiator address is <span class="delete">provided</span> as described for Discovery</td><td> </td><td class="rblock">      The initiator address is <span class="insert">provided,</span> as described for Discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      <span class="delete">messages.</span></td><td> </td><td class="rblock">      <span class="insert">messages (Section 3.8.4), only to disambiguate the Session ID.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The message MUST contain a time-to-live (ttl) for the validity of</td><td> </td><td class="right">      The message MUST contain a time-to-live (ttl) for the validity of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      the response, given as a positive integer value in milliseconds.</td><td> </td><td class="right">      the response, given as a positive integer value in milliseconds.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      There is no default; zero indicates an indefinite lifetime.</td><td> </td><td class="right">      There is no default; zero indicates an indefinite lifetime.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The message MAY contain a locator option indicating the ASA that</td><td> </td><td class="right">      The message MAY contain a locator option indicating the ASA that</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      initiated the flooded data.  In its absence, an empty option MUST</td><td> </td><td class="right">      initiated the flooded data.  In its absence, an empty option MUST</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      be included.</td><td> </td><td class="right">      be included.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      The synchronization data are in the form of GRASP Option(s) for</td><td> </td><td class="right">      The synchronization data are in the form of GRASP Option(s) for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-19" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-19"><em> page 38, line 6<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-19"><em> page 38, line 18<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     transport-proto = IPPROTO_TCP / IPPROTO_UDP</td><td> </td><td class="right">     transport-proto = IPPROTO_TCP / IPPROTO_UDP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     IPPROTO_TCP = 6</td><td> </td><td class="right">     IPPROTO_TCP = 6</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     IPPROTO_UDP = 17</td><td> </td><td class="right">     IPPROTO_UDP = 17</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     port-number = 0..65535</td><td> </td><td class="right">     port-number = 0..65535</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The content of this option is a binary IPv6 address followed by the</td><td> </td><td class="right">   The content of this option is a binary IPv6 address followed by the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   protocol number and port number to be used.</td><td> </td><td class="right">   protocol number and port number to be used.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Note 1: The IPv6 address MUST normally have global scope.</td><td> </td><td class="right">   Note 1: The IPv6 address MUST normally have global scope.</td><td class="lineno"></td></tr>
      <tr id="diff0060"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   Exceptionally, during <span class="delete">node bootstrap,</span> a link-local address MAY be</td><td> </td><td class="rblock">   Exceptionally, during <span class="insert">initialisation,</span> a link-local address MAY be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   used for specific objectives <span class="delete">only.</span></td><td> </td><td class="rblock">   used for specific objectives <span class="insert">only (Section 3.5.2).  In this case the</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   corresponding Discovery Response message MUST be sent via the</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   interface to which the link-local address applies.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Note 2: A link-local IPv6 address MUST NOT be used when this option</td><td> </td><td class="right">   Note 2: A link-local IPv6 address MUST NOT be used when this option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   is included in a Divert option.</td><td> </td><td class="right">   is included in a Divert option.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.9.5.2.  Locator IPv4 address option</td><td> </td><td class="right">3.9.5.2.  Locator IPv4 address option</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   In fragmentary CDDL, the IPv4 address option follows the pattern:</td><td> </td><td class="right">   In fragmentary CDDL, the IPv4 address option follows the pattern:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     ipv4-locator-option = [O_IPv4_LOCATOR, ipv4-address,</td><td> </td><td class="right">     ipv4-locator-option = [O_IPv4_LOCATOR, ipv4-address,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                            transport-proto, port-number]</td><td> </td><td class="right">                            transport-proto, port-number]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-20" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-20"><em> page 42, line 25<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-20"><em> page 42, line 42<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   in Section 3.3, it is acceptable for an ASA to use an alternative</td><td> </td><td class="right">   in Section 3.3, it is acceptable for an ASA to use an alternative</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   method of discovery.</td><td> </td><td class="right">   method of discovery.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Normally, a GRASP objective will refer to specific technical</td><td> </td><td class="right">   Normally, a GRASP objective will refer to specific technical</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   parameters as explained in Section 3.1.  However, it is acceptable to</td><td> </td><td class="right">   parameters as explained in Section 3.1.  However, it is acceptable to</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   define an abstract objective for the purpose of managing or</td><td> </td><td class="right">   define an abstract objective for the purpose of managing or</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   coordinating ASAs.  It is also acceptable to define a special-purpose</td><td> </td><td class="right">   coordinating ASAs.  It is also acceptable to define a special-purpose</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   objective for purposes such as trust bootstrapping or formation of</td><td> </td><td class="right">   objective for purposes such as trust bootstrapping or formation of</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   the ACP.</td><td> </td><td class="right">   the ACP.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0061"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">To guarantee convergence, a limited number of rounds or a timeout is</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   needed for each negotiation objective.  Therefore, the definition of</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   each negotiation objective SHOULD clearly specify this, for example a</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   default loop count and timeout.  so that the negotiation can always</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   be terminated properly.  If not, the GRASP defaults will apply.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   There must be a well-defined procedure for concluding that a</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   negotiation cannot succeed, and if so deciding what happens next</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   (e.g., deadlock resolution, tie-breaking, or revert to best-effort</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   service).  This MUST be specified for individual negotiation</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   objectives.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">3.10.5.  Experimental and Example Objective Options</td><td> </td><td class="right">3.10.5.  Experimental and Example Objective Options</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The names "EX0" through "EX9" have been reserved for experimental</td><td> </td><td class="right">   The names "EX0" through "EX9" have been reserved for experimental</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   options.  Multiple names have been assigned because a single</td><td> </td><td class="right">   options.  Multiple names have been assigned because a single</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   experiment may use multiple options simultaneously.  These</td><td> </td><td class="right">   experiment may use multiple options simultaneously.  These</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   experimental options are highly likely to have different meanings</td><td> </td><td class="right">   experimental options are highly likely to have different meanings</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   when used for different experiments.  Therefore, they SHOULD NOT be</td><td> </td><td class="right">   when used for different experiments.  Therefore, they SHOULD NOT be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   used without an explicit human decision and SHOULD NOT be used in</td><td> </td><td class="right">   used without an explicit human decision and SHOULD NOT be used in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   unmanaged networks such as home networks.</td><td> </td><td class="right">   unmanaged networks such as home networks.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   These names are also RECOMMENDED for use in documentation examples.</td><td> </td><td class="right">   These names are also RECOMMENDED for use in documentation examples.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">4.  Implementation Status [RFC Editor: please remove]</td><td> </td><td class="right">4.  Implementation Status [RFC Editor: please remove]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Two prototype implementations of GRASP have been made.</td><td> </td><td class="right">   Two prototype implementations of GRASP have been made.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">4.1.  BUPT C++ Implementation</td><td> </td><td class="right">4.1.  BUPT C++ Implementation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Name: BaseNegotiator.cpp, msg.cpp, Client.cpp, Server.cpp</td><td> </td><td class="right">   o  Name: BaseNegotiator.cpp, msg.cpp, Client.cpp, Server.cpp</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0062"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   o  Description: C++ implementation of GRASP <span class="delete">kernel</span> and API</td><td> </td><td class="rblock">   o  Description: C++ implementation of GRASP <span class="insert">core</span> and API</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Maturity: Prototype code, interoperable between Ubuntu.</td><td> </td><td class="right">   o  Maturity: Prototype code, interoperable between Ubuntu.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Coverage: Corresponds to draft-carpenter-anima-gdn-protocol-03.</td><td> </td><td class="right">   o  Coverage: Corresponds to draft-carpenter-anima-gdn-protocol-03.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Since it was implemented based on the old version draft, the most</td><td> </td><td class="right">      Since it was implemented based on the old version draft, the most</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      significant limitations comparing to current protocol design</td><td> </td><td class="right">      significant limitations comparing to current protocol design</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      include:</td><td> </td><td class="right">      include:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  Not support CBOR</td><td> </td><td class="right">      *  Not support CBOR</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-21" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-21"><em> page 43, line 27<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-21"><em> page 44, line 9<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Experience: https://github.com/liubingpang/IETF-Anima-Signaling-</td><td> </td><td class="right">   o  Experience: https://github.com/liubingpang/IETF-Anima-Signaling-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Protocol/blob/master/README.md</td><td> </td><td class="right">      Protocol/blob/master/README.md</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Contact: https://github.com/liubingpang/IETF-Anima-Signaling-</td><td> </td><td class="right">   o  Contact: https://github.com/liubingpang/IETF-Anima-Signaling-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Protocol</td><td> </td><td class="right">      Protocol</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">4.2.  Python Implementation</td><td> </td><td class="right">4.2.  Python Implementation</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Name: graspy</td><td> </td><td class="right">   o  Name: graspy</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0063"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   o  Description: Python 3 implementation of GRASP <span class="delete">kernel</span> and API.</td><td> </td><td class="rblock">   o  Description: Python 3 implementation of GRASP <span class="insert">core</span> and API.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Maturity: Prototype code, interoperable between Windows 7 and</td><td> </td><td class="right">   o  Maturity: Prototype code, interoperable between Windows 7 and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Linux.</td><td> </td><td class="right">      Linux.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  Coverage: Corresponds to draft-ietf-anima-grasp-08.  Limitations</td><td> </td><td class="right">   o  Coverage: Corresponds to draft-ietf-anima-grasp-08.  Limitations</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      include:</td><td> </td><td class="right">      include:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  insecure: uses a dummy ACP module and does not implement TLS</td><td> </td><td class="right">      *  insecure: uses a dummy ACP module and does not implement TLS</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      *  only coded for IPv6, any IPv4 is accidental</td><td> </td><td class="right">      *  only coded for IPv6, any IPv4 is accidental</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-22" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-22"><em> page 45, line 18<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-22"><em> page 45, line 47<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      Generally speaking, no personal information is expected to be</td><td> </td><td class="right">      Generally speaking, no personal information is expected to be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      involved in the signaling protocol, so there should be no direct</td><td> </td><td class="right">      involved in the signaling protocol, so there should be no direct</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      impact on personal privacy.  Nevertheless, traffic flow paths,</td><td> </td><td class="right">      impact on personal privacy.  Nevertheless, traffic flow paths,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      VPNs, etc. could be negotiated, which could be of interest for</td><td> </td><td class="right">      VPNs, etc. could be negotiated, which could be of interest for</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      traffic analysis.  Also, operators generally want to conceal</td><td> </td><td class="right">      traffic analysis.  Also, operators generally want to conceal</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      details of their network topology and traffic density from</td><td> </td><td class="right">      details of their network topology and traffic density from</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      outsiders.  Therefore, since insider attacks cannot be excluded in</td><td> </td><td class="right">      outsiders.  Therefore, since insider attacks cannot be excluded in</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      a large network, the security mechanism for the protocol MUST</td><td> </td><td class="right">      a large network, the security mechanism for the protocol MUST</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      provide message confidentiality.  This is why Section 3.5.1</td><td> </td><td class="right">      provide message confidentiality.  This is why Section 3.5.1</td><td class="lineno"></td></tr>
      <tr id="diff0064"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">      requires either an ACP or <span class="delete">the use of TLS</span>.</td><td> </td><td class="rblock">      requires either an ACP or <span class="insert">an alternative security mechanism</span>.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   - Link-local multicast security</td><td> </td><td class="right">   - Link-local multicast security</td><td class="lineno"></td></tr>
      <tr id="diff0065"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">                                                                         </span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      GRASP has no reasonable alternative to using link-local multicast</td><td> </td><td class="right">      GRASP has no reasonable alternative to using link-local multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      for Discovery or Flood Synchronization messages and these messages</td><td> </td><td class="right">      for Discovery or Flood Synchronization messages and these messages</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      are sent in clear and with no authentication.  They are therefore</td><td> </td><td class="right">      are sent in clear and with no authentication.  They are therefore</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      available to on-link eavesdroppers, and could be forged by on-link</td><td> </td><td class="right">      available to on-link eavesdroppers, and could be forged by on-link</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      attackers.  In the case of Discovery, the Discovery Responses are</td><td> </td><td class="right">      attackers.  In the case of Discovery, the Discovery Responses are</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      unicast and will therefore be protected (Section 3.5.1), and an</td><td> </td><td class="right">      unicast and will therefore be protected (Section 3.5.1), and an</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      untrusted forger will not be able to receive responses.  In the</td><td> </td><td class="right">      untrusted forger will not be able to receive responses.  In the</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      case of Flood Synchronization, an on-link eavesdropper will be</td><td> </td><td class="right">      case of Flood Synchronization, an on-link eavesdropper will be</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      able to receive the flooded objectives but there is no response</td><td> </td><td class="right">      able to receive the flooded objectives but there is no response</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      message to consider.  Some precautions for Flood Synchronization</td><td> </td><td class="right">      message to consider.  Some precautions for Flood Synchronization</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-23" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-23"><em> page 51, line 30<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-23"><em> page 52, line 22<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [I-D.chaparadza-intarea-igcp]</td><td> </td><td class="right">   [I-D.chaparadza-intarea-igcp]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Behringer, M., Chaparadza, R., Petre, R., Li, X., and H.</td><td> </td><td class="right">              Behringer, M., Chaparadza, R., Petre, R., Li, X., and H.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Mahkonen, "IP based Generic Control Protocol (IGCP)",</td><td> </td><td class="right">              Mahkonen, "IP based Generic Control Protocol (IGCP)",</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              draft-chaparadza-intarea-igcp-00 (work in progress), July</td><td> </td><td class="right">              draft-chaparadza-intarea-igcp-00 (work in progress), July</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              2011.</td><td> </td><td class="right">              2011.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [I-D.ietf-anima-autonomic-control-plane]</td><td> </td><td class="right">   [I-D.ietf-anima-autonomic-control-plane]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Behringer, M., Eckert, T., and S. Bjarnason, "An Autonomic</td><td> </td><td class="right">              Behringer, M., Eckert, T., and S. Bjarnason, "An Autonomic</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Control Plane", draft-ietf-anima-autonomic-control-</td><td> </td><td class="right">              Control Plane", draft-ietf-anima-autonomic-control-</td><td class="lineno"></td></tr>
      <tr id="diff0066"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">              plane-0<span class="delete">3 (work in progress), July</span> 2016.</td><td> </td><td class="rblock">              plane-0<span class="insert">4 (work in progress), October</span> 2016.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [I-D.ietf-anima-bootstrapping-keyinfra]</td><td> </td><td class="right">   [I-D.ietf-anima-bootstrapping-keyinfra]</td><td class="lineno"></td></tr>
      <tr id="diff0067"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">              Pritikin, M., Richardson, M., Behringer, M., <span class="delete">and S.</span></td><td> </td><td class="rblock">              Pritikin, M., Richardson, M., Behringer, M., Bjarnason,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">              Bjarnason, "Bootstrapping Remote Secure Key</td><td> </td><td class="rblock">              <span class="insert">S., and K. Watsen,</span> "Bootstrapping Remote Secure Key</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Infrastructures (BRSKI)", draft-ietf-anima-bootstrapping-</td><td> </td><td class="right">              Infrastructures (BRSKI)", draft-ietf-anima-bootstrapping-</td><td class="lineno"></td></tr>
      <tr id="diff0068"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">              keyinfra-0<span class="delete">3 (work in progress), June</span> 2016.</td><td> </td><td class="rblock">              keyinfra-0<span class="insert">4 (work in progress), October</span> 2016.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [I-D.ietf-anima-reference-model]</td><td> </td><td class="right">   [I-D.ietf-anima-reference-model]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,</td><td> </td><td class="right">              Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Pierre, P., Liu, B., Nobre, J., and J. Strassner, "A</td><td> </td><td class="right">              Pierre, P., Liu, B., Nobre, J., and J. Strassner, "A</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Reference Model for Autonomic Networking", draft-ietf-</td><td> </td><td class="right">              Reference Model for Autonomic Networking", draft-ietf-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              anima-reference-model-02 (work in progress), July 2016.</td><td> </td><td class="right">              anima-reference-model-02 (work in progress), July 2016.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [I-D.ietf-anima-stable-connectivity]</td><td> </td><td class="right">   [I-D.ietf-anima-stable-connectivity]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Eckert, T. and M. Behringer, "Using Autonomic Control</td><td> </td><td class="right">              Eckert, T. and M. Behringer, "Using Autonomic Control</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Plane for Stable Connectivity of Network OAM", draft-ietf-</td><td> </td><td class="right">              Plane for Stable Connectivity of Network OAM", draft-ietf-</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-24" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-24"><em> page 54, line 10<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-24"><em> page 54, line 46<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service</td><td> </td><td class="right">   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Discovery", RFC 6763, DOI 10.17487/RFC6763, February 2013,</td><td> </td><td class="right">              Discovery", RFC 6763, DOI 10.17487/RFC6763, February 2013,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              &lt;http://www.rfc-editor.org/info/rfc6763&gt;.</td><td> </td><td class="right">              &lt;http://www.rfc-editor.org/info/rfc6763&gt;.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and</td><td> </td><td class="right">   [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              P. Selkirk, "Port Control Protocol (PCP)", RFC 6887,</td><td> </td><td class="right">              P. Selkirk, "Port Control Protocol (PCP)", RFC 6887,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              DOI 10.17487/RFC6887, April 2013,</td><td> </td><td class="right">              DOI 10.17487/RFC6887, April 2013,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              &lt;http://www.rfc-editor.org/info/rfc6887&gt;.</td><td> </td><td class="right">              &lt;http://www.rfc-editor.org/info/rfc6887&gt;.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0069"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">[RFC7228]  Bormann, C., Ersue, M., and A. Keranen, "Terminology for</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">              Constrained-Node Networks", RFC 7228,</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">              DOI 10.17487/RFC7228, May 2014,</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"><span class="delete">              &lt;http://www.rfc-editor.org/info/rfc7228&gt;.</span></td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock">                                                                         </td><td> </td><td class="rblock"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC7558]  Lynn, K., Cheshire, S., Blanchet, M., and D. Migault,</td><td> </td><td class="right">   [RFC7558]  Lynn, K., Cheshire, S., Blanchet, M., and D. Migault,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              "Requirements for Scalable DNS-Based Service Discovery</td><td> </td><td class="right">              "Requirements for Scalable DNS-Based Service Discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              (DNS-SD) / Multicast DNS (mDNS) Extensions", RFC 7558,</td><td> </td><td class="right">              (DNS-SD) / Multicast DNS (mDNS) Extensions", RFC 7558,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              DOI 10.17487/RFC7558, July 2015,</td><td> </td><td class="right">              DOI 10.17487/RFC7558, July 2015,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              &lt;http://www.rfc-editor.org/info/rfc7558&gt;.</td><td> </td><td class="right">              &lt;http://www.rfc-editor.org/info/rfc7558&gt;.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC7575]  Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,</td><td> </td><td class="right">   [RFC7575]  Behringer, M., Pritikin, M., Bjarnason, S., Clemm, A.,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Carpenter, B., Jiang, S., and L. Ciavaglia, "Autonomic</td><td> </td><td class="right">              Carpenter, B., Jiang, S., and L. Ciavaglia, "Autonomic</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Networking: Definitions and Design Goals", RFC 7575,</td><td> </td><td class="right">              Networking: Definitions and Design Goals", RFC 7575,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              DOI 10.17487/RFC7575, June 2015,</td><td> </td><td class="right">              DOI 10.17487/RFC7575, June 2015,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-25" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-25"><em> page 54, line 42<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-25"><em> page 55, line 26<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC7787]  Stenberg, M. and S. Barth, "Distributed Node Consensus</td><td> </td><td class="right">   [RFC7787]  Stenberg, M. and S. Barth, "Distributed Node Consensus</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Protocol", RFC 7787, DOI 10.17487/RFC7787, April 2016,</td><td> </td><td class="right">              Protocol", RFC 7787, DOI 10.17487/RFC7787, April 2016,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              &lt;http://www.rfc-editor.org/info/rfc7787&gt;.</td><td> </td><td class="right">              &lt;http://www.rfc-editor.org/info/rfc7787&gt;.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [RFC7788]  Stenberg, M., Barth, S., and P. Pfister, "Home Networking</td><td> </td><td class="right">   [RFC7788]  Stenberg, M., Barth, S., and P. Pfister, "Home Networking</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              Control Protocol", RFC 7788, DOI 10.17487/RFC7788, April</td><td> </td><td class="right">              Control Protocol", RFC 7788, DOI 10.17487/RFC7788, April</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">              2016, &lt;http://www.rfc-editor.org/info/rfc7788&gt;.</td><td> </td><td class="right">              2016, &lt;http://www.rfc-editor.org/info/rfc7788&gt;.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Appendix A.  Open Issues [RFC Editor: Please remove if empty]</td><td> </td><td class="right">Appendix A.  Open Issues [RFC Editor: Please remove if empty]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0070"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   o  59.  <span class="delete">Placeholder.</span></td><td> </td><td class="rblock">   o  59.  <span class="insert">Add F_NEG_DRY flag to specify a "dry run" objective?.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   o  60.  Change M_FLOOD syntax to associate a locator with each</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      objective?</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   o  61.  Is the SONN constrained instance really needed?</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   o  62.  Is it helpful to tag descriptive text with message names</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">      (M_DISCOVER etc.)?</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Appendix B.  Closed Issues [RFC Editor: Please remove]</td><td> </td><td class="right">Appendix B.  Closed Issues [RFC Editor: Please remove]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  1.  UDP vs TCP: For now, this specification suggests UDP and TCP</td><td> </td><td class="right">   o  1.  UDP vs TCP: For now, this specification suggests UDP and TCP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      as message transport mechanisms.  This is not clarified yet.  UDP</td><td> </td><td class="right">      as message transport mechanisms.  This is not clarified yet.  UDP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      is good for short conversations, is necessary for multicast</td><td> </td><td class="right">      is good for short conversations, is necessary for multicast</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      discovery, and generally fits the discovery and divert scenarios</td><td> </td><td class="right">      discovery, and generally fits the discovery and divert scenarios</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      well.  However, it will cause problems with large messages.  TCP</td><td> </td><td class="right">      well.  However, it will cause problems with large messages.  TCP</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      is good for stable and long sessions, with a little bit of time</td><td> </td><td class="right">      is good for stable and long sessions, with a little bit of time</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      consumption during the session establishment stage.  If messages</td><td> </td><td class="right">      consumption during the session establishment stage.  If messages</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-26" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-26"><em> page 62, line 32<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-26"><em> page 63, line 25<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  57.  Add M_INVALID message?</td><td> </td><td class="right">   o  57.  Add M_INVALID message?</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      RESOLVED: Done.</td><td> </td><td class="right">      RESOLVED: Done.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   o  58.  Maximum message size?</td><td> </td><td class="right">   o  58.  Maximum message size?</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">      RESOLVED by specifying default maximum message size (2048 bytes).</td><td> </td><td class="right">      RESOLVED by specifying default maximum message size (2048 bytes).</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">Appendix C.  Change log [RFC Editor: Please remove]</td><td> </td><td class="right">Appendix C.  Change log [RFC Editor: Please remove]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0071"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   <span class="insert">draft-ietf-anima-grasp-09, 2016-12-xx:</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Concentrated mentions of TLS in one sub-section, with all details out</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   of scope.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Strengthened text restricting LL addresses in locator options.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Clarified description of rapid mode processsing.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Specified that cached discovery results should not be returned on the</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   same interface where they were learned.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Shortened text in "High Level Design Choices"</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Dropped the word 'kernel' to avoid confusion with o/s kernel mode.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert"></span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock"><span class="insert">   Editorial improvements.</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">                                                                         </td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   draft-ietf-anima-grasp-08, 2016-10-30:</td><td> </td><td class="right">   draft-ietf-anima-grasp-08, 2016-10-30:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Protocol change: Added M_INVALID message.</td><td> </td><td class="right">   Protocol change: Added M_INVALID message.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Protocol change: Increased Session ID space to 32 bits.</td><td> </td><td class="right">   Protocol change: Increased Session ID space to 32 bits.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Enhanced rules to avoid Session ID clashes.</td><td> </td><td class="right">   Enhanced rules to avoid Session ID clashes.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Corrected and completed description of timeouts for Request messages.</td><td> </td><td class="right">   Corrected and completed description of timeouts for Request messages.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-27" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-27"><em> page 64, line 19<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-27"><em> page 65, line 28<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   draft-ietf-anima-grasp-05, 2016-05-13:</td><td> </td><td class="right">   draft-ietf-anima-grasp-05, 2016-05-13:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Noted in requirement T1 that it should be possible to implement ASAs</td><td> </td><td class="right">   Noted in requirement T1 that it should be possible to implement ASAs</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   independently as user space programs.</td><td> </td><td class="right">   independently as user space programs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Protocol change: Added protocol number and port to discovery</td><td> </td><td class="right">   Protocol change: Added protocol number and port to discovery</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   response.  Updated protocol description, CDDL and IANA considerations</td><td> </td><td class="right">   response.  Updated protocol description, CDDL and IANA considerations</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   accordingly.</td><td> </td><td class="right">   accordingly.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Clarified that discovery and flood multicasts are handled by the</td><td> </td><td class="right">   Clarified that discovery and flood multicasts are handled by the</td><td class="lineno"></td></tr>
      <tr id="diff0072"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   GRASP <span class="delete">kernel</span>, not directly by ASAs.</td><td> </td><td class="rblock">   GRASP <span class="insert">core</span>, not directly by ASAs.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Clarified that a node may discover an objective without supporting it</td><td> </td><td class="right">   Clarified that a node may discover an objective without supporting it</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   for synchronization or negotiation.</td><td> </td><td class="right">   for synchronization or negotiation.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Added Implementation Status section.</td><td> </td><td class="right">   Added Implementation Status section.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Added reference to SCSP.</td><td> </td><td class="right">   Added reference to SCSP.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Editorial fixes.</td><td> </td><td class="right">   Editorial fixes.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-28" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-28"><em> page 68, line 11<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-28"><em> page 69, line 22<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left">   1.  CBOR diagnostic notation.</td><td> </td><td class="right">   1.  CBOR diagnostic notation.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   2.  Similar, but showing the names of the constants.</td><td> </td><td class="right">   2.  Similar, but showing the names of the constants.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   3.  Hexadecimal version of the CBOR wire format.</td><td> </td><td class="right">   3.  Hexadecimal version of the CBOR wire format.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   Long lines are split for display purposes only.</td><td> </td><td class="right">   Long lines are split for display purposes only.</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">D.1.  Discovery Example</td><td> </td><td class="right">D.1.  Discovery Example</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0073"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   The initiator multicasts a discovery <span class="delete">message:</span></td><td> </td><td class="rblock">   The initiator <span class="insert">(2001:db8:f000:baaa:28cc:dc4c:9703:6781)</span> multicasts a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   discovery <span class="insert">message looking for objective EX1:</span></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [1, 13948744, h'20010db8f000baaa28ccdc4c97036781', ["EX1", 2, 2, 0]]</td><td> </td><td class="right">   [1, 13948744, h'20010db8f000baaa28ccdc4c97036781', ["EX1", 2, 2, 0]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_DISCOVERY, 13948744, h'20010db8f000baaa28ccdc4c97036781',</td><td> </td><td class="right">   [M_DISCOVERY, 13948744, h'20010db8f000baaa28ccdc4c97036781',</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                 ["EX1", F_SYNCH, 2, 0]]</td><td> </td><td class="right">                 ["EX1", F_SYNCH, 2, 0]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'84011a00d4d7485020010db8f000baaa28ccdc4c970367818463455831020200'</td><td> </td><td class="right">   h'84011a00d4d7485020010db8f000baaa28ccdc4c970367818463455831020200'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0074"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   A peer responds with a locator:</td><td> </td><td class="rblock">   A peer <span class="insert">(2001:0db8:f000:baaa:f000:baaa:f000:baaa)</span> responds with a</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   locator:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [2, 13948744, h'20010db8f000baaa28ccdc4c97036781', 60000,</td><td> </td><td class="right">   [2, 13948744, h'20010db8f000baaa28ccdc4c97036781', 60000,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                 [103, h'20010db8f000baaaf000baaaf000baaa', 6, 49443]]</td><td> </td><td class="right">                 [103, h'20010db8f000baaaf000baaaf000baaa', 6, 49443]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_RESPONSE, 13948744, h'20010db8f000baaa28ccdc4c97036781', 60000,</td><td> </td><td class="right">   [M_RESPONSE, 13948744, h'20010db8f000baaa28ccdc4c97036781', 60000,</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                 [O_IPv6_LOCATOR, h'20010db8f000baaaf000baaaf000baaa',</td><td> </td><td class="right">                 [O_IPv6_LOCATOR, h'20010db8f000baaaf000baaaf000baaa',</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                  IPPROTO_TCP, 49443]]</td><td> </td><td class="right">                  IPPROTO_TCP, 49443]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'85021a00d4d7485020010db8f000baaa28ccdc4c9703678119ea6084186750</td><td> </td><td class="right">   h'85021a00d4d7485020010db8f000baaa28ccdc4c9703678119ea6084186750</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     20010db8f000baaaf000baaaf000baaa0619c123'</td><td> </td><td class="right">     20010db8f000baaaf000baaaf000baaa0619c123'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">D.2.  Flood Example</td><td> </td><td class="right">D.2.  Flood Example</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="part-29" class="change" ><td></td><th><small>skipping to change at</small><a href="#part-29"><em> page 68, line 41<span class="hide"> &para;</span></em></a></th><th> </th><th><small>skipping to change at</small><a href="#part-29"><em> page 70, line 7<span class="hide"> &para;</span></em></a></th><td></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [9, 3504974, h'20010db8f000baaa28ccdc4c97036781', 10000, [],</td><td> </td><td class="right">   [9, 3504974, h'20010db8f000baaa28ccdc4c97036781', 10000, [],</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                ["EX1", 2, 2, ["Example 1 value=", 100]]]</td><td> </td><td class="right">                ["EX1", 2, 2, ["Example 1 value=", 100]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_FLOOD, 3504974, h'20010db8f000baaa28ccdc4c97036781', 10000, [],</td><td> </td><td class="right">   [M_FLOOD, 3504974, h'20010db8f000baaa28ccdc4c97036781', 10000, [],</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">                ["EX1", F_SYNCH, 2, ["Example 1 value=", 100]]]</td><td> </td><td class="right">                ["EX1", F_SYNCH, 2, ["Example 1 value=", 100]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'86091a00357b4e5020010db8f000baaa28ccdc4c9703678119271080846345</td><td> </td><td class="right">   h'86091a00357b4e5020010db8f000baaa28ccdc4c9703678119271080846345</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">     5831020282704578616d706c6520312076616c75653d1864'</td><td> </td><td class="right">     5831020282704578616d706c6520312076616c75653d1864'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">D.3.  Synchronization Example</td><td> </td><td class="right">D.3.  Synchronization Example</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0075"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">The</span> initiator unicasts a request:</td><td> </td><td class="rblock">   <span class="insert">Following successful discovery of objective EX2, the</span> initiator</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   unicasts a request:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [4, 4038926, ["EX2", 2, 5, 0]]</td><td> </td><td class="right">   [4, 4038926, ["EX2", 2, 5, 0]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_REQ_SYN, 4038926, ["EX2", F_SYNCH, 5, 0]]</td><td> </td><td class="right">   [M_REQ_SYN, 4038926, ["EX2", F_SYNCH, 5, 0]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'83041a003da10e8463455832020500'</td><td> </td><td class="right">   h'83041a003da10e8463455832020500'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The peer responds with a value:</td><td> </td><td class="right">   The peer responds with a value:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"> [8, 4038926, ["EX2", 2, 5, ["Example 2 value=", 200]]]</td><td> </td><td class="right"> [8, 4038926, ["EX2", 2, 5, ["Example 2 value=", 200]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"> [M_SYNCH, 4038926, ["EX2", F_SYNCH, 5, ["Example 2 value=", 200]]]</td><td> </td><td class="right"> [M_SYNCH, 4038926, ["EX2", F_SYNCH, 5, ["Example 2 value=", 200]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"> h'83081a003da10e8463455832020582704578616d706c6520322076616c75653d18c8'</td><td> </td><td class="right"> h'83081a003da10e8463455832020582704578616d706c6520322076616c75653d18c8'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">D.4.  Simple Negotiation Example</td><td> </td><td class="right">D.4.  Simple Negotiation Example</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0076"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">The</span> initiator unicasts a request:</td><td> </td><td class="rblock">   <span class="insert">Following successful discovery of objective EX3, the</span> initiator</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="lblock"></td><td> </td><td class="rblock">   unicasts a request:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [3, 802813, ["EX3", 1, 6, ["NZD", 47]]]</td><td> </td><td class="right">   [3, 802813, ["EX3", 1, 6, ["NZD", 47]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_REQ_NEG, 802813, ["EX3", 1, 6, ["NZD", 47]]]</td><td> </td><td class="right">   [M_REQ_NEG, 802813, ["EX3", 1, 6, ["NZD", 47]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'83031a000c3ffd8463455833010682634e5a44182f'</td><td> </td><td class="right">   h'83031a000c3ffd8463455833010682634e5a44182f'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The peer responds with immediate acceptance.  Note that no objective</td><td> </td><td class="right">   The peer responds with immediate acceptance.  Note that no objective</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   is needed, because the initiator's request was accepted without</td><td> </td><td class="right">   is needed, because the initiator's request was accepted without</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   change:</td><td> </td><td class="right">   change:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [6, 802813, [101]]</td><td> </td><td class="right">   [6, 802813, [101]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_END , 802813, [O_ACCEPT]]</td><td> </td><td class="right">   [M_END , 802813, [O_ACCEPT]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'83061a000c3ffd811865'</td><td> </td><td class="right">   h'83061a000c3ffd811865'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">D.5.  Complete Negotiation Example</td><td> </td><td class="right">D.5.  Complete Negotiation Example</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr id="diff0077"><td></td></tr>
      <tr><td class="lineno"></td><td class="lblock">   <span class="delete">T</span>he initiator unicasts a request:</td><td> </td><td class="rblock">   <span class="insert">Again t</span>he initiator unicasts a request:</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [3, 13767778, ["EX3", 1, 6, ["NZD", 410]]]</td><td> </td><td class="right">   [3, 13767778, ["EX3", 1, 6, ["NZD", 410]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_REQ_NEG, 13767778, ["EX3", F_NEG, 6, ["NZD", 410]]]</td><td> </td><td class="right">   [M_REQ_NEG, 13767778, ["EX3", F_NEG, 6, ["NZD", 410]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'83031a00d214628463455833010682634e5a4419019a'</td><td> </td><td class="right">   h'83031a00d214628463455833010682634e5a4419019a'</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   The responder starts to negotiate (making an offer):</td><td> </td><td class="right">   The responder starts to negotiate (making an offer):</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left"></td><td> </td><td class="right"></td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [5, 13767778, ["EX3", 1, 6, ["NZD", 80]]]</td><td> </td><td class="right">   [5, 13767778, ["EX3", 1, 6, ["NZD", 80]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   [M_NEGOTIATE, 13767778, ["EX3", F_NEG, 6, ["NZD", 80]]]</td><td> </td><td class="right">   [M_NEGOTIATE, 13767778, ["EX3", F_NEG, 6, ["NZD", 80]]]</td><td class="lineno"></td></tr>
      <tr><td class="lineno"></td><td class="left">   h'83051a00d214628463455833010682634e5a441850'</td><td> </td><td class="right">   h'83051a00d214628463455833010682634e5a441850'</td><td class="lineno"></td></tr>

     <tr><td></td><td class="left"></td><td> </td><td class="right"></td><td></td></tr>
     <tr id="end" bgcolor="gray"><th colspan="5" align="center">&nbsp;End of changes. 77 change blocks.&nbsp;</th></tr>
     <tr class="stats"><td></td><th><i>241 lines changed or deleted</i></th><th><i> </i></th><th><i>276 lines changed or added</i></th><td></td></tr>
     <tr><td colspan="5" align="center" class="small"><br/>This html diff was produced by rfcdiff 1.45. The latest version is available from <a href="http://www.tools.ietf.org/tools/rfcdiff/" >http://tools.ietf.org/tools/rfcdiff/</a> </td></tr>
   </table>
   </body>
   </html>
